Processing grammar.
$accept(0)
$end(1)
error(2)
es(3)
e(4)
declaration-statement(5)
COLON_IDENTIFIER(6)
COLON(7)
IDENTIFIER_WITH_TEMPLATE(8)
BOOLEAN_LITERAL(9)
TRUE(10)
FALSE(11)
literal(12)
REAL_LITERAL(13)
INTEGER_LITERAL(14)
STRING_LITERAL(15)
CHARACTER_LITERAL(16)
NULL(17)
namespace-name(18)
namespace-or-type-name(19)
type-name(20)
DOUBLE_COLON(21)
IDENTIFIER_WITH_KEYWORD(22)
DOT(23)
IDENTIFIER(24)
TEMPLATE(25)
STARS(26)
STAR(27)
type(28)
non-array-type(29)
AMP(30)
array-type(31)
CONST(32)
type-with-interr(33)
INTERR(34)
SBYTE(35)
BYTE(36)
SHORT(37)
USHORT(38)
INT(39)
UINT(40)
LONG(41)
ULONG(42)
CHAR(43)
FLOAT(44)
DOUBLE(45)
DECIMAL(46)
BOOL(47)
OBJECT(48)
STRING(49)
VOID(50)
AUTO(51)
rank-specifiers(52)
rank-specifier(53)
OPEN_BRACKET(54)
dim-separators(55)
CLOSE_BRACKET(56)
COMMA(57)
variable-reference(58)
expression(59)
argument-list(60)
argument(61)
REF(62)
OUT(63)
primary-expression(64)
primary-no-array-creation-expression(65)
array-creation-expression(66)
lambda-expression(67)
cast-expression(68)
parenthesized-expression(69)
double-colon-access(70)
member-access(71)
invocation-expressions(72)
element-access(73)
this-access(74)
base-access(75)
post-increment-expression(76)
post-decrement-expression(77)
delegate-creation-expression(78)
object-creation-expression(79)
typeof-expression(80)
sizeof-expression(81)
checked-expression(82)
unchecked-expression(83)
OP_DBLPTR(84)
block(85)
DELEGATE(86)
delegate-expression(87)
type-expression-list(88)
dbl-expression-list(89)
OPEN_PARENS(90)
CLOSE_PARENS(91)
expression-list(92)
formal-parameter-list(93)
invocation-expression(94)
OP_PTR(95)
keyword-invocation(96)
DEFAULT(97)
AWAIT(98)
THIS(99)
BASE(100)
OP_INC(101)
OP_DEC(102)
type-with-identifier(103)
NEW(104)
IDENTIFIER_WITH_DOT(105)
block-expression-with-brace(106)
argument-list-with-braces(107)
argument-list-with-brace(108)
OPEN_BRACE(109)
CLOSE_BRACE(110)
STACKALLOC(111)
array-initializer(112)
TYPEOF(113)
SIZEOF(114)
CHECKED(115)
UNCHECKED(116)
unary-expression(117)
pre-increment-expression(118)
pre-decrement-expression(119)
PLUS(120)
OP_COALESCING(121)
MINUS(122)
BANG(123)
TILDE(124)
expression-with-comma(125)
multiplicative-expression(126)
DIV(127)
PERCENT(128)
additive-expression(129)
shift-expression(130)
OP_LEFT_SHIFT(131)
RIGHT_SHIFT(132)
relational-expression(133)
LT(134)
GT(135)
OP_LE(136)
OP_GE(137)
IS(138)
AS(139)
equality-expression(140)
OP_EQ(141)
OP_NE(142)
and-expression(143)
exclusive-or-expression(144)
CARET(145)
inclusive-or-expression(146)
BITWISE_OR(147)
conditional-and-expression(148)
OP_AND(149)
conditional-or-expression(150)
OP_OR(151)
conditional-expression(152)
assignment(153)
assignment-operator(154)
block-expression(155)
block-expression-list-unit(156)
block-expression-list(157)
ASSIGN(158)
OP_ADD_ASSIGNMENT(159)
OP_SUB_ASSIGNMENT(160)
OP_MULT_ASSIGNMENT(161)
OP_DIV_ASSIGNMENT(162)
OP_MOD_ASSIGNMENT(163)
OP_AND_ASSIGNMENT(164)
OP_OR_ASSIGNMENT(165)
OP_XOR_ASSIGNMENT(166)
OP_LEFT_SHIFT_ASSIGNMENT(167)
RIGHT_SHIFT_ASSIGNMENT(168)
constant-expression(169)
boolean-expression(170)
statement(171)
labeled-statement(172)
embedded-statement(173)
empty-statement(174)
statement-expression(175)
SEMICOLON(176)
selection-statement(177)
iteration-statement(178)
jump-statement(179)
try-statement(180)
checked-statement(181)
unchecked-statement(182)
lock-statement(183)
using-statement(184)
unsafe-statement(185)
fixed-statement(186)
modifiers(187)
FIXED(188)
local-variable-declarators(189)
UNSAFE(190)
statement-list(191)
switch-labels(192)
local-variable-declaration(193)
local-constant-declaration(194)
local-variable-declarator(195)
local-variable(196)
local-variable-initializer(197)
constant-declarators(198)
constant-declarator(199)
if-statement(200)
switch-statement(201)
IF(202)
ELSE(203)
SWITCH(204)
switch-block(205)
switch-sections(206)
switch-section(207)
switch-label(208)
CASE(209)
while-statement(210)
do-statement(211)
for-statement(212)
foreach-statement(213)
WHILE(214)
DO(215)
FOR(216)
for-initializer(217)
for-condition(218)
for-iterator(219)
statement-expression-list(220)
FOREACH(221)
IN(222)
break-statement(223)
continue-statement(224)
goto-statement(225)
return-statement(226)
throw-statement(227)
YIELD(228)
BREAK(229)
CONTINUE(230)
GOTO(231)
RETURN(232)
THROW(233)
TRY(234)
catch-clauses(235)
finally-clause(236)
specific-catch-clauses(237)
general-catch-clause(238)
specific-catch-clause(239)
CATCH(240)
FINALLY(241)
LOCK(242)
USING(243)
resource-acquisition(244)
variable-initializer-list(245)
variable-initializer(246)
global-attributes(247)
global-attribute-sections(248)
global-attribute-section(249)
global-attribute-target-specifier(250)
attribute-list(251)
global-attribute-target(252)
ASSEMBLY(253)
MODULE(254)
attributes(255)
attribute-sections(256)
attribute-section(257)
attribute-target-specifier(258)
attribute-target(259)
FIELD(260)
METHOD(261)
PARAM(262)
PROPERTY(263)
TYPE(264)
attribute(265)
attribute-name(266)
attribute-arguments(267)
positional-argument-list(268)
named-argument-list(269)
positional-argument(270)
attribute-argument-expression(271)
named-argument(272)
delegate-declaration(273)
where-base(274)
enum-declaration(275)
enum-class(276)
enum-body(277)
enum-base(278)
ENUM(279)
class-key(280)
enum-member-declarations(281)
enum-member-declaration(282)
interface-declaration(283)
INTERFACE(284)
interface-body(285)
interface-base(286)
interface-type-list(287)
interface-member-declarations(288)
interface-member-declaration(289)
interface-method-declaration(290)
interface-property-declaration(291)
interface-indexer-declaration(292)
interface-accessors(293)
GET(294)
SET(295)
struct-declaration(296)
STRUCT(297)
struct-body(298)
struct-interfaces(299)
struct-member-declarations(300)
struct-member-declaration(301)
field-declaration(302)
method-declaration(303)
property-declaration(304)
indexer-declaration(305)
operator-declaration(306)
constructor-declaration(307)
static-constructor-declaration(308)
type-declaration(309)
compilationUnit(310)
EOF(311)
block_or_statement_list(312)
block_or_statement(313)
class-declaration(314)
class-member-declaration(315)
namespace-declaration(316)
NAMESPACE(317)
namespace-body(318)
using-directives(319)
namespace-member-declarations(320)
using-directive(321)
using-alias-directive(322)
using-namespace-directive(323)
namespace-member-declaration(324)
modifier(325)
ASYNC(326)
PUBLIC(327)
PARTIAL(328)
PROTECTED(329)
INTERNAL(330)
PRIVATE(331)
ABSTRACT(332)
SEALED(333)
STATIC(334)
READONLY(335)
VOLATILE(336)
VIRTUAL(337)
OVERRIDE(338)
EXTERN(339)
CLASS(340)
UNION(341)
class-body(342)
class-base(343)
base-list(344)
base-specifier(345)
access-specifier(346)
member-list(347)
class-member-declarations(348)
class-method-declaration(349)
destructor-declaration(350)
constant-declaration(351)
field-variable-declarators(352)
method-types(353)
field-variable-declarator(354)
member-name-with-double-colon(355)
variable-declarators(356)
variable-declarator(357)
method-header(358)
method-prefixs(359)
class-method-header(360)
method-prefix(361)
method-type(362)
member-name(363)
method-body(364)
fixed-parameters(365)
parameter-array(366)
fixed-parameter(367)
ADD(368)
REMOVE(369)
PARAMS(370)
WHERE(371)
parameter-modifier(372)
accessor-declarations(373)
get-accessor-declaration(374)
set-accessor-declaration(375)
indexer-declarator(376)
operator-declarator(377)
unary-operator-declarator(378)
binary-operator-declarator(379)
conversion-operator-declarator(380)
OPERATOR(381)
overloadable-operator(382)
overloadable-unary-operator(383)
overloadable-binary-operator(384)
IMPLICIT(385)
EXPLICIT(386)
constructor-declarator(387)
constructor-initializer(388)

Item sets
------

item set 0 
$accept -> .compilationUnit $end #lookaheads= $end
compilationUnit -> .EOF
compilationUnit -> .block_or_statement_list EOF
block_or_statement_list -> .block_or_statement_list block_or_statement
block_or_statement_list -> .block_or_statement
block_or_statement -> .class-declaration
block_or_statement -> .method-declaration
block_or_statement -> .class-member-declaration
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
method-declaration -> .method-header method-prefixs block
method-declaration -> .method-header block
class-member-declaration -> .class-method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
class-member-declaration -> .using-directive
class-key -> .CLASS
class-key -> .STRUCT
class-key -> .UNION
method-header -> .method-types member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes method-types member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-declaration -> .class-method-header method-prefixs block SEMICOLON
class-method-declaration -> .class-method-header method-prefixs block
class-method-declaration -> .class-method-header method-prefixs SEMICOLON
class-method-declaration -> .class-method-header method-prefixs
class-method-declaration -> .class-method-header block SEMICOLON
class-method-declaration -> .class-method-header block
class-method-declaration -> .class-method-header SEMICOLON
class-method-declaration -> .class-method-header
field-declaration -> .field-variable-declarators SEMICOLON
field-declaration -> .method-types field-variable-declarators SEMICOLON
field-declaration -> .attributes method-types field-variable-declarators SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
method-types -> .method-types method-type
method-types -> .method-type
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
attributes -> .attribute-sections
class-method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .member-name-with-double-colon
field-variable-declarators -> .field-variable-declarators COMMA field-variable-declarator
field-variable-declarators -> .field-variable-declarator
type-with-interr -> .type INTERR
type-with-interr -> .type
modifiers -> .modifier
modifiers -> .modifiers modifier
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
field-variable-declarator -> .member-name-with-double-colon ASSIGN variable-initializer
field-variable-declarator -> .member-name-with-double-colon
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
enum-class -> .ENUM class-key
enum-class -> .ENUM
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"compilationUnit":1,"EOF":2,"block_or_statement_list":3,"block_or_statement":4,"class-declaration":5,"method-declaration":6,"class-member-declaration":7,"class-key":8,"method-header":9,"class-method-declaration":10,"field-declaration":11,"property-declaration":12,"indexer-declaration":13,"operator-declaration":14,"constructor-declaration":15,"static-constructor-declaration":16,"destructor-declaration":17,"type-declaration":18,"using-directive":19,"CLASS":20,"STRUCT":21,"UNION":22,"method-types":23,"member-name-with-double-colon":24,"attributes":25,"class-method-header":26,"field-variable-declarators":27,"type-with-interr":28,"modifiers":29,"indexer-declarator":30,"constructor-declarator":31,"TILDE":32,"EXTERN":33,"struct-declaration":34,"interface-declaration":35,"enum-declaration":36,"delegate-declaration":37,"using-alias-directive":38,"using-namespace-directive":39,"method-type":40,"type":41,"attribute-sections":42,"field-variable-declarator":43,"modifier":44,"IDENTIFIER_WITH_TEMPLATE":45,"INTERFACE":46,"enum-class":47,"DELEGATE":48,"USING":49,"INTERR":50,"non-array-type":51,"array-type":52,"CONST":53,"attribute-section":54,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"NEW":69,"IDENTIFIER":70,"ENUM":71,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"OPEN_BRACKET":90,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 1 
$accept -> compilationUnit .$end #lookaheads= $end 
transitions ->  {}

item set 2 
compilationUnit -> EOF . 
transitions ->  {}

item set 3 
compilationUnit -> block_or_statement_list .EOF
block_or_statement_list -> block_or_statement_list .block_or_statement
block_or_statement -> .class-declaration
block_or_statement -> .method-declaration
block_or_statement -> .class-member-declaration
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
method-declaration -> .method-header method-prefixs block
method-declaration -> .method-header block
class-member-declaration -> .class-method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
class-member-declaration -> .using-directive
class-key -> .CLASS
class-key -> .STRUCT
class-key -> .UNION
method-header -> .method-types member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes method-types member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-declaration -> .class-method-header method-prefixs block SEMICOLON
class-method-declaration -> .class-method-header method-prefixs block
class-method-declaration -> .class-method-header method-prefixs SEMICOLON
class-method-declaration -> .class-method-header method-prefixs
class-method-declaration -> .class-method-header block SEMICOLON
class-method-declaration -> .class-method-header block
class-method-declaration -> .class-method-header SEMICOLON
class-method-declaration -> .class-method-header
field-declaration -> .field-variable-declarators SEMICOLON
field-declaration -> .method-types field-variable-declarators SEMICOLON
field-declaration -> .attributes method-types field-variable-declarators SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
method-types -> .method-types method-type
method-types -> .method-type
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
attributes -> .attribute-sections
class-method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .member-name-with-double-colon
field-variable-declarators -> .field-variable-declarators COMMA field-variable-declarator
field-variable-declarators -> .field-variable-declarator
type-with-interr -> .type INTERR
type-with-interr -> .type
modifiers -> .modifier
modifiers -> .modifiers modifier
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
field-variable-declarator -> .member-name-with-double-colon ASSIGN variable-initializer
field-variable-declarator -> .member-name-with-double-colon
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
enum-class -> .ENUM class-key
enum-class -> .ENUM
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"EOF":107,"block_or_statement":108,"class-declaration":5,"method-declaration":6,"class-member-declaration":7,"class-key":8,"method-header":9,"class-method-declaration":10,"field-declaration":11,"property-declaration":12,"indexer-declaration":13,"operator-declaration":14,"constructor-declaration":15,"static-constructor-declaration":16,"destructor-declaration":17,"type-declaration":18,"using-directive":19,"CLASS":20,"STRUCT":21,"UNION":22,"method-types":23,"member-name-with-double-colon":24,"attributes":25,"class-method-header":26,"field-variable-declarators":27,"type-with-interr":28,"modifiers":29,"indexer-declarator":30,"constructor-declarator":31,"TILDE":32,"EXTERN":33,"struct-declaration":34,"interface-declaration":35,"enum-declaration":36,"delegate-declaration":37,"using-alias-directive":38,"using-namespace-directive":39,"method-type":40,"type":41,"attribute-sections":42,"field-variable-declarator":43,"modifier":44,"IDENTIFIER_WITH_TEMPLATE":45,"INTERFACE":46,"enum-class":47,"DELEGATE":48,"USING":49,"INTERR":50,"non-array-type":51,"array-type":52,"CONST":53,"attribute-section":54,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"NEW":69,"IDENTIFIER":70,"ENUM":71,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"OPEN_BRACKET":90,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 4 
block_or_statement_list -> block_or_statement . 
transitions ->  {}

item set 5 
block_or_statement -> class-declaration . 
transitions ->  {}

item set 6 
block_or_statement -> method-declaration . 
transitions ->  {}

item set 7 
block_or_statement -> class-member-declaration . 
transitions ->  {}

item set 8 
class-declaration -> class-key .IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> class-key .IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> class-key .IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> class-key .IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> class-key .IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> class-key .IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> class-key .IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> class-key .IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> class-key .IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> class-key .IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":109,"IDENTIFIER":70}

item set 9 
method-declaration -> method-header .method-prefixs block
method-declaration -> method-header .block
method-prefixs -> .method-prefixs method-prefix
method-prefixs -> .method-prefix
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
method-prefix -> .CONST
method-prefix -> .OVERRIDE 
transitions ->  {"method-prefixs":110,"block":111,"method-prefix":112,"OPEN_BRACE":113,"CONST":114,"OVERRIDE":115}

item set 10 
class-member-declaration -> class-method-declaration . 
transitions ->  {}

item set 11 
class-member-declaration -> field-declaration . 
transitions ->  {}

item set 12 
class-member-declaration -> property-declaration . 
transitions ->  {}

item set 13 
class-member-declaration -> indexer-declaration . 
transitions ->  {}

item set 14 
class-member-declaration -> operator-declaration . 
transitions ->  {}

item set 15 
class-member-declaration -> constructor-declaration . 
transitions ->  {}

item set 16 
class-member-declaration -> static-constructor-declaration . 
transitions ->  {}

item set 17 
class-member-declaration -> destructor-declaration . 
transitions ->  {}

item set 18 
class-member-declaration -> type-declaration . 
transitions ->  {}

item set 19 
class-member-declaration -> using-directive . 
transitions ->  {}

item set 20 
class-key -> CLASS . 
transitions ->  {}

item set 21 
class-key -> STRUCT .
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":116,"IDENTIFIER":70}

item set 22 
class-key -> UNION . 
transitions ->  {}

item set 23 
method-header -> method-types .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> method-types .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
field-declaration -> method-types .field-variable-declarators SEMICOLON
method-types -> method-types .method-type
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
field-variable-declarators -> .field-variable-declarators COMMA field-variable-declarator
field-variable-declarators -> .field-variable-declarator
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
field-variable-declarator -> .member-name-with-double-colon ASSIGN variable-initializer
field-variable-declarator -> .member-name-with-double-colon
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":117,"field-variable-declarators":118,"method-type":119,"type":120,"field-variable-declarator":43,"INTERR":50,"modifier":121,"non-array-type":51,"array-type":52,"CONST":53,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106,"IDENTIFIER":70}

item set 24 
method-header -> member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON member-name
member-name-with-double-colon -> member-name-with-double-colon .COMMA member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name
class-method-header -> member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
class-method-header -> member-name-with-double-colon .
field-variable-declarator -> member-name-with-double-colon .ASSIGN variable-initializer
field-variable-declarator -> member-name-with-double-colon .
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"OPEN_PARENS":125,"member-name":126,"COMMA":127,"ASSIGN":128,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 25 
method-header -> attributes .method-types member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes .method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
field-declaration -> attributes .method-types field-variable-declarators SEMICOLON
property-declaration -> attributes .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> attributes .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes .modifiers operator-declarator method-body
constructor-declaration -> attributes .constructor-declarator method-body
constructor-declaration -> attributes .modifiers constructor-declarator method-body
static-constructor-declaration -> attributes .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> attributes .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> attributes .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
class-method-header -> attributes .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> attributes .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> attributes .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> attributes .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
method-types -> .method-types method-type
method-types -> .method-type
type-with-interr -> .type INTERR
type-with-interr -> .type
modifiers -> .modifier
modifiers -> .modifiers modifier
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
enum-class -> .ENUM class-key
enum-class -> .ENUM
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"method-types":133,"type-with-interr":134,"modifiers":135,"indexer-declarator":136,"constructor-declarator":137,"TILDE":138,"EXTERN":139,"type":140,"STRUCT":141,"INTERFACE":142,"enum-class":143,"DELEGATE":144,"method-type":40,"modifier":44,"IDENTIFIER_WITH_TEMPLATE":45,"non-array-type":51,"array-type":52,"CONST":53,"ENUM":71,"INTERR":50,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"NEW":69,"IDENTIFIER":70,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 26 
class-method-declaration -> class-method-header .method-prefixs block SEMICOLON
class-method-declaration -> class-method-header .method-prefixs block
class-method-declaration -> class-method-header .method-prefixs SEMICOLON
class-method-declaration -> class-method-header .method-prefixs
class-method-declaration -> class-method-header .block SEMICOLON
class-method-declaration -> class-method-header .block
class-method-declaration -> class-method-header .SEMICOLON
class-method-declaration -> class-method-header .
method-prefixs -> .method-prefixs method-prefix
method-prefixs -> .method-prefix
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
method-prefix -> .CONST
method-prefix -> .OVERRIDE 
transitions ->  {"method-prefixs":145,"block":146,"SEMICOLON":147,"method-prefix":112,"OPEN_BRACE":113,"CONST":114,"OVERRIDE":115}

item set 27 
field-declaration -> field-variable-declarators .SEMICOLON
field-variable-declarators -> field-variable-declarators .COMMA field-variable-declarator 
transitions ->  {"SEMICOLON":148,"COMMA":149}

item set 28 
property-declaration -> type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":150,"THIS":151,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 29 
property-declaration -> modifiers .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> modifiers .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> modifiers .operator-declarator method-body
constructor-declaration -> modifiers .constructor-declarator method-body
static-constructor-declaration -> modifiers .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> modifiers .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> modifiers .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> modifiers .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> modifiers .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
class-method-header -> modifiers .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> modifiers .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
modifiers -> modifiers .modifier
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
operator-declarator -> .unary-operator-declarator
operator-declarator -> .binary-operator-declarator
operator-declarator -> .conversion-operator-declarator
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attributes -> .attribute-sections
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
enum-class -> .ENUM class-key
enum-class -> .ENUM
unary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"type-with-interr":152,"indexer-declarator":153,"operator-declarator":154,"constructor-declarator":155,"IDENTIFIER_WITH_TEMPLATE":156,"TILDE":157,"attributes":158,"EXTERN":159,"type":160,"modifier":161,"STRUCT":162,"INTERFACE":163,"enum-class":164,"DELEGATE":165,"unary-operator-declarator":166,"binary-operator-declarator":167,"conversion-operator-declarator":168,"IDENTIFIER":70,"attribute-sections":42,"non-array-type":51,"array-type":52,"CONST":53,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"NEW":69,"ENUM":71,"IMPLICIT":169,"EXPLICIT":170,"attribute-section":54,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"OPEN_BRACKET":90,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 30 
indexer-declaration -> indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":171}

item set 31 
constructor-declaration -> constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":172,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 32 
destructor-declaration -> TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_KEYWORD -> TILDE .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":175,"IDENTIFIER_WITH_KEYWORD":176,"IDENTIFIER":70,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177}

item set 33 
destructor-declaration -> EXTERN .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifier -> EXTERN . 
transitions ->  {"TILDE":178}

item set 34 
type-declaration -> struct-declaration . 
transitions ->  {}

item set 35 
type-declaration -> interface-declaration . 
transitions ->  {}

item set 36 
type-declaration -> enum-declaration . 
transitions ->  {}

item set 37 
type-declaration -> delegate-declaration . 
transitions ->  {}

item set 38 
using-directive -> using-alias-directive . 
transitions ->  {}

item set 39 
using-directive -> using-namespace-directive . 
transitions ->  {}

item set 40 
method-types -> method-type .
method-type -> method-type .type
method-type -> method-type .
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":179,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 41 
member-name-with-double-colon -> type .member-name-with-double-colon
member-name-with-double-colon -> type .
class-method-header -> type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> type .INTERR
type-with-interr -> type .
method-type -> type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":180,"INTERR":181,"TEMPLATE":182,"rank-specifiers":183,"type":184,"rank-specifier":185,"non-array-type":51,"array-type":52,"CONST":53,"OPEN_BRACKET":186,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 42 
attributes -> attribute-sections .
attribute-sections -> attribute-sections .attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attribute-section":187,"OPEN_BRACKET":90}

item set 43 
field-variable-declarators -> field-variable-declarator . 
transitions ->  {}

item set 44 
modifiers -> modifier .
method-type -> modifier . 
transitions ->  {}

item set 45 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":188}

item set 46 
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":189,"IDENTIFIER":70}

item set 47 
enum-declaration -> enum-class .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> enum-class .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> enum-class .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> enum-class .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":190,"IDENTIFIER":70}

item set 48 
delegate-declaration -> DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":191,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 49 
using-alias-directive -> USING .IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> USING .namespace-name SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":193,"namespace-name":194,"IDENTIFIER":70,"namespace-or-type-name":195,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177}

item set 50 
method-type -> INTERR .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":196,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 51 
type -> non-array-type .AMP
type -> non-array-type .STARS
type -> non-array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"AMP":197,"STARS":198,"STAR":199}

item set 52 
type -> array-type .AMP
type -> array-type .STARS
type -> array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"AMP":200,"STARS":201,"STAR":199}

item set 53 
type -> CONST . 
transitions ->  {}

item set 54 
attribute-sections -> attribute-section . 
transitions ->  {}

item set 55 
modifier -> UNSAFE . 
transitions ->  {}

item set 56 
modifier -> ASYNC .
IDENTIFIER_WITH_KEYWORD -> ASYNC . 
transitions ->  {}

item set 57 
modifier -> PUBLIC . 
transitions ->  {}

item set 58 
modifier -> PARTIAL . 
transitions ->  {}

item set 59 
modifier -> PROTECTED . 
transitions ->  {}

item set 60 
modifier -> INTERNAL . 
transitions ->  {}

item set 61 
modifier -> PRIVATE . 
transitions ->  {}

item set 62 
modifier -> ABSTRACT . 
transitions ->  {}

item set 63 
modifier -> SEALED . 
transitions ->  {}

item set 64 
modifier -> STATIC . 
transitions ->  {}

item set 65 
modifier -> READONLY . 
transitions ->  {}

item set 66 
modifier -> VOLATILE . 
transitions ->  {}

item set 67 
modifier -> VIRTUAL . 
transitions ->  {}

item set 68 
modifier -> OVERRIDE . 
transitions ->  {}

item set 69 
modifier -> NEW . 
transitions ->  {}

item set 70 
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER . 
transitions ->  {"TEMPLATE":202}

item set 71 
enum-class -> ENUM .class-key
enum-class -> ENUM .
class-key -> .CLASS
class-key -> .STRUCT
class-key -> .UNION 
transitions ->  {"class-key":203,"CLASS":20,"STRUCT":204,"UNION":22}

item set 72 
non-array-type -> type-name . 
transitions ->  {}

item set 73 
non-array-type -> SBYTE . 
transitions ->  {}

item set 74 
non-array-type -> BYTE . 
transitions ->  {}

item set 75 
non-array-type -> SHORT . 
transitions ->  {}

item set 76 
non-array-type -> USHORT . 
transitions ->  {}

item set 77 
non-array-type -> INT . 
transitions ->  {}

item set 78 
non-array-type -> UINT . 
transitions ->  {}

item set 79 
non-array-type -> LONG . 
transitions ->  {}

item set 80 
non-array-type -> ULONG . 
transitions ->  {}

item set 81 
non-array-type -> CHAR . 
transitions ->  {}

item set 82 
non-array-type -> FLOAT . 
transitions ->  {}

item set 83 
non-array-type -> DOUBLE . 
transitions ->  {}

item set 84 
non-array-type -> DECIMAL . 
transitions ->  {}

item set 85 
non-array-type -> BOOL . 
transitions ->  {}

item set 86 
non-array-type -> OBJECT . 
transitions ->  {}

item set 87 
non-array-type -> STRING .
IDENTIFIER_WITH_KEYWORD -> STRING . 
transitions ->  {}

item set 88 
non-array-type -> VOID . 
transitions ->  {}

item set 89 
non-array-type -> AUTO . 
transitions ->  {}

item set 90 
attribute-section -> OPEN_BRACKET .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute-target-specifier -> .attribute-target COLON
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-target -> .FIELD
attribute-target -> .METHOD
attribute-target -> .PARAM
attribute-target -> .PROPERTY
attribute-target -> .RETURN
attribute-target -> .TYPE
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"attribute-list":205,"attribute-target-specifier":206,"attribute":207,"attribute-target":208,"attribute-name":209,"FIELD":210,"METHOD":211,"PARAM":212,"PROPERTY":213,"RETURN":214,"TYPE":215,"type-name":216,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"ASSEMBLY":100,"MODULE":102,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 91 
type-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOUBLE_COLON":217,"DOT":218}

item set 92 
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 93 
IDENTIFIER_WITH_KEYWORD -> ADD . 
transitions ->  {}

item set 94 
IDENTIFIER_WITH_KEYWORD -> REMOVE . 
transitions ->  {}

item set 95 
IDENTIFIER_WITH_KEYWORD -> SET . 
transitions ->  {}

item set 96 
IDENTIFIER_WITH_KEYWORD -> PARAMS . 
transitions ->  {}

item set 97 
IDENTIFIER_WITH_KEYWORD -> DEFAULT . 
transitions ->  {}

item set 98 
IDENTIFIER_WITH_KEYWORD -> METHOD . 
transitions ->  {}

item set 99 
IDENTIFIER_WITH_KEYWORD -> PARAM . 
transitions ->  {}

item set 100 
IDENTIFIER_WITH_KEYWORD -> ASSEMBLY . 
transitions ->  {}

item set 101 
IDENTIFIER_WITH_KEYWORD -> PROPERTY . 
transitions ->  {}

item set 102 
IDENTIFIER_WITH_KEYWORD -> MODULE . 
transitions ->  {}

item set 103 
IDENTIFIER_WITH_KEYWORD -> FIELD . 
transitions ->  {}

item set 104 
IDENTIFIER_WITH_KEYWORD -> TYPE . 
transitions ->  {}

item set 105 
IDENTIFIER_WITH_KEYWORD -> THIS . 
transitions ->  {}

item set 106 
IDENTIFIER_WITH_KEYWORD -> WHERE . 
transitions ->  {}

item set 107 
compilationUnit -> block_or_statement_list EOF . 
transitions ->  {}

item set 108 
block_or_statement_list -> block_or_statement_list block_or_statement . 
transitions ->  {}

item set 109 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE .SEMICOLON
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE .class-body
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE .class-base class-body
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE .class-body SEMICOLON
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE .class-base class-body SEMICOLON
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE .IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE .IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE .IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE .IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE .IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE member-list CLOSE_BRACE
class-base -> .COLON base-list
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"SEMICOLON":219,"class-body":220,"class-base":221,"IDENTIFIER_WITH_TEMPLATE":222,"OPEN_BRACE":223,"COLON":224,"IDENTIFIER":70}

item set 110 
method-declaration -> method-header method-prefixs .block
method-prefixs -> method-prefixs .method-prefix
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
method-prefix -> .CONST
method-prefix -> .OVERRIDE 
transitions ->  {"block":225,"method-prefix":226,"OPEN_BRACE":113,"CONST":114,"OVERRIDE":115}

item set 111 
method-declaration -> method-header block . 
transitions ->  {}

item set 112 
method-prefixs -> method-prefix . 
transitions ->  {}

item set 113 
block -> OPEN_BRACE .CLOSE_BRACE
block -> OPEN_BRACE .statement-list CLOSE_BRACE
statement-list -> .statement
statement-list -> .statement-list statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
declaration-statement -> .local-variable-declaration block
declaration-statement -> .local-constant-declaration block
declaration-statement -> .local-variable-declaration
declaration-statement -> .local-constant-declaration
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_BRACE":227,"statement-list":228,"statement":229,"labeled-statement":230,"declaration-statement":231,"embedded-statement":232,"IDENTIFIER_WITH_KEYWORD":233,"local-variable-declaration":234,"local-constant-declaration":235,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"TILDE":249,"IDENTIFIER_WITH_TEMPLATE":250,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":251,"ASYNC":56,"WHERE":106,"STRING":87,"primary-expression":252,"type":253,"CONST":254,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"IDENTIFIER":70,"primary-no-array-creation-expression":282,"array-creation-expression":283,"non-array-type":51,"array-type":52,"invocation-expression":284,"NEW":285,"unary-expression":286,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"STAR":325,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"BASE":333,"TYPEOF":334,"SIZEOF":335,"namespace-or-type-name":91,"TRUE":336,"FALSE":337}

item set 114 
method-prefix -> CONST . 
transitions ->  {}

item set 115 
method-prefix -> OVERRIDE . 
transitions ->  {}

item set 116 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
struct-interfaces -> .COLON interface-type-list 
transitions ->  {"where-base":338,"struct-interfaces":339,"COLON":340}

item set 117 
method-header -> method-types member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
method-header -> method-types member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON member-name
member-name-with-double-colon -> member-name-with-double-colon .COMMA member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name
field-variable-declarator -> member-name-with-double-colon .ASSIGN variable-initializer
field-variable-declarator -> member-name-with-double-colon .
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"OPEN_PARENS":341,"member-name":126,"COMMA":127,"ASSIGN":128,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 118 
field-declaration -> method-types field-variable-declarators .SEMICOLON
field-variable-declarators -> field-variable-declarators .COMMA field-variable-declarator 
transitions ->  {"SEMICOLON":342,"COMMA":149}

item set 119 
method-types -> method-types method-type .
method-type -> method-type .type
method-type -> method-type .
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":179,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 120 
member-name-with-double-colon -> type .member-name-with-double-colon
member-name-with-double-colon -> type .
method-type -> type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":343,"TEMPLATE":182,"rank-specifiers":183,"type":184,"rank-specifier":185,"non-array-type":51,"array-type":52,"CONST":53,"OPEN_BRACKET":186,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 121 
method-type -> modifier . 
transitions ->  {}

item set 122 
modifier -> EXTERN . 
transitions ->  {}

item set 123 
IDENTIFIER_WITH_KEYWORD -> TILDE .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":176,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 124 
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 125 
method-header -> member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
method-header -> member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
class-method-header -> member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
class-method-header -> member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":344,"CLOSE_PARENS":345,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 126 
member-name-with-double-colon -> member-name-with-double-colon member-name .DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon member-name .DOUBLE_COLON member-name
member-name-with-double-colon -> member-name-with-double-colon member-name . 
transitions ->  {"DOUBLE_COLON":357}

item set 127 
member-name-with-double-colon -> member-name-with-double-colon COMMA .member-name
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":358,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 128 
field-variable-declarator -> member-name-with-double-colon ASSIGN .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-initializer":359,"expression":360,"array-initializer":361,"conditional-expression":362,"assignment":363,"OPEN_BRACE":364,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 129 
member-name -> variable-declarators .
variable-declarators -> variable-declarators .COMMA variable-declarator 
transitions ->  {"COMMA":388}

item set 130 
variable-declarators -> variable-declarator . 
transitions ->  {}

item set 131 
variable-declarator -> type .ASSIGN variable-initializer
variable-declarator -> type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"ASSIGN":389,"TEMPLATE":182,"rank-specifiers":183,"rank-specifier":185,"OPEN_BRACKET":186}

item set 132 
IDENTIFIER_WITH_KEYWORD -> ASYNC . 
transitions ->  {}

item set 133 
method-header -> attributes method-types .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes method-types .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
field-declaration -> attributes method-types .field-variable-declarators SEMICOLON
method-types -> method-types .method-type
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
field-variable-declarators -> .field-variable-declarators COMMA field-variable-declarator
field-variable-declarators -> .field-variable-declarator
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
field-variable-declarator -> .member-name-with-double-colon ASSIGN variable-initializer
field-variable-declarator -> .member-name-with-double-colon
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":390,"field-variable-declarators":391,"method-type":119,"type":120,"field-variable-declarator":43,"INTERR":50,"modifier":121,"non-array-type":51,"array-type":52,"CONST":53,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106,"IDENTIFIER":70}

item set 134 
property-declaration -> attributes type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":392,"THIS":151,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 135 
property-declaration -> attributes modifiers .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes modifiers .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes modifiers .operator-declarator method-body
constructor-declaration -> attributes modifiers .constructor-declarator method-body
static-constructor-declaration -> attributes modifiers .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
class-method-header -> attributes modifiers .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> attributes modifiers .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> modifiers .modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
operator-declarator -> .unary-operator-declarator
operator-declarator -> .binary-operator-declarator
operator-declarator -> .conversion-operator-declarator
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
enum-class -> .ENUM class-key
enum-class -> .ENUM
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
unary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"type-with-interr":393,"indexer-declarator":394,"operator-declarator":395,"constructor-declarator":396,"IDENTIFIER_WITH_TEMPLATE":397,"type":398,"STRUCT":399,"INTERFACE":400,"enum-class":401,"DELEGATE":402,"modifier":161,"unary-operator-declarator":166,"binary-operator-declarator":167,"conversion-operator-declarator":168,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"ENUM":71,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"IMPLICIT":169,"EXPLICIT":170,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 136 
indexer-declaration -> attributes indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":403}

item set 137 
constructor-declaration -> attributes constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":404,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 138 
destructor-declaration -> attributes TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_KEYWORD -> TILDE .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":405,"IDENTIFIER_WITH_KEYWORD":176,"IDENTIFIER":70,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177}

item set 139 
destructor-declaration -> attributes EXTERN .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifier -> EXTERN . 
transitions ->  {"TILDE":406}

item set 140 
class-method-header -> attributes type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> attributes type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> type .INTERR
type-with-interr -> type .
type -> type .TEMPLATE
method-type -> type .
array-type -> type .rank-specifiers
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":407,"INTERR":181,"TEMPLATE":182,"rank-specifiers":183,"type":184,"rank-specifier":185,"non-array-type":51,"array-type":52,"CONST":53,"OPEN_BRACKET":186,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 141 
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":408,"IDENTIFIER":70}

item set 142 
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":409,"IDENTIFIER":70}

item set 143 
enum-declaration -> attributes enum-class .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes enum-class .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes enum-class .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes enum-class .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":410,"IDENTIFIER":70}

item set 144 
delegate-declaration -> attributes DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":411,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 145 
class-method-declaration -> class-method-header method-prefixs .block SEMICOLON
class-method-declaration -> class-method-header method-prefixs .block
class-method-declaration -> class-method-header method-prefixs .SEMICOLON
class-method-declaration -> class-method-header method-prefixs .
method-prefixs -> method-prefixs .method-prefix
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
method-prefix -> .CONST
method-prefix -> .OVERRIDE 
transitions ->  {"block":412,"SEMICOLON":413,"method-prefix":226,"OPEN_BRACE":113,"CONST":114,"OVERRIDE":115}

item set 146 
class-method-declaration -> class-method-header block .SEMICOLON
class-method-declaration -> class-method-header block . 
transitions ->  {"SEMICOLON":414}

item set 147 
class-method-declaration -> class-method-header SEMICOLON . 
transitions ->  {}

item set 148 
field-declaration -> field-variable-declarators SEMICOLON . 
transitions ->  {}

item set 149 
field-variable-declarators -> field-variable-declarators COMMA .field-variable-declarator
field-variable-declarator -> .member-name-with-double-colon ASSIGN variable-initializer
field-variable-declarator -> .member-name-with-double-colon
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"field-variable-declarator":415,"member-name-with-double-colon":416,"type":184,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 150 
property-declaration -> type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"OPEN_BRACE":417,"OPEN_BRACKET":418}

item set 151 
indexer-declarator -> type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
IDENTIFIER_WITH_KEYWORD -> THIS . 
transitions ->  {"OPEN_BRACKET":419}

item set 152 
property-declaration -> modifiers type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
unary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":420,"THIS":151,"OPERATOR":421,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 153 
indexer-declaration -> modifiers indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":422}

item set 154 
operator-declaration -> modifiers operator-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":423,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 155 
constructor-declaration -> modifiers constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":424,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 156 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":425}

item set 157 
destructor-declaration -> modifiers TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_KEYWORD -> TILDE .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":426,"IDENTIFIER_WITH_KEYWORD":176,"IDENTIFIER":70,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177}

item set 158 
destructor-declaration -> modifiers attributes .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> modifiers attributes .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"TILDE":427,"EXTERN":428}

item set 159 
destructor-declaration -> modifiers EXTERN .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifier -> EXTERN . 
transitions ->  {"TILDE":429}

item set 160 
class-method-header -> modifiers type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> modifiers type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> type .INTERR
type-with-interr -> type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":430,"INTERR":181,"TEMPLATE":182,"rank-specifiers":183,"type":184,"rank-specifier":185,"non-array-type":51,"array-type":52,"CONST":53,"OPEN_BRACKET":186,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 161 
modifiers -> modifiers modifier . 
transitions ->  {}

item set 162 
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":431,"IDENTIFIER":70}

item set 163 
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":432,"IDENTIFIER":70}

item set 164 
enum-declaration -> modifiers enum-class .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers enum-class .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers enum-class .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers enum-class .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":433,"IDENTIFIER":70}

item set 165 
delegate-declaration -> modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":434,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 166 
operator-declarator -> unary-operator-declarator . 
transitions ->  {}

item set 167 
operator-declarator -> binary-operator-declarator . 
transitions ->  {}

item set 168 
operator-declarator -> conversion-operator-declarator . 
transitions ->  {}

item set 169 
conversion-operator-declarator -> IMPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPERATOR":435}

item set 170 
conversion-operator-declarator -> EXPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPERATOR":436}

item set 171 
indexer-declaration -> indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":437,"get-accessor-declaration":438,"set-accessor-declaration":439,"attributes":440,"modifiers":441,"GET":442,"SET":443,"attribute-sections":42,"modifier":301,"attribute-section":54,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"OPEN_BRACKET":90}

item set 172 
constructor-declaration -> constructor-declarator method-body . 
transitions ->  {}

item set 173 
method-body -> block . 
transitions ->  {}

item set 174 
method-body -> SEMICOLON . 
transitions ->  {}

item set 175 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":445}

item set 176 
IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 177 
IDENTIFIER_WITH_KEYWORD -> STRING . 
transitions ->  {}

item set 178 
destructor-declaration -> EXTERN TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":446,"IDENTIFIER":70}

item set 179 
method-type -> method-type type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"TEMPLATE":182,"rank-specifiers":183,"rank-specifier":185,"OPEN_BRACKET":186}

item set 180 
member-name-with-double-colon -> type member-name-with-double-colon .
class-method-header -> type member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
class-method-header -> type member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON member-name
member-name-with-double-colon -> member-name-with-double-colon .COMMA member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"OPEN_PARENS":447,"member-name":126,"COMMA":127,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 181 
type-with-interr -> type INTERR . 
transitions ->  {}

item set 182 
type -> type TEMPLATE . 
transitions ->  {}

item set 183 
array-type -> type rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifier":448,"OPEN_BRACKET":186}

item set 184 
member-name-with-double-colon -> type .member-name-with-double-colon
member-name-with-double-colon -> type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":343,"TEMPLATE":182,"rank-specifiers":183,"type":184,"rank-specifier":185,"non-array-type":51,"array-type":52,"CONST":53,"OPEN_BRACKET":186,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 185 
rank-specifiers -> rank-specifier . 
transitions ->  {}

item set 186 
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA 
transitions ->  {"dim-separators":449,"CLOSE_BRACKET":450,"COMMA":451}

item set 187 
attribute-sections -> attribute-sections attribute-section . 
transitions ->  {}

item set 188 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":452,"formal-parameter-list":453,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 189 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
interface-base -> .COLON interface-type-list 
transitions ->  {"where-base":454,"interface-base":455,"COLON":456}

item set 190 
enum-declaration -> enum-class IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> enum-class IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> enum-class IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> enum-class IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":457,"enum-base":458,"OPEN_BRACE":459,"COLON":460}

item set 191 
delegate-declaration -> DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":461,"IDENTIFIER":70}

item set 192 
type-with-interr -> type .INTERR
type-with-interr -> type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"INTERR":181,"TEMPLATE":182,"rank-specifiers":183,"rank-specifier":185,"OPEN_BRACKET":186}

item set 193 
using-alias-directive -> USING IDENTIFIER_WITH_TEMPLATE .ASSIGN namespace-or-type-name SEMICOLON
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"ASSIGN":462}

item set 194 
using-namespace-directive -> USING namespace-name .SEMICOLON 
transitions ->  {"SEMICOLON":463}

item set 195 
namespace-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOUBLE_COLON":217,"DOT":218}

item set 196 
method-type -> INTERR type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"TEMPLATE":182,"rank-specifiers":183,"rank-specifier":185,"OPEN_BRACKET":186}

item set 197 
type -> non-array-type AMP . 
transitions ->  {}

item set 198 
type -> non-array-type STARS .
STARS -> STARS .STAR 
transitions ->  {"STAR":464}

item set 199 
STARS -> STAR . 
transitions ->  {}

item set 200 
type -> array-type AMP . 
transitions ->  {}

item set 201 
type -> array-type STARS .
STARS -> STARS .STAR 
transitions ->  {"STAR":464}

item set 202 
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE . 
transitions ->  {}

item set 203 
enum-class -> ENUM class-key . 
transitions ->  {}

item set 204 
class-key -> STRUCT . 
transitions ->  {}

item set 205 
attribute-section -> OPEN_BRACKET attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":465,"COMMA":466}

item set 206 
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"attribute-list":467,"attribute":207,"attribute-name":209,"type-name":216,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 207 
attribute-list -> attribute . 
transitions ->  {}

item set 208 
attribute-target-specifier -> attribute-target .COLON 
transitions ->  {"COLON":468}

item set 209 
attribute -> attribute-name .
attribute -> attribute-name .attribute-arguments
attribute-arguments -> .OPEN_PARENS CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS named-argument-list CLOSE_PARENS 
transitions ->  {"attribute-arguments":469,"OPEN_PARENS":470}

item set 210 
attribute-target -> FIELD .
IDENTIFIER_WITH_KEYWORD -> FIELD . 
transitions ->  {}

item set 211 
attribute-target -> METHOD .
IDENTIFIER_WITH_KEYWORD -> METHOD . 
transitions ->  {}

item set 212 
attribute-target -> PARAM .
IDENTIFIER_WITH_KEYWORD -> PARAM . 
transitions ->  {}

item set 213 
attribute-target -> PROPERTY .
IDENTIFIER_WITH_KEYWORD -> PROPERTY . 
transitions ->  {}

item set 214 
attribute-target -> RETURN . 
transitions ->  {}

item set 215 
attribute-target -> TYPE .
IDENTIFIER_WITH_KEYWORD -> TYPE . 
transitions ->  {}

item set 216 
attribute-name -> type-name . 
transitions ->  {}

item set 217 
namespace-or-type-name -> namespace-or-type-name DOUBLE_COLON .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":471,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 218 
namespace-or-type-name -> namespace-or-type-name DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":472,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 219 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 220 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE class-body .
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE class-body .SEMICOLON 
transitions ->  {"SEMICOLON":473}

item set 221 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE class-base .class-body
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE class-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE member-list CLOSE_BRACE 
transitions ->  {"class-body":474,"OPEN_BRACE":223}

item set 222 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE .SEMICOLON
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE .class-body
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE .class-base class-body
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE .class-body SEMICOLON
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE .class-base class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE member-list CLOSE_BRACE
class-base -> .COLON base-list 
transitions ->  {"SEMICOLON":475,"class-body":476,"class-base":477,"OPEN_BRACE":223,"COLON":224}

item set 223 
class-body -> OPEN_BRACE .CLOSE_BRACE
class-body -> OPEN_BRACE .member-list CLOSE_BRACE
member-list -> .class-member-declaration member-list
member-list -> .class-member-declaration
member-list -> .access-specifier COLON member-list
member-list -> .access-specifier COLON
class-member-declaration -> .class-method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
class-member-declaration -> .using-directive
access-specifier -> .PRIVATE
access-specifier -> .PROTECTED
access-specifier -> .PUBLIC
class-method-declaration -> .class-method-header method-prefixs block SEMICOLON
class-method-declaration -> .class-method-header method-prefixs block
class-method-declaration -> .class-method-header method-prefixs SEMICOLON
class-method-declaration -> .class-method-header method-prefixs
class-method-declaration -> .class-method-header block SEMICOLON
class-method-declaration -> .class-method-header block
class-method-declaration -> .class-method-header SEMICOLON
class-method-declaration -> .class-method-header
field-declaration -> .field-variable-declarators SEMICOLON
field-declaration -> .method-types field-variable-declarators SEMICOLON
field-declaration -> .attributes method-types field-variable-declarators SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
class-method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .member-name-with-double-colon
field-variable-declarators -> .field-variable-declarators COMMA field-variable-declarator
field-variable-declarators -> .field-variable-declarator
method-types -> .method-types method-type
method-types -> .method-type
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
modifiers -> .modifier
modifiers -> .modifiers modifier
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
field-variable-declarator -> .member-name-with-double-colon ASSIGN variable-initializer
field-variable-declarator -> .member-name-with-double-colon
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
enum-class -> .ENUM class-key
enum-class -> .ENUM
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"CLOSE_BRACE":478,"member-list":479,"class-member-declaration":480,"access-specifier":481,"class-method-declaration":10,"field-declaration":11,"property-declaration":12,"indexer-declaration":13,"operator-declaration":14,"constructor-declaration":15,"static-constructor-declaration":16,"destructor-declaration":17,"type-declaration":18,"using-directive":19,"PRIVATE":482,"PROTECTED":483,"PUBLIC":484,"class-method-header":26,"field-variable-declarators":27,"method-types":485,"attributes":486,"type-with-interr":28,"modifiers":29,"indexer-declarator":30,"constructor-declarator":31,"TILDE":32,"EXTERN":33,"struct-declaration":34,"interface-declaration":35,"enum-declaration":36,"delegate-declaration":37,"using-alias-directive":38,"using-namespace-directive":39,"member-name-with-double-colon":487,"type":41,"field-variable-declarator":43,"method-type":40,"attribute-sections":42,"modifier":44,"IDENTIFIER_WITH_TEMPLATE":45,"STRUCT":488,"INTERFACE":46,"enum-class":47,"DELEGATE":48,"USING":49,"non-array-type":51,"array-type":52,"CONST":53,"INTERR":50,"attribute-section":54,"UNSAFE":55,"ASYNC":56,"PARTIAL":58,"INTERNAL":60,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"NEW":69,"IDENTIFIER":70,"ENUM":71,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"OPEN_BRACKET":90,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 224 
class-base -> COLON .base-list
base-list -> .base-list COMMA base-specifier
base-list -> .base-specifier
base-specifier -> .type-with-interr
base-specifier -> .VIRTUAL access-specifier type-with-interr
base-specifier -> .VIRTUAL type-with-interr
base-specifier -> .access-specifier VIRTUAL type-with-interr
base-specifier -> .access-specifier type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
access-specifier -> .PRIVATE
access-specifier -> .PROTECTED
access-specifier -> .PUBLIC
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"base-list":489,"base-specifier":490,"type-with-interr":491,"VIRTUAL":492,"access-specifier":493,"type":192,"PRIVATE":494,"PROTECTED":495,"PUBLIC":496,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 225 
method-declaration -> method-header method-prefixs block . 
transitions ->  {}

item set 226 
method-prefixs -> method-prefixs method-prefix . 
transitions ->  {}

item set 227 
block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 228 
block -> OPEN_BRACE statement-list .CLOSE_BRACE
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
declaration-statement -> .local-variable-declaration block
declaration-statement -> .local-constant-declaration block
declaration-statement -> .local-variable-declaration
declaration-statement -> .local-constant-declaration
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_BRACE":497,"statement":498,"labeled-statement":230,"declaration-statement":231,"embedded-statement":232,"IDENTIFIER_WITH_KEYWORD":233,"local-variable-declaration":234,"local-constant-declaration":235,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"TILDE":249,"IDENTIFIER_WITH_TEMPLATE":250,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":251,"ASYNC":56,"WHERE":106,"STRING":87,"primary-expression":252,"type":253,"CONST":254,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"IDENTIFIER":70,"primary-no-array-creation-expression":282,"array-creation-expression":283,"non-array-type":51,"array-type":52,"invocation-expression":284,"NEW":285,"unary-expression":286,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"STAR":325,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"BASE":333,"TYPEOF":334,"SIZEOF":335,"namespace-or-type-name":91,"TRUE":336,"FALSE":337}

item set 229 
statement-list -> statement . 
transitions ->  {}

item set 230 
statement -> labeled-statement . 
transitions ->  {}

item set 231 
statement -> declaration-statement . 
transitions ->  {}

item set 232 
statement -> embedded-statement . 
transitions ->  {}

item set 233 
labeled-statement -> IDENTIFIER_WITH_KEYWORD .COLON switch-labels
labeled-statement -> IDENTIFIER_WITH_KEYWORD .COLON statement
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"COLON":499,"OP_DBLPTR":500}

item set 234 
declaration-statement -> local-variable-declaration .SEMICOLON
declaration-statement -> local-variable-declaration .block
declaration-statement -> local-variable-declaration .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"SEMICOLON":501,"block":502,"OPEN_BRACE":113}

item set 235 
declaration-statement -> local-constant-declaration .SEMICOLON
declaration-statement -> local-constant-declaration .block
declaration-statement -> local-constant-declaration .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"SEMICOLON":503,"block":504,"OPEN_BRACE":113}

item set 236 
embedded-statement -> block . 
transitions ->  {}

item set 237 
embedded-statement -> empty-statement . 
transitions ->  {}

item set 238 
embedded-statement -> statement-expression .block
embedded-statement -> statement-expression .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":505,"SEMICOLON":506,"OPEN_BRACE":113}

item set 239 
embedded-statement -> selection-statement . 
transitions ->  {}

item set 240 
embedded-statement -> iteration-statement . 
transitions ->  {}

item set 241 
embedded-statement -> jump-statement . 
transitions ->  {}

item set 242 
embedded-statement -> try-statement . 
transitions ->  {}

item set 243 
embedded-statement -> checked-statement . 
transitions ->  {}

item set 244 
embedded-statement -> unchecked-statement . 
transitions ->  {}

item set 245 
embedded-statement -> lock-statement . 
transitions ->  {}

item set 246 
embedded-statement -> using-statement . 
transitions ->  {}

item set 247 
embedded-statement -> unsafe-statement . 
transitions ->  {}

item set 248 
embedded-statement -> fixed-statement . 
transitions ->  {}

item set 249 
IDENTIFIER_WITH_KEYWORD -> TILDE .IDENTIFIER_WITH_KEYWORD
unary-expression -> TILDE .unary-expression
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":507,"unary-expression":508,"TILDE":249,"IDENTIFIER_WITH_TEMPLATE":250,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":251,"ASYNC":132,"WHERE":106,"STRING":87,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"STAR":325,"primary-expression":370,"IDENTIFIER":70,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"type":379,"invocation-expression":284,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"TRUE":336,"FALSE":337,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 250 
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE .
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON member-access
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON invocation-expression 
transitions ->  {"DOUBLE_COLON":509}

item set 251 
IDENTIFIER_WITH_KEYWORD -> THIS .
this-access -> THIS . 
transitions ->  {}

item set 252 
local-variable-declaration -> primary-expression .local-variable-declarators
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .AMP IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":510,"OP_INC":511,"OP_DEC":512,"OPEN_PARENS":513,"DOT":514,"OP_PTR":515,"local-variable-declarator":516,"local-variable":517,"INTERR":518,"STARS":519,"AMP":520,"IDENTIFIER_WITH_KEYWORD":521,"STAR":199,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 253 
local-variable-declaration -> type .local-variable-declarators
type -> type .TEMPLATE
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .AMP IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":522,"TEMPLATE":182,"rank-specifiers":183,"DOT":523,"OP_PTR":524,"local-variable-declarator":516,"rank-specifier":185,"local-variable":517,"OPEN_BRACKET":186,"INTERR":518,"STARS":519,"AMP":520,"IDENTIFIER_WITH_KEYWORD":521,"STAR":199,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 254 
local-constant-declaration -> CONST .type constant-declarators
type -> CONST .
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":525,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 255 
empty-statement -> SEMICOLON . 
transitions ->  {}

item set 256 
statement-expression -> invocation-expressions .
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOT":526,"OP_PTR":527}

item set 257 
statement-expression -> object-creation-expression .
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 258 
statement-expression -> assignment . 
transitions ->  {}

item set 259 
statement-expression -> post-increment-expression .
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 260 
statement-expression -> post-decrement-expression .
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 261 
statement-expression -> pre-increment-expression .
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 262 
statement-expression -> pre-decrement-expression .
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 263 
selection-statement -> if-statement . 
transitions ->  {}

item set 264 
selection-statement -> switch-statement . 
transitions ->  {}

item set 265 
iteration-statement -> while-statement . 
transitions ->  {}

item set 266 
iteration-statement -> do-statement . 
transitions ->  {}

item set 267 
iteration-statement -> for-statement . 
transitions ->  {}

item set 268 
iteration-statement -> foreach-statement . 
transitions ->  {}

item set 269 
jump-statement -> break-statement . 
transitions ->  {}

item set 270 
jump-statement -> continue-statement . 
transitions ->  {}

item set 271 
jump-statement -> goto-statement . 
transitions ->  {}

item set 272 
jump-statement -> return-statement . 
transitions ->  {}

item set 273 
jump-statement -> throw-statement . 
transitions ->  {}

item set 274 
try-statement -> TRY .block catch-clauses
try-statement -> TRY .block finally-clause
try-statement -> TRY .block catch-clauses finally-clause
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":528,"OPEN_BRACE":113}

item set 275 
checked-statement -> CHECKED .block
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":529,"OPEN_PARENS":530,"OPEN_BRACE":113}

item set 276 
unchecked-statement -> UNCHECKED .block
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":531,"OPEN_PARENS":532,"OPEN_BRACE":113}

item set 277 
lock-statement -> LOCK .OPEN_PARENS expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":533}

item set 278 
using-statement -> USING .OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":534}

item set 279 
unsafe-statement -> UNSAFE .block
modifier -> UNSAFE .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":535,"OPEN_BRACE":113}

item set 280 
fixed-statement -> modifiers .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"FIXED":536,"modifier":161,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69}

item set 281 
fixed-statement -> FIXED .OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":537}

item set 282 
primary-expression -> primary-no-array-creation-expression .
element-access -> primary-no-array-creation-expression .OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> primary-no-array-creation-expression .OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> primary-no-array-creation-expression .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":538}

item set 283 
primary-expression -> array-creation-expression . 
transitions ->  {}

item set 284 
invocation-expressions -> invocation-expression . 
transitions ->  {}

item set 285 
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier block-expression-with-brace
object-creation-expression -> NEW .non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .rank-specifiers
object-creation-expression -> NEW .block-expression-with-brace
modifier -> NEW .
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW .type block-expression-with-brace
type-with-identifier -> .IDENTIFIER TEMPLATE
type-with-identifier -> .non-array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
type-name -> .namespace-or-type-name
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
array-type -> .type rank-specifiers
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-identifier":539,"non-array-type":540,"rank-specifiers":541,"block-expression-with-brace":542,"type":543,"IDENTIFIER":544,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"rank-specifier":185,"OPEN_BRACE":545,"array-type":52,"CONST":53,"namespace-or-type-name":91,"OPEN_BRACKET":186,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106}

item set 286 
assignment -> unary-expression .assignment-operator expression
assignment -> unary-expression .assignment-operator block-expression-with-brace
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":546,"ASSIGN":547,"OP_ADD_ASSIGNMENT":548,"OP_SUB_ASSIGNMENT":549,"OP_MULT_ASSIGNMENT":550,"OP_DIV_ASSIGNMENT":551,"OP_MOD_ASSIGNMENT":552,"OP_AND_ASSIGNMENT":553,"OP_OR_ASSIGNMENT":554,"OP_XOR_ASSIGNMENT":555,"OP_LEFT_SHIFT_ASSIGNMENT":556,"RIGHT_SHIFT_ASSIGNMENT":557}

item set 287 
pre-increment-expression -> OP_INC .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":558,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 288 
pre-decrement-expression -> OP_DEC .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":559,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 289 
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"OPEN_PARENS":560}

item set 290 
switch-statement -> SWITCH .OPEN_PARENS expression CLOSE_PARENS switch-block 
transitions ->  {"OPEN_PARENS":561}

item set 291 
while-statement -> WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":562}

item set 292 
do-statement -> DO .embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":563,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 293 
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":564}

item set 294 
foreach-statement -> FOREACH .OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":565}

item set 295 
break-statement -> YIELD .BREAK SEMICOLON
return-statement -> YIELD .RETURN block-expression-with-brace SEMICOLON
return-statement -> YIELD .RETURN expression SEMICOLON
return-statement -> YIELD .RETURN SEMICOLON 
transitions ->  {"BREAK":566,"RETURN":567}

item set 296 
break-statement -> BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":568}

item set 297 
continue-statement -> CONTINUE .SEMICOLON 
transitions ->  {"SEMICOLON":569}

item set 298 
goto-statement -> GOTO .IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> GOTO .CASE constant-expression SEMICOLON
goto-statement -> GOTO .DEFAULT SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":570,"CASE":571,"DEFAULT":572,"IDENTIFIER":70}

item set 299 
return-statement -> RETURN .block-expression-with-brace SEMICOLON
return-statement -> RETURN .SEMICOLON
return-statement -> RETURN .expression SEMICOLON
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-with-brace":573,"SEMICOLON":574,"expression":575,"OPEN_BRACE":545,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 300 
throw-statement -> THROW .SEMICOLON
throw-statement -> THROW .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":576,"expression":577,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 301 
modifiers -> modifier . 
transitions ->  {}

item set 302 
primary-no-array-creation-expression -> literal . 
transitions ->  {}

item set 303 
primary-no-array-creation-expression -> lambda-expression . 
transitions ->  {}

item set 304 
primary-no-array-creation-expression -> cast-expression . 
transitions ->  {}

item set 305 
primary-no-array-creation-expression -> parenthesized-expression . 
transitions ->  {}

item set 306 
primary-no-array-creation-expression -> double-colon-access . 
transitions ->  {}

item set 307 
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 308 
primary-no-array-creation-expression -> element-access . 
transitions ->  {}

item set 309 
primary-no-array-creation-expression -> this-access . 
transitions ->  {}

item set 310 
primary-no-array-creation-expression -> base-access . 
transitions ->  {}

item set 311 
primary-no-array-creation-expression -> delegate-creation-expression . 
transitions ->  {}

item set 312 
primary-no-array-creation-expression -> typeof-expression . 
transitions ->  {}

item set 313 
primary-no-array-creation-expression -> sizeof-expression . 
transitions ->  {}

item set 314 
primary-no-array-creation-expression -> checked-expression . 
transitions ->  {}

item set 315 
primary-no-array-creation-expression -> unchecked-expression . 
transitions ->  {}

item set 316 
primary-no-array-creation-expression -> DELEGATE .block
delegate-expression -> DELEGATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> DELEGATE .OPEN_PARENS CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":578,"OPEN_PARENS":579,"OPEN_BRACE":113}

item set 317 
primary-no-array-creation-expression -> delegate-expression . 
transitions ->  {}

item set 318 
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> STACKALLOC .array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"non-array-type":580,"array-type":581,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"type":582,"namespace-or-type-name":91,"CONST":53,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 319 
invocation-expression -> AWAIT .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> AWAIT .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> AWAIT .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"primary-expression":583,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 320 
unary-expression -> PLUS .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":584,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 321 
unary-expression -> OP_PTR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":585,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 322 
unary-expression -> OP_COALESCING .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":586,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 323 
unary-expression -> MINUS .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":587,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 324 
unary-expression -> BANG .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":588,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 325 
unary-expression -> STAR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":589,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 326 
literal -> BOOLEAN_LITERAL . 
transitions ->  {}

item set 327 
literal -> REAL_LITERAL . 
transitions ->  {}

item set 328 
literal -> INTEGER_LITERAL . 
transitions ->  {}

item set 329 
literal -> STRING_LITERAL . 
transitions ->  {}

item set 330 
literal -> CHARACTER_LITERAL . 
transitions ->  {}

item set 331 
literal -> NULL . 
transitions ->  {}

item set 332 
lambda-expression -> OPEN_PARENS .dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> OPEN_PARENS .type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> OPEN_PARENS .expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> OPEN_PARENS .type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS expression
cast-expression -> OPEN_PARENS .type-with-interr CLOSE_PARENS expression
parenthesized-expression -> OPEN_PARENS .expression CLOSE_PARENS
dbl-expression-list -> .dbl-expression-list COMMA expression expression
dbl-expression-list -> .expression expression
type-expression-list -> .type-expression-list COMMA type expression
type-expression-list -> .type expression
expression-list -> .expression
expression-list -> .expression-list COMMA expression
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
expression -> .conditional-expression
expression -> .assignment
type-with-interr -> .type INTERR
type-with-interr -> .type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
type-name -> .namespace-or-type-name
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"dbl-expression-list":590,"type-expression-list":591,"expression-list":592,"type":593,"expression":594,"type-with-interr":595,"non-array-type":51,"array-type":52,"CONST":53,"conditional-expression":362,"assignment":363,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"conditional-or-expression":365,"unary-expression":366,"namespace-or-type-name":91,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"IDENTIFIER_WITH_KEYWORD":377,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"IDENTIFIER_WITH_TEMPLATE":250,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":251,"ASYNC":132,"WHERE":106,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"IDENTIFIER":70,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"invocation-expression":284,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"equality-expression":383,"TRUE":336,"FALSE":337,"AWAIT":319,"relational-expression":384,"shift-expression":385,"additive-expression":386,"multiplicative-expression":387}

item set 333 
base-access -> BASE .DOT IDENTIFIER_WITH_TEMPLATE
base-access -> BASE .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"DOT":596,"OPEN_BRACKET":597}

item set 334 
typeof-expression -> TYPEOF .OPEN_PARENS type-with-interr CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":598}

item set 335 
sizeof-expression -> SIZEOF .OPEN_PARENS type-with-interr CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":599}

item set 336 
BOOLEAN_LITERAL -> TRUE . 
transitions ->  {}

item set 337 
BOOLEAN_LITERAL -> FALSE . 
transitions ->  {}

item set 338 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":600,"OPEN_BRACE":601}

item set 339 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON 
transitions ->  {"where-base":602}

item set 340 
struct-interfaces -> COLON .interface-type-list 
transitions ->  {"interface-type-list":603}

item set 341 
method-header -> method-types member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
method-header -> method-types member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":604,"formal-parameter-list":605,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 342 
field-declaration -> method-types field-variable-declarators SEMICOLON . 
transitions ->  {}

item set 343 
member-name-with-double-colon -> type member-name-with-double-colon .
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON member-name
member-name-with-double-colon -> member-name-with-double-colon .COMMA member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":126,"COMMA":127,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 344 
method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS
class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":606}

item set 345 
method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS .
class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 346 
formal-parameter-list -> fixed-parameters .
formal-parameter-list -> fixed-parameters .COMMA parameter-array
fixed-parameters -> fixed-parameters .COMMA fixed-parameter 
transitions ->  {"COMMA":607}

item set 347 
formal-parameter-list -> parameter-array . 
transitions ->  {}

item set 348 
fixed-parameters -> fixed-parameter . 
transitions ->  {}

item set 349 
parameter-array -> PARAMS .array-type IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> PARAMS .
array-type -> .type rank-specifiers
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"array-type":608,"type":582,"non-array-type":51,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 350 
parameter-array -> attributes .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> attributes .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> attributes .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"PARAMS":609,"type-with-interr":610,"parameter-modifier":611,"type":192,"REF":355,"OUT":356,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 351 
fixed-parameter -> CONST .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> CONST .type-with-interr IDENTIFIER_WITH_KEYWORD
type -> CONST .
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":612,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 352 
fixed-parameter -> type-with-interr .IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":613,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 353 
fixed-parameter -> THIS .type-with-interr IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> THIS .
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":614,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 354 
fixed-parameter -> parameter-modifier .type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":615,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 355 
parameter-modifier -> REF . 
transitions ->  {}

item set 356 
parameter-modifier -> OUT . 
transitions ->  {}

item set 357 
member-name-with-double-colon -> member-name-with-double-colon member-name DOUBLE_COLON .TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon member-name DOUBLE_COLON .member-name
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"TILDE":616,"member-name":617,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 358 
member-name-with-double-colon -> member-name-with-double-colon COMMA member-name . 
transitions ->  {}

item set 359 
field-variable-declarator -> member-name-with-double-colon ASSIGN variable-initializer . 
transitions ->  {}

item set 360 
variable-initializer -> expression .
variable-initializer -> expression . 
transitions ->  {}

item set 361 
variable-initializer -> array-initializer .
variable-initializer -> array-initializer . 
transitions ->  {}

item set 362 
expression -> conditional-expression . 
transitions ->  {}

item set 363 
expression -> assignment . 
transitions ->  {}

item set 364 
array-initializer -> OPEN_BRACE .CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list COMMA CLOSE_BRACE
variable-initializer-list -> .variable-initializer
variable-initializer-list -> .variable-initializer-list COMMA variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":618,"variable-initializer-list":619,"variable-initializer":620,"expression":360,"array-initializer":361,"conditional-expression":362,"assignment":363,"OPEN_BRACE":364,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 365 
conditional-expression -> conditional-or-expression .
conditional-expression -> conditional-or-expression .INTERR expression
conditional-expression -> conditional-or-expression .INTERR expression COLON expression
conditional-or-expression -> conditional-or-expression .OP_OR conditional-and-expression 
transitions ->  {"INTERR":621,"OP_OR":622}

item set 366 
assignment -> unary-expression .assignment-operator expression
assignment -> unary-expression .assignment-operator block-expression-with-brace
multiplicative-expression -> unary-expression .
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":546,"ASSIGN":547,"OP_ADD_ASSIGNMENT":548,"OP_SUB_ASSIGNMENT":549,"OP_MULT_ASSIGNMENT":550,"OP_DIV_ASSIGNMENT":551,"OP_MOD_ASSIGNMENT":552,"OP_AND_ASSIGNMENT":553,"OP_OR_ASSIGNMENT":554,"OP_XOR_ASSIGNMENT":555,"OP_LEFT_SHIFT_ASSIGNMENT":556,"RIGHT_SHIFT_ASSIGNMENT":557}

item set 367 
conditional-or-expression -> conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":623}

item set 368 
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 369 
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 370 
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"DOT":514,"OP_PTR":515,"OP_INC":511,"OP_DEC":512,"OPEN_PARENS":513}

item set 371 
conditional-and-expression -> inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":624}

item set 372 
inclusive-or-expression -> exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":625}

item set 373 
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> invocation-expressions .DOT invocation-expression 
transitions ->  {"DOT":526,"OP_PTR":527}

item set 374 
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 375 
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 376 
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 377 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":500}

item set 378 
exclusive-or-expression -> and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":626}

item set 379 
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
type -> type .TEMPLATE
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"DOT":523,"OP_PTR":524,"TEMPLATE":182,"rank-specifiers":183,"rank-specifier":185,"OPEN_BRACKET":186}

item set 380 
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW .type block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier block-expression-with-brace
object-creation-expression -> NEW .non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .rank-specifiers
object-creation-expression -> NEW .block-expression-with-brace
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
type-with-identifier -> .IDENTIFIER TEMPLATE
type-with-identifier -> .non-array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":543,"type-with-identifier":539,"non-array-type":540,"rank-specifiers":541,"block-expression-with-brace":542,"array-type":52,"CONST":53,"IDENTIFIER":544,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"rank-specifier":185,"OPEN_BRACE":545,"namespace-or-type-name":91,"OPEN_BRACKET":186,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106}

item set 381 
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":530}

item set 382 
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":532}

item set 383 
and-expression -> equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":627,"OP_NE":628}

item set 384 
equality-expression -> relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":629,"GT":630,"OP_LE":631,"OP_GE":632,"OP_COALESCING":633,"IS":634,"AS":635}

item set 385 
relational-expression -> shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":636,"RIGHT_SHIFT":637}

item set 386 
shift-expression -> additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":638,"OP_PTR":639,"OP_COALESCING":640,"MINUS":641}

item set 387 
additive-expression -> multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":642,"DIV":643,"PERCENT":644}

item set 388 
variable-declarators -> variable-declarators COMMA .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarator":645,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 389 
variable-declarator -> type ASSIGN .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-initializer":646,"expression":360,"array-initializer":361,"conditional-expression":362,"assignment":363,"OPEN_BRACE":364,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 390 
method-header -> attributes method-types member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
method-header -> attributes method-types member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON member-name
member-name-with-double-colon -> member-name-with-double-colon .COMMA member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name
field-variable-declarator -> member-name-with-double-colon .ASSIGN variable-initializer
field-variable-declarator -> member-name-with-double-colon .
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"OPEN_PARENS":647,"member-name":126,"COMMA":127,"ASSIGN":128,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 391 
field-declaration -> attributes method-types field-variable-declarators .SEMICOLON
field-variable-declarators -> field-variable-declarators .COMMA field-variable-declarator 
transitions ->  {"SEMICOLON":648,"COMMA":149}

item set 392 
property-declaration -> attributes type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"OPEN_BRACE":649,"OPEN_BRACKET":418}

item set 393 
property-declaration -> attributes modifiers type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
unary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":650,"THIS":151,"OPERATOR":421,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 394 
indexer-declaration -> attributes modifiers indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":651}

item set 395 
operator-declaration -> attributes modifiers operator-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":652,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 396 
constructor-declaration -> attributes modifiers constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":653,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 397 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":654}

item set 398 
class-method-header -> attributes modifiers type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> attributes modifiers type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> type .INTERR
type-with-interr -> type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":655,"INTERR":181,"TEMPLATE":182,"rank-specifiers":183,"type":184,"rank-specifier":185,"non-array-type":51,"array-type":52,"CONST":53,"OPEN_BRACKET":186,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 399 
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":656,"IDENTIFIER":70}

item set 400 
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":657,"IDENTIFIER":70}

item set 401 
enum-declaration -> attributes modifiers enum-class .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers enum-class .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers enum-class .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers enum-class .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":658,"IDENTIFIER":70}

item set 402 
delegate-declaration -> attributes modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":659,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 403 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":660,"get-accessor-declaration":438,"set-accessor-declaration":439,"attributes":440,"modifiers":441,"GET":442,"SET":443,"attribute-sections":42,"modifier":301,"attribute-section":54,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"OPEN_BRACKET":90}

item set 404 
constructor-declaration -> attributes constructor-declarator method-body . 
transitions ->  {}

item set 405 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":661}

item set 406 
destructor-declaration -> attributes EXTERN TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":662,"IDENTIFIER":70}

item set 407 
class-method-header -> attributes type member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
class-method-header -> attributes type member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON member-name
member-name-with-double-colon -> member-name-with-double-colon .COMMA member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"OPEN_PARENS":663,"member-name":126,"COMMA":127,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 408 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
struct-interfaces -> .COLON interface-type-list 
transitions ->  {"where-base":664,"struct-interfaces":665,"COLON":340}

item set 409 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
interface-base -> .COLON interface-type-list 
transitions ->  {"where-base":666,"interface-base":667,"COLON":456}

item set 410 
enum-declaration -> attributes enum-class IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> attributes enum-class IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> attributes enum-class IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> attributes enum-class IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":668,"enum-base":669,"OPEN_BRACE":459,"COLON":460}

item set 411 
delegate-declaration -> attributes DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":670,"IDENTIFIER":70}

item set 412 
class-method-declaration -> class-method-header method-prefixs block .SEMICOLON
class-method-declaration -> class-method-header method-prefixs block . 
transitions ->  {"SEMICOLON":671}

item set 413 
class-method-declaration -> class-method-header method-prefixs SEMICOLON . 
transitions ->  {}

item set 414 
class-method-declaration -> class-method-header block SEMICOLON . 
transitions ->  {}

item set 415 
field-variable-declarators -> field-variable-declarators COMMA field-variable-declarator . 
transitions ->  {}

item set 416 
field-variable-declarator -> member-name-with-double-colon .ASSIGN variable-initializer
field-variable-declarator -> member-name-with-double-colon .
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON member-name
member-name-with-double-colon -> member-name-with-double-colon .COMMA member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"ASSIGN":128,"member-name":126,"COMMA":127,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 417 
property-declaration -> type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":672,"get-accessor-declaration":438,"set-accessor-declaration":439,"attributes":440,"modifiers":441,"GET":442,"SET":443,"attribute-sections":42,"modifier":301,"attribute-section":54,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"OPEN_BRACKET":90}

item set 418 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":673,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 419 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":674,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 420 
property-declaration -> modifiers type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"OPEN_BRACE":675,"OPEN_BRACKET":418}

item set 421 
unary-operator-declarator -> type-with-interr OPERATOR .overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR .overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
overloadable-operator -> .overloadable-unary-operator
overloadable-operator -> .overloadable-binary-operator
overloadable-unary-operator -> .OP_INC
overloadable-unary-operator -> .OP_DEC
overloadable-unary-operator -> .MINUS
overloadable-unary-operator -> .BANG
overloadable-unary-operator -> .TILDE
overloadable-unary-operator -> .PLUS
overloadable-unary-operator -> .TRUE
overloadable-unary-operator -> .FALSE
overloadable-binary-operator -> .PLUS
overloadable-binary-operator -> .MINUS
overloadable-binary-operator -> .STAR
overloadable-binary-operator -> .DIV
overloadable-binary-operator -> .PERCENT
overloadable-binary-operator -> .AMP
overloadable-binary-operator -> .BITWISE_OR
overloadable-binary-operator -> .CARET
overloadable-binary-operator -> .OP_LEFT_SHIFT
overloadable-binary-operator -> .RIGHT_SHIFT
overloadable-binary-operator -> .OP_EQ
overloadable-binary-operator -> .OP_NE
overloadable-binary-operator -> .OP_GE
overloadable-binary-operator -> .OP_LE
overloadable-binary-operator -> .GT
overloadable-binary-operator -> .LT 
transitions ->  {"overloadable-operator":676,"overloadable-unary-operator":677,"overloadable-binary-operator":678,"OP_INC":679,"OP_DEC":680,"MINUS":681,"BANG":682,"TILDE":683,"PLUS":684,"TRUE":685,"FALSE":686,"STAR":687,"DIV":688,"PERCENT":689,"AMP":690,"BITWISE_OR":691,"CARET":692,"OP_LEFT_SHIFT":693,"RIGHT_SHIFT":694,"OP_EQ":695,"OP_NE":696,"OP_GE":697,"OP_LE":698,"GT":699,"LT":700}

item set 422 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":701,"get-accessor-declaration":438,"set-accessor-declaration":439,"attributes":440,"modifiers":441,"GET":442,"SET":443,"attribute-sections":42,"modifier":301,"attribute-section":54,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"OPEN_BRACKET":90}

item set 423 
operator-declaration -> modifiers operator-declarator method-body . 
transitions ->  {}

item set 424 
constructor-declaration -> modifiers constructor-declarator method-body . 
transitions ->  {}

item set 425 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":702,"formal-parameter-list":453,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 426 
destructor-declaration -> modifiers TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":703}

item set 427 
destructor-declaration -> modifiers attributes TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":704,"IDENTIFIER":70}

item set 428 
destructor-declaration -> modifiers attributes EXTERN .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"TILDE":705}

item set 429 
destructor-declaration -> modifiers EXTERN TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":706,"IDENTIFIER":70}

item set 430 
class-method-header -> modifiers type member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
class-method-header -> modifiers type member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON member-name
member-name-with-double-colon -> member-name-with-double-colon .COMMA member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"OPEN_PARENS":707,"member-name":126,"COMMA":127,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 431 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
struct-interfaces -> .COLON interface-type-list 
transitions ->  {"where-base":708,"struct-interfaces":709,"COLON":340}

item set 432 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
interface-base -> .COLON interface-type-list 
transitions ->  {"where-base":710,"interface-base":711,"COLON":456}

item set 433 
enum-declaration -> modifiers enum-class IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> modifiers enum-class IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> modifiers enum-class IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> modifiers enum-class IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":712,"enum-base":713,"OPEN_BRACE":459,"COLON":460}

item set 434 
delegate-declaration -> modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":714,"IDENTIFIER":70}

item set 435 
conversion-operator-declarator -> IMPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":715,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 436 
conversion-operator-declarator -> EXPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":716,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 437 
indexer-declaration -> indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":717}

item set 438 
accessor-declarations -> get-accessor-declaration .
accessor-declarations -> get-accessor-declaration .set-accessor-declaration
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"set-accessor-declaration":718,"attributes":719,"modifiers":720,"SET":443,"attribute-sections":42,"modifier":301,"attribute-section":54,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"OPEN_BRACKET":90}

item set 439 
accessor-declarations -> set-accessor-declaration .
accessor-declarations -> set-accessor-declaration .get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"get-accessor-declaration":721,"attributes":722,"modifiers":723,"GET":442,"attribute-sections":42,"modifier":301,"attribute-section":54,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"OPEN_BRACKET":90}

item set 440 
get-accessor-declaration -> attributes .modifiers GET method-body
get-accessor-declaration -> attributes .GET method-body
set-accessor-declaration -> attributes .modifiers SET method-body
set-accessor-declaration -> attributes .SET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":724,"GET":725,"SET":726,"modifier":301,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69}

item set 441 
get-accessor-declaration -> modifiers .GET method-body
set-accessor-declaration -> modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":727,"SET":728,"modifier":161,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69}

item set 442 
get-accessor-declaration -> GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":729,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 443 
set-accessor-declaration -> SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":730,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 444 
modifier -> ASYNC . 
transitions ->  {}

item set 445 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":731}

item set 446 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":732}

item set 447 
class-method-header -> type member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
class-method-header -> type member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":733,"formal-parameter-list":734,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 448 
rank-specifiers -> rank-specifiers rank-specifier . 
transitions ->  {}

item set 449 
rank-specifier -> OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":735,"COMMA":736}

item set 450 
rank-specifier -> OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 451 
dim-separators -> COMMA . 
transitions ->  {}

item set 452 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"constructor-initializer":737,"COLON":738}

item set 453 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS constructor-initializer 
transitions ->  {"CLOSE_PARENS":739}

item set 454 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":740,"OPEN_BRACE":741}

item set 455 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON 
transitions ->  {"where-base":742}

item set 456 
interface-base -> COLON .interface-type-list 
transitions ->  {"interface-type-list":743}

item set 457 
enum-declaration -> enum-class IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> enum-class IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":744}

item set 458 
enum-declaration -> enum-class IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> enum-class IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":745,"OPEN_BRACE":459}

item set 459 
enum-body -> OPEN_BRACE .CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations COMMA CLOSE_BRACE
enum-member-declarations -> .enum-member-declaration
enum-member-declarations -> .enum-member-declarations COMMA enum-member-declaration
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":746,"enum-member-declarations":747,"enum-member-declaration":748,"IDENTIFIER_WITH_TEMPLATE":749,"attributes":750,"IDENTIFIER":70,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 460 
enum-base -> COLON .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":751,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 461 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":752}

item set 462 
using-alias-directive -> USING IDENTIFIER_WITH_TEMPLATE ASSIGN .namespace-or-type-name SEMICOLON
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"namespace-or-type-name":753,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 463 
using-namespace-directive -> USING namespace-name SEMICOLON . 
transitions ->  {}

item set 464 
STARS -> STARS STAR . 
transitions ->  {}

item set 465 
attribute-section -> OPEN_BRACKET attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 466 
attribute-section -> OPEN_BRACKET attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":754,"attribute":755,"attribute-name":209,"type-name":216,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 467 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":756,"COMMA":757}

item set 468 
attribute-target-specifier -> attribute-target COLON . 
transitions ->  {}

item set 469 
attribute -> attribute-name attribute-arguments . 
transitions ->  {}

item set 470 
attribute-arguments -> OPEN_PARENS .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .named-argument-list CLOSE_PARENS
positional-argument-list -> .positional-argument
positional-argument-list -> .positional-argument-list COMMA positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":758,"positional-argument-list":759,"named-argument-list":760,"positional-argument":761,"named-argument":762,"attribute-argument-expression":763,"IDENTIFIER_WITH_TEMPLATE":764,"expression":765,"IDENTIFIER":70,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 471 
namespace-or-type-name -> namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 472 
namespace-or-type-name -> namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 473 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON . 
transitions ->  {}

item set 474 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE class-base class-body .
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE class-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":766}

item set 475 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 476 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body .
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body .SEMICOLON 
transitions ->  {"SEMICOLON":767}

item set 477 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base .class-body
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE member-list CLOSE_BRACE 
transitions ->  {"class-body":768,"OPEN_BRACE":223}

item set 478 
class-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 479 
class-body -> OPEN_BRACE member-list .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":769}

item set 480 
member-list -> class-member-declaration .member-list
member-list -> class-member-declaration .
member-list -> .class-member-declaration member-list
member-list -> .class-member-declaration
member-list -> .access-specifier COLON member-list
member-list -> .access-specifier COLON
class-member-declaration -> .class-method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
class-member-declaration -> .using-directive
access-specifier -> .PRIVATE
access-specifier -> .PROTECTED
access-specifier -> .PUBLIC
class-method-declaration -> .class-method-header method-prefixs block SEMICOLON
class-method-declaration -> .class-method-header method-prefixs block
class-method-declaration -> .class-method-header method-prefixs SEMICOLON
class-method-declaration -> .class-method-header method-prefixs
class-method-declaration -> .class-method-header block SEMICOLON
class-method-declaration -> .class-method-header block
class-method-declaration -> .class-method-header SEMICOLON
class-method-declaration -> .class-method-header
field-declaration -> .field-variable-declarators SEMICOLON
field-declaration -> .method-types field-variable-declarators SEMICOLON
field-declaration -> .attributes method-types field-variable-declarators SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
class-method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .member-name-with-double-colon
field-variable-declarators -> .field-variable-declarators COMMA field-variable-declarator
field-variable-declarators -> .field-variable-declarator
method-types -> .method-types method-type
method-types -> .method-type
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
modifiers -> .modifier
modifiers -> .modifiers modifier
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
field-variable-declarator -> .member-name-with-double-colon ASSIGN variable-initializer
field-variable-declarator -> .member-name-with-double-colon
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
enum-class -> .ENUM class-key
enum-class -> .ENUM
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"member-list":770,"class-member-declaration":480,"access-specifier":481,"class-method-declaration":10,"field-declaration":11,"property-declaration":12,"indexer-declaration":13,"operator-declaration":14,"constructor-declaration":15,"static-constructor-declaration":16,"destructor-declaration":17,"type-declaration":18,"using-directive":19,"PRIVATE":482,"PROTECTED":483,"PUBLIC":484,"class-method-header":26,"field-variable-declarators":27,"method-types":485,"attributes":486,"type-with-interr":28,"modifiers":29,"indexer-declarator":30,"constructor-declarator":31,"TILDE":32,"EXTERN":33,"struct-declaration":34,"interface-declaration":35,"enum-declaration":36,"delegate-declaration":37,"using-alias-directive":38,"using-namespace-directive":39,"member-name-with-double-colon":487,"type":41,"field-variable-declarator":43,"method-type":40,"attribute-sections":42,"modifier":44,"IDENTIFIER_WITH_TEMPLATE":45,"STRUCT":488,"INTERFACE":46,"enum-class":47,"DELEGATE":48,"USING":49,"non-array-type":51,"array-type":52,"CONST":53,"INTERR":50,"attribute-section":54,"UNSAFE":55,"ASYNC":56,"PARTIAL":58,"INTERNAL":60,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"NEW":69,"IDENTIFIER":70,"ENUM":71,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"OPEN_BRACKET":90,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 481 
member-list -> access-specifier .COLON member-list
member-list -> access-specifier .COLON 
transitions ->  {"COLON":771}

item set 482 
access-specifier -> PRIVATE .
modifier -> PRIVATE . 
transitions ->  {}

item set 483 
access-specifier -> PROTECTED .
modifier -> PROTECTED . 
transitions ->  {}

item set 484 
access-specifier -> PUBLIC .
modifier -> PUBLIC . 
transitions ->  {}

item set 485 
field-declaration -> method-types .field-variable-declarators SEMICOLON
method-types -> method-types .method-type
field-variable-declarators -> .field-variable-declarators COMMA field-variable-declarator
field-variable-declarators -> .field-variable-declarator
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
field-variable-declarator -> .member-name-with-double-colon ASSIGN variable-initializer
field-variable-declarator -> .member-name-with-double-colon
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"field-variable-declarators":118,"method-type":119,"field-variable-declarator":43,"type":120,"INTERR":50,"modifier":121,"member-name-with-double-colon":416,"non-array-type":51,"array-type":52,"CONST":53,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106,"IDENTIFIER":70}

item set 486 
field-declaration -> attributes .method-types field-variable-declarators SEMICOLON
property-declaration -> attributes .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> attributes .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes .modifiers operator-declarator method-body
constructor-declaration -> attributes .constructor-declarator method-body
constructor-declaration -> attributes .modifiers constructor-declarator method-body
static-constructor-declaration -> attributes .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> attributes .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> attributes .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
class-method-header -> attributes .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> attributes .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> attributes .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> attributes .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
method-types -> .method-types method-type
method-types -> .method-type
type-with-interr -> .type INTERR
type-with-interr -> .type
modifiers -> .modifier
modifiers -> .modifiers modifier
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
enum-class -> .ENUM class-key
enum-class -> .ENUM
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"method-types":772,"type-with-interr":134,"modifiers":135,"indexer-declarator":136,"constructor-declarator":137,"TILDE":138,"EXTERN":139,"type":140,"STRUCT":141,"INTERFACE":142,"enum-class":143,"DELEGATE":144,"method-type":40,"modifier":44,"IDENTIFIER_WITH_TEMPLATE":45,"non-array-type":51,"array-type":52,"CONST":53,"ENUM":71,"INTERR":50,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"NEW":69,"IDENTIFIER":70,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 487 
class-method-header -> member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
class-method-header -> member-name-with-double-colon .
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON member-name
member-name-with-double-colon -> member-name-with-double-colon .COMMA member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name
field-variable-declarator -> member-name-with-double-colon .ASSIGN variable-initializer
field-variable-declarator -> member-name-with-double-colon .
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"OPEN_PARENS":773,"member-name":126,"COMMA":127,"ASSIGN":128,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 488 
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":116,"IDENTIFIER":70}

item set 489 
class-base -> COLON base-list .
base-list -> base-list .COMMA base-specifier 
transitions ->  {"COMMA":774}

item set 490 
base-list -> base-specifier . 
transitions ->  {}

item set 491 
base-specifier -> type-with-interr . 
transitions ->  {}

item set 492 
base-specifier -> VIRTUAL .access-specifier type-with-interr
base-specifier -> VIRTUAL .type-with-interr
access-specifier -> .PRIVATE
access-specifier -> .PROTECTED
access-specifier -> .PUBLIC
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"access-specifier":775,"type-with-interr":776,"PRIVATE":494,"PROTECTED":495,"PUBLIC":496,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 493 
base-specifier -> access-specifier .VIRTUAL type-with-interr
base-specifier -> access-specifier .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"VIRTUAL":777,"type-with-interr":778,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 494 
access-specifier -> PRIVATE . 
transitions ->  {}

item set 495 
access-specifier -> PROTECTED . 
transitions ->  {}

item set 496 
access-specifier -> PUBLIC . 
transitions ->  {}

item set 497 
block -> OPEN_BRACE statement-list CLOSE_BRACE . 
transitions ->  {}

item set 498 
statement-list -> statement-list statement . 
transitions ->  {}

item set 499 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON .switch-labels
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON .statement
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
declaration-statement -> .local-variable-declaration block
declaration-statement -> .local-constant-declaration block
declaration-statement -> .local-variable-declaration
declaration-statement -> .local-constant-declaration
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"switch-labels":779,"statement":780,"switch-label":781,"labeled-statement":230,"declaration-statement":231,"embedded-statement":232,"CASE":782,"DEFAULT":783,"IDENTIFIER_WITH_KEYWORD":233,"local-variable-declaration":234,"local-constant-declaration":235,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"TILDE":249,"IDENTIFIER_WITH_TEMPLATE":250,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":251,"ASYNC":56,"WHERE":106,"STRING":87,"primary-expression":252,"type":253,"CONST":254,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"IDENTIFIER":70,"primary-no-array-creation-expression":282,"array-creation-expression":283,"non-array-type":51,"array-type":52,"invocation-expression":284,"NEW":285,"unary-expression":286,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"STAR":325,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"BASE":333,"TYPEOF":334,"SIZEOF":335,"namespace-or-type-name":91,"TRUE":336,"FALSE":337}

item set 500 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR .expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":784,"block":785,"conditional-expression":362,"assignment":363,"OPEN_BRACE":113,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 501 
declaration-statement -> local-variable-declaration SEMICOLON . 
transitions ->  {}

item set 502 
declaration-statement -> local-variable-declaration block . 
transitions ->  {}

item set 503 
declaration-statement -> local-constant-declaration SEMICOLON . 
transitions ->  {}

item set 504 
declaration-statement -> local-constant-declaration block . 
transitions ->  {}

item set 505 
embedded-statement -> statement-expression block . 
transitions ->  {}

item set 506 
embedded-statement -> statement-expression SEMICOLON . 
transitions ->  {}

item set 507 
IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":500}

item set 508 
unary-expression -> TILDE unary-expression . 
transitions ->  {}

item set 509 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON .member-access
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON .invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"member-access":786,"invocation-expression":787,"invocation-expressions":373,"primary-expression":788,"type":379,"AWAIT":319,"primary-no-array-creation-expression":282,"array-creation-expression":283,"non-array-type":51,"array-type":52,"CONST":53,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"namespace-or-type-name":91,"TRUE":336,"FALSE":337,"IDENTIFIER":70}

item set 510 
local-variable-declaration -> primary-expression local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":789}

item set 511 
post-increment-expression -> primary-expression OP_INC . 
transitions ->  {}

item set 512 
post-decrement-expression -> primary-expression OP_DEC . 
transitions ->  {}

item set 513 
invocation-expression -> primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
type-name -> .namespace-or-type-name
expression -> .conditional-expression
expression -> .assignment
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":790,"argument-list":791,"CLOSE_PARENS":792,"non-array-type":51,"array-type":52,"CONST":53,"argument":793,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"expression":794,"REF":795,"OUT":796,"namespace-or-type-name":91,"conditional-expression":362,"assignment":363,"IDENTIFIER_WITH_KEYWORD":377,"conditional-or-expression":365,"unary-expression":366,"TILDE":249,"IDENTIFIER_WITH_TEMPLATE":250,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":251,"ASYNC":132,"WHERE":106,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"STAR":325,"primary-expression":370,"IDENTIFIER":70,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"invocation-expression":284,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"equality-expression":383,"TRUE":336,"FALSE":337,"AWAIT":319,"relational-expression":384,"shift-expression":385,"additive-expression":386,"multiplicative-expression":387}

item set 514 
member-access -> primary-expression DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":797,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 515 
member-access -> primary-expression OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":798,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 516 
local-variable-declarators -> local-variable-declarator . 
transitions ->  {}

item set 517 
local-variable-declarator -> local-variable .
local-variable-declarator -> local-variable .ASSIGN local-variable-initializer 
transitions ->  {"ASSIGN":799}

item set 518 
local-variable -> INTERR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":800,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 519 
local-variable -> STARS .IDENTIFIER_WITH_KEYWORD
STARS -> STARS .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":801,"STAR":464,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 520 
local-variable -> AMP .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":802,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 521 
local-variable -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 522 
local-variable-declaration -> type local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":789}

item set 523 
member-access -> type DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":803,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 524 
member-access -> type OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":804,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 525 
local-constant-declaration -> CONST type .constant-declarators
type -> type .TEMPLATE
array-type -> type .rank-specifiers
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":805,"TEMPLATE":182,"rank-specifiers":183,"constant-declarator":806,"rank-specifier":185,"IDENTIFIER_WITH_TEMPLATE":807,"OPEN_BRACKET":186,"IDENTIFIER":70}

item set 526 
invocation-expressions -> invocation-expressions DOT .invocation-expression
member-access -> invocation-expressions DOT .IDENTIFIER_WITH_KEYWORD
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expression":808,"IDENTIFIER_WITH_KEYWORD":809,"AWAIT":319,"primary-expression":788,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":250,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":251,"ASYNC":132,"WHERE":106,"STRING":87,"primary-no-array-creation-expression":282,"array-creation-expression":283,"IDENTIFIER":70,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"type":379,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"TRUE":336,"FALSE":337,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 527 
member-access -> invocation-expressions OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":810,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 528 
try-statement -> TRY block .catch-clauses
try-statement -> TRY block .finally-clause
try-statement -> TRY block .catch-clauses finally-clause
catch-clauses -> .specific-catch-clauses
catch-clauses -> .general-catch-clause
catch-clauses -> .specific-catch-clauses general-catch-clause
finally-clause -> .FINALLY block
specific-catch-clauses -> .specific-catch-clause
specific-catch-clauses -> .specific-catch-clauses specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block 
transitions ->  {"catch-clauses":811,"finally-clause":812,"specific-catch-clauses":813,"general-catch-clause":814,"FINALLY":815,"specific-catch-clause":816,"CATCH":817}

item set 529 
checked-statement -> CHECKED block . 
transitions ->  {}

item set 530 
checked-expression -> CHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":818,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 531 
unchecked-statement -> UNCHECKED block . 
transitions ->  {}

item set 532 
unchecked-expression -> UNCHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":819,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 533 
lock-statement -> LOCK OPEN_PARENS .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":820,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 534 
using-statement -> USING OPEN_PARENS .resource-acquisition CLOSE_PARENS embedded-statement
resource-acquisition -> .local-variable-declaration
resource-acquisition -> .expression
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
expression -> .conditional-expression
expression -> .assignment
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"resource-acquisition":821,"local-variable-declaration":822,"expression":823,"primary-expression":252,"type":253,"conditional-expression":362,"assignment":363,"primary-no-array-creation-expression":282,"array-creation-expression":283,"non-array-type":51,"array-type":52,"CONST":53,"conditional-or-expression":365,"unary-expression":366,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"namespace-or-type-name":91,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"AWAIT":319,"exclusive-or-expression":372,"and-expression":378,"equality-expression":383,"relational-expression":384,"shift-expression":385,"additive-expression":386,"multiplicative-expression":387}

item set 535 
unsafe-statement -> UNSAFE block . 
transitions ->  {}

item set 536 
fixed-statement -> modifiers FIXED .OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":824}

item set 537 
fixed-statement -> FIXED OPEN_PARENS .type local-variable-declarators CLOSE_PARENS embedded-statement
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":825,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 538 
element-access -> primary-no-array-creation-expression OPEN_BRACKET .expression-list CLOSE_BRACKET
element-access -> primary-no-array-creation-expression OPEN_BRACKET .dim-separators CLOSE_BRACKET
element-access -> primary-no-array-creation-expression OPEN_BRACKET .CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":826,"dim-separators":827,"CLOSE_BRACKET":828,"expression":829,"COMMA":451,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 539 
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_BRACKET argument-list CLOSE_BRACKET
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_PARENS":830,"block-expression-with-brace":831,"rank-specifiers":832,"OPEN_BRACKET":833,"OPEN_BRACE":545,"rank-specifier":185}

item set 540 
object-creation-expression -> NEW non-array-type .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW non-array-type .OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type .OPEN_BRACKET argument-list CLOSE_BRACKET
type-with-identifier -> non-array-type .
type -> non-array-type .AMP
type -> non-array-type .STARS
type -> non-array-type .
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
STARS -> .STARS STAR
STARS -> .STAR
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":834,"OPEN_BRACKET":835,"AMP":197,"STARS":198,"rank-specifier":185,"STAR":199}

item set 541 
object-creation-expression -> NEW rank-specifiers .block-expression-with-brace
object-creation-expression -> NEW rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":836,"rank-specifier":448,"OPEN_BRACE":545,"OPEN_BRACKET":186}

item set 542 
object-creation-expression -> NEW block-expression-with-brace . 
transitions ->  {}

item set 543 
delegate-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW type .block-expression-with-brace
type -> type .TEMPLATE
array-type -> type .rank-specifiers
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_PARENS":837,"block-expression-with-brace":838,"TEMPLATE":182,"rank-specifiers":183,"OPEN_BRACE":545,"rank-specifier":185,"OPEN_BRACKET":186}

item set 544 
type-with-identifier -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER . 
transitions ->  {"TEMPLATE":839}

item set 545 
block-expression-with-brace -> OPEN_BRACE .block-expression-list CLOSE_BRACE
block-expression-list -> .block-expression-list COMMA block-expression-list-unit
block-expression-list -> .block-expression-list-unit
block-expression-list-unit -> .block-expression-with-brace
block-expression-list-unit -> .expression
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-list":840,"block-expression-list-unit":841,"block-expression-with-brace":842,"expression":843,"OPEN_BRACE":545,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 546 
assignment -> unary-expression assignment-operator .expression
assignment -> unary-expression assignment-operator .block-expression-with-brace
expression -> .conditional-expression
expression -> .assignment
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":844,"block-expression-with-brace":845,"conditional-expression":362,"assignment":363,"OPEN_BRACE":545,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 547 
assignment-operator -> ASSIGN . 
transitions ->  {}

item set 548 
assignment-operator -> OP_ADD_ASSIGNMENT . 
transitions ->  {}

item set 549 
assignment-operator -> OP_SUB_ASSIGNMENT . 
transitions ->  {}

item set 550 
assignment-operator -> OP_MULT_ASSIGNMENT . 
transitions ->  {}

item set 551 
assignment-operator -> OP_DIV_ASSIGNMENT . 
transitions ->  {}

item set 552 
assignment-operator -> OP_MOD_ASSIGNMENT . 
transitions ->  {}

item set 553 
assignment-operator -> OP_AND_ASSIGNMENT . 
transitions ->  {}

item set 554 
assignment-operator -> OP_OR_ASSIGNMENT . 
transitions ->  {}

item set 555 
assignment-operator -> OP_XOR_ASSIGNMENT . 
transitions ->  {}

item set 556 
assignment-operator -> OP_LEFT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 557 
assignment-operator -> RIGHT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 558 
pre-increment-expression -> OP_INC unary-expression . 
transitions ->  {}

item set 559 
pre-decrement-expression -> OP_DEC unary-expression . 
transitions ->  {}

item set 560 
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":846,"expression":847,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 561 
switch-statement -> SWITCH OPEN_PARENS .expression CLOSE_PARENS switch-block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":848,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 562 
while-statement -> WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":849,"expression":847,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 563 
do-statement -> DO embedded-statement .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"WHILE":850}

item set 564 
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-initializer -> .local-variable-declaration
for-initializer -> .statement-expression-list
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"SEMICOLON":851,"for-initializer":852,"local-variable-declaration":853,"statement-expression-list":854,"primary-expression":252,"type":253,"statement-expression":855,"primary-no-array-creation-expression":282,"array-creation-expression":283,"non-array-type":51,"array-type":52,"CONST":53,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"invocation-expression":284,"NEW":380,"unary-expression":286,"OP_INC":287,"OP_DEC":288,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"TILDE":249,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"namespace-or-type-name":91,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"STAR":325,"TRUE":336,"FALSE":337,"IDENTIFIER":70}

item set 565 
foreach-statement -> FOREACH OPEN_PARENS .type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":856,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 566 
break-statement -> YIELD BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":857}

item set 567 
return-statement -> YIELD RETURN .block-expression-with-brace SEMICOLON
return-statement -> YIELD RETURN .expression SEMICOLON
return-statement -> YIELD RETURN .SEMICOLON
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-with-brace":858,"expression":859,"SEMICOLON":860,"OPEN_BRACE":545,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 568 
break-statement -> BREAK SEMICOLON . 
transitions ->  {}

item set 569 
continue-statement -> CONTINUE SEMICOLON . 
transitions ->  {}

item set 570 
goto-statement -> GOTO IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":861}

item set 571 
goto-statement -> GOTO CASE .constant-expression SEMICOLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":862,"expression":863,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 572 
goto-statement -> GOTO DEFAULT .SEMICOLON 
transitions ->  {"SEMICOLON":864}

item set 573 
return-statement -> RETURN block-expression-with-brace .SEMICOLON 
transitions ->  {"SEMICOLON":865}

item set 574 
return-statement -> RETURN SEMICOLON . 
transitions ->  {}

item set 575 
return-statement -> RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":866}

item set 576 
throw-statement -> THROW SEMICOLON . 
transitions ->  {}

item set 577 
throw-statement -> THROW expression .SEMICOLON 
transitions ->  {"SEMICOLON":867}

item set 578 
primary-no-array-creation-expression -> DELEGATE block . 
transitions ->  {}

item set 579 
delegate-expression -> DELEGATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS block
delegate-expression -> DELEGATE OPEN_PARENS .CLOSE_PARENS block
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":868,"CLOSE_PARENS":869,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 580 
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
type -> non-array-type .AMP
type -> non-array-type .STARS
type -> non-array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"OPEN_BRACKET":870,"AMP":197,"STARS":198,"STAR":199}

item set 581 
array-creation-expression -> STACKALLOC array-type .array-initializer
type -> array-type .AMP
type -> array-type .STARS
type -> array-type .
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"array-initializer":871,"AMP":200,"STARS":201,"OPEN_BRACE":364,"STAR":199}

item set 582 
array-type -> type .rank-specifiers
type -> type .TEMPLATE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":183,"TEMPLATE":182,"rank-specifier":185,"OPEN_BRACKET":186}

item set 583 
invocation-expression -> AWAIT primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> AWAIT primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> AWAIT primary-expression .OPEN_PARENS CLOSE_PARENS
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":872,"DOT":514,"OP_PTR":515,"OP_INC":511,"OP_DEC":512}

item set 584 
unary-expression -> PLUS unary-expression . 
transitions ->  {}

item set 585 
unary-expression -> OP_PTR unary-expression . 
transitions ->  {}

item set 586 
unary-expression -> OP_COALESCING unary-expression . 
transitions ->  {}

item set 587 
unary-expression -> MINUS unary-expression . 
transitions ->  {}

item set 588 
unary-expression -> BANG unary-expression . 
transitions ->  {}

item set 589 
unary-expression -> STAR unary-expression . 
transitions ->  {}

item set 590 
lambda-expression -> OPEN_PARENS dbl-expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS dbl-expression-list .CLOSE_PARENS OP_DBLPTR block
dbl-expression-list -> dbl-expression-list .COMMA expression expression 
transitions ->  {"CLOSE_PARENS":873,"COMMA":874}

item set 591 
lambda-expression -> OPEN_PARENS type-expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS type-expression-list .CLOSE_PARENS OP_DBLPTR block
type-expression-list -> type-expression-list .COMMA type expression 
transitions ->  {"CLOSE_PARENS":875,"COMMA":876}

item set 592 
lambda-expression -> OPEN_PARENS expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS expression-list .CLOSE_PARENS OP_DBLPTR block
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_PARENS":877,"COMMA":878}

item set 593 
cast-expression -> OPEN_PARENS type .expression CLOSE_PARENS OP_DBLPTR expression block
type-expression-list -> type .expression
type -> type .TEMPLATE
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
expression -> .conditional-expression
expression -> .assignment
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":879,"TEMPLATE":182,"INTERR":181,"rank-specifiers":183,"DOT":523,"OP_PTR":880,"conditional-expression":362,"assignment":363,"rank-specifier":185,"conditional-or-expression":365,"unary-expression":366,"OPEN_BRACKET":186,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 594 
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS OP_DBLPTR expression
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS expression
parenthesized-expression -> OPEN_PARENS expression .CLOSE_PARENS
dbl-expression-list -> expression .expression
expression-list -> expression .
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":881,"expression":882,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 595 
cast-expression -> OPEN_PARENS type-with-interr .CLOSE_PARENS expression 
transitions ->  {"CLOSE_PARENS":883}

item set 596 
base-access -> BASE DOT .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":884,"IDENTIFIER":70}

item set 597 
base-access -> BASE OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":885,"expression":829,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 598 
typeof-expression -> TYPEOF OPEN_PARENS .type-with-interr CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":886,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 599 
sizeof-expression -> SIZEOF OPEN_PARENS .type-with-interr CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":887,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 600 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":888}

item set 601 
struct-body -> OPEN_BRACE .CLOSE_BRACE
struct-body -> OPEN_BRACE .struct-member-declarations CLOSE_BRACE
struct-member-declarations -> .struct-member-declaration
struct-member-declarations -> .struct-member-declarations struct-member-declaration
struct-member-declaration -> .field-declaration
struct-member-declaration -> .method-declaration
struct-member-declaration -> .property-declaration
struct-member-declaration -> .indexer-declaration
struct-member-declaration -> .operator-declaration
struct-member-declaration -> .constructor-declaration
struct-member-declaration -> .static-constructor-declaration
struct-member-declaration -> .type-declaration
field-declaration -> .field-variable-declarators SEMICOLON
field-declaration -> .method-types field-variable-declarators SEMICOLON
field-declaration -> .attributes method-types field-variable-declarators SEMICOLON
method-declaration -> .method-header method-prefixs block
method-declaration -> .method-header block
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
field-variable-declarators -> .field-variable-declarators COMMA field-variable-declarator
field-variable-declarators -> .field-variable-declarator
method-types -> .method-types method-type
method-types -> .method-type
attributes -> .attribute-sections
method-header -> .method-types member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes method-types member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
modifiers -> .modifier
modifiers -> .modifiers modifier
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
field-variable-declarator -> .member-name-with-double-colon ASSIGN variable-initializer
field-variable-declarator -> .member-name-with-double-colon
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
enum-class -> .ENUM class-key
enum-class -> .ENUM
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"CLOSE_BRACE":889,"struct-member-declarations":890,"struct-member-declaration":891,"field-declaration":892,"method-declaration":893,"property-declaration":894,"indexer-declaration":895,"operator-declaration":896,"constructor-declaration":897,"static-constructor-declaration":898,"type-declaration":899,"field-variable-declarators":27,"method-types":23,"attributes":900,"method-header":9,"type-with-interr":28,"modifiers":901,"indexer-declarator":30,"constructor-declarator":31,"struct-declaration":34,"interface-declaration":35,"enum-declaration":36,"delegate-declaration":37,"field-variable-declarator":43,"method-type":40,"attribute-sections":42,"member-name-with-double-colon":902,"type":903,"modifier":44,"IDENTIFIER_WITH_TEMPLATE":45,"STRUCT":488,"INTERFACE":46,"enum-class":47,"DELEGATE":48,"INTERR":50,"attribute-section":54,"non-array-type":51,"array-type":52,"CONST":53,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"IDENTIFIER":70,"ENUM":71,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 602 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":904,"OPEN_BRACE":601}

item set 603 
struct-interfaces -> COLON interface-type-list . 
transitions ->  {}

item set 604 
method-header -> method-types member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 605 
method-header -> method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":905}

item set 606 
method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS .
class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 607 
formal-parameter-list -> fixed-parameters COMMA .parameter-array
fixed-parameters -> fixed-parameters COMMA .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"parameter-array":906,"fixed-parameter":907,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 608 
parameter-array -> PARAMS array-type .IDENTIFIER_WITH_TEMPLATE
type -> array-type .AMP
type -> array-type .STARS
type -> array-type .
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":908,"AMP":200,"STARS":201,"IDENTIFIER":70,"STAR":199}

item set 609 
parameter-array -> attributes PARAMS .array-type IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> PARAMS .
array-type -> .type rank-specifiers
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"array-type":909,"type":582,"non-array-type":51,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 610 
fixed-parameter -> attributes type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":910,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 611 
fixed-parameter -> attributes parameter-modifier .type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":911,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 612 
fixed-parameter -> CONST type-with-interr .IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> CONST type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":912,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 613 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD .ASSIGN expression
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"ASSIGN":913}

item set 614 
fixed-parameter -> THIS type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":914,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 615 
fixed-parameter -> parameter-modifier type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":915,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 616 
member-name-with-double-colon -> member-name-with-double-colon member-name DOUBLE_COLON TILDE .member-name
IDENTIFIER_WITH_KEYWORD -> TILDE .IDENTIFIER_WITH_KEYWORD
member-name -> .variable-declarators
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"member-name":916,"IDENTIFIER_WITH_KEYWORD":917,"variable-declarators":129,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":87,"variable-declarator":130,"IDENTIFIER":70,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 617 
member-name-with-double-colon -> member-name-with-double-colon member-name DOUBLE_COLON member-name . 
transitions ->  {}

item set 618 
array-initializer -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 619 
array-initializer -> OPEN_BRACE variable-initializer-list .CLOSE_BRACE
array-initializer -> OPEN_BRACE variable-initializer-list .COMMA CLOSE_BRACE
variable-initializer-list -> variable-initializer-list .COMMA variable-initializer 
transitions ->  {"CLOSE_BRACE":918,"COMMA":919}

item set 620 
variable-initializer-list -> variable-initializer . 
transitions ->  {}

item set 621 
conditional-expression -> conditional-or-expression INTERR .expression
conditional-expression -> conditional-or-expression INTERR .expression COLON expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":920,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 622 
conditional-or-expression -> conditional-or-expression OP_OR .conditional-and-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"conditional-and-expression":921,"inclusive-or-expression":371,"exclusive-or-expression":372,"and-expression":378,"equality-expression":383,"relational-expression":384,"shift-expression":385,"additive-expression":386,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 623 
conditional-and-expression -> conditional-and-expression OP_AND .inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"inclusive-or-expression":923,"exclusive-or-expression":372,"and-expression":378,"equality-expression":383,"relational-expression":384,"shift-expression":385,"additive-expression":386,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 624 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR .exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"exclusive-or-expression":924,"and-expression":378,"equality-expression":383,"relational-expression":384,"shift-expression":385,"additive-expression":386,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 625 
exclusive-or-expression -> exclusive-or-expression CARET .and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"and-expression":925,"equality-expression":383,"relational-expression":384,"shift-expression":385,"additive-expression":386,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 626 
and-expression -> and-expression AMP .equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"equality-expression":926,"relational-expression":384,"shift-expression":385,"additive-expression":386,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 627 
equality-expression -> equality-expression OP_EQ .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"relational-expression":927,"shift-expression":385,"additive-expression":386,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 628 
equality-expression -> equality-expression OP_NE .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"relational-expression":928,"shift-expression":385,"additive-expression":386,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 629 
relational-expression -> relational-expression LT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":929,"additive-expression":386,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 630 
relational-expression -> relational-expression GT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":930,"additive-expression":386,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 631 
relational-expression -> relational-expression OP_LE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":931,"additive-expression":386,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 632 
relational-expression -> relational-expression OP_GE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":932,"additive-expression":386,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 633 
relational-expression -> relational-expression OP_COALESCING .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":933,"additive-expression":386,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 634 
relational-expression -> relational-expression IS .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":934,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 635 
relational-expression -> relational-expression AS .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":935,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 636 
shift-expression -> shift-expression OP_LEFT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"additive-expression":936,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 637 
shift-expression -> shift-expression RIGHT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"additive-expression":937,"multiplicative-expression":387,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 638 
additive-expression -> additive-expression PLUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":938,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 639 
additive-expression -> additive-expression OP_PTR .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":939,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 640 
additive-expression -> additive-expression OP_COALESCING .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":940,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 641 
additive-expression -> additive-expression MINUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":941,"unary-expression":922,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 642 
multiplicative-expression -> multiplicative-expression STAR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":942,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 643 
multiplicative-expression -> multiplicative-expression DIV .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":943,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 644 
multiplicative-expression -> multiplicative-expression PERCENT .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":944,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 645 
variable-declarators -> variable-declarators COMMA variable-declarator . 
transitions ->  {}

item set 646 
variable-declarator -> type ASSIGN variable-initializer . 
transitions ->  {}

item set 647 
method-header -> attributes method-types member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
method-header -> attributes method-types member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":945,"formal-parameter-list":946,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 648 
field-declaration -> attributes method-types field-variable-declarators SEMICOLON . 
transitions ->  {}

item set 649 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":947,"get-accessor-declaration":438,"set-accessor-declaration":439,"attributes":440,"modifiers":441,"GET":442,"SET":443,"attribute-sections":42,"modifier":301,"attribute-section":54,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"OPEN_BRACKET":90}

item set 650 
property-declaration -> attributes modifiers type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"OPEN_BRACE":948,"OPEN_BRACKET":418}

item set 651 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":949,"get-accessor-declaration":438,"set-accessor-declaration":439,"attributes":440,"modifiers":441,"GET":442,"SET":443,"attribute-sections":42,"modifier":301,"attribute-section":54,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"OPEN_BRACKET":90}

item set 652 
operator-declaration -> attributes modifiers operator-declarator method-body . 
transitions ->  {}

item set 653 
constructor-declaration -> attributes modifiers constructor-declarator method-body . 
transitions ->  {}

item set 654 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":950,"formal-parameter-list":453,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 655 
class-method-header -> attributes modifiers type member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
class-method-header -> attributes modifiers type member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON member-name
member-name-with-double-colon -> member-name-with-double-colon .COMMA member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"OPEN_PARENS":951,"member-name":126,"COMMA":127,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 656 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
struct-interfaces -> .COLON interface-type-list 
transitions ->  {"where-base":952,"struct-interfaces":953,"COLON":340}

item set 657 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
interface-base -> .COLON interface-type-list 
transitions ->  {"where-base":954,"interface-base":955,"COLON":456}

item set 658 
enum-declaration -> attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":956,"enum-base":957,"OPEN_BRACE":459,"COLON":460}

item set 659 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":958,"IDENTIFIER":70}

item set 660 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":959}

item set 661 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":960}

item set 662 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":961}

item set 663 
class-method-header -> attributes type member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
class-method-header -> attributes type member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":962,"formal-parameter-list":963,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 664 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":964,"OPEN_BRACE":601}

item set 665 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON 
transitions ->  {"where-base":965}

item set 666 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":966,"OPEN_BRACE":741}

item set 667 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON 
transitions ->  {"where-base":967}

item set 668 
enum-declaration -> attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":968}

item set 669 
enum-declaration -> attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":969,"OPEN_BRACE":459}

item set 670 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":970}

item set 671 
class-method-declaration -> class-method-header method-prefixs block SEMICOLON . 
transitions ->  {}

item set 672 
property-declaration -> type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":971}

item set 673 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACKET":972}

item set 674 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACKET":973}

item set 675 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":974,"get-accessor-declaration":438,"set-accessor-declaration":439,"attributes":440,"modifiers":441,"GET":442,"SET":443,"attribute-sections":42,"modifier":301,"attribute-section":54,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"OPEN_BRACKET":90}

item set 676 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":975}

item set 677 
overloadable-operator -> overloadable-unary-operator . 
transitions ->  {}

item set 678 
overloadable-operator -> overloadable-binary-operator . 
transitions ->  {}

item set 679 
overloadable-unary-operator -> OP_INC . 
transitions ->  {}

item set 680 
overloadable-unary-operator -> OP_DEC . 
transitions ->  {}

item set 681 
overloadable-unary-operator -> MINUS .
overloadable-binary-operator -> MINUS . 
transitions ->  {}

item set 682 
overloadable-unary-operator -> BANG . 
transitions ->  {}

item set 683 
overloadable-unary-operator -> TILDE . 
transitions ->  {}

item set 684 
overloadable-unary-operator -> PLUS .
overloadable-binary-operator -> PLUS . 
transitions ->  {}

item set 685 
overloadable-unary-operator -> TRUE . 
transitions ->  {}

item set 686 
overloadable-unary-operator -> FALSE . 
transitions ->  {}

item set 687 
overloadable-binary-operator -> STAR . 
transitions ->  {}

item set 688 
overloadable-binary-operator -> DIV . 
transitions ->  {}

item set 689 
overloadable-binary-operator -> PERCENT . 
transitions ->  {}

item set 690 
overloadable-binary-operator -> AMP . 
transitions ->  {}

item set 691 
overloadable-binary-operator -> BITWISE_OR . 
transitions ->  {}

item set 692 
overloadable-binary-operator -> CARET . 
transitions ->  {}

item set 693 
overloadable-binary-operator -> OP_LEFT_SHIFT . 
transitions ->  {}

item set 694 
overloadable-binary-operator -> RIGHT_SHIFT . 
transitions ->  {}

item set 695 
overloadable-binary-operator -> OP_EQ . 
transitions ->  {}

item set 696 
overloadable-binary-operator -> OP_NE . 
transitions ->  {}

item set 697 
overloadable-binary-operator -> OP_GE . 
transitions ->  {}

item set 698 
overloadable-binary-operator -> OP_LE . 
transitions ->  {}

item set 699 
overloadable-binary-operator -> GT . 
transitions ->  {}

item set 700 
overloadable-binary-operator -> LT . 
transitions ->  {}

item set 701 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":976}

item set 702 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
method-body -> .block
method-body -> .SEMICOLON
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":977,"constructor-initializer":737,"block":173,"SEMICOLON":174,"COLON":738,"OPEN_BRACE":113}

item set 703 
destructor-declaration -> modifiers TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":978}

item set 704 
destructor-declaration -> modifiers attributes TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":979}

item set 705 
destructor-declaration -> modifiers attributes EXTERN TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":980,"IDENTIFIER":70}

item set 706 
destructor-declaration -> modifiers EXTERN TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":981}

item set 707 
class-method-header -> modifiers type member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
class-method-header -> modifiers type member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":982,"formal-parameter-list":983,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 708 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":984,"OPEN_BRACE":601}

item set 709 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON 
transitions ->  {"where-base":985}

item set 710 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":986,"OPEN_BRACE":741}

item set 711 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON 
transitions ->  {"where-base":987}

item set 712 
enum-declaration -> modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":988}

item set 713 
enum-declaration -> modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":989,"OPEN_BRACE":459}

item set 714 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":990}

item set 715 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":991}

item set 716 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":992}

item set 717 
indexer-declaration -> indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 718 
accessor-declarations -> get-accessor-declaration set-accessor-declaration . 
transitions ->  {}

item set 719 
set-accessor-declaration -> attributes .modifiers SET method-body
set-accessor-declaration -> attributes .SET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":993,"SET":726,"modifier":301,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69}

item set 720 
set-accessor-declaration -> modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"SET":728,"modifier":161,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69}

item set 721 
accessor-declarations -> set-accessor-declaration get-accessor-declaration . 
transitions ->  {}

item set 722 
get-accessor-declaration -> attributes .modifiers GET method-body
get-accessor-declaration -> attributes .GET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":994,"GET":725,"modifier":301,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69}

item set 723 
get-accessor-declaration -> modifiers .GET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":727,"modifier":161,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69}

item set 724 
get-accessor-declaration -> attributes modifiers .GET method-body
set-accessor-declaration -> attributes modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":995,"SET":996,"modifier":161,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69}

item set 725 
get-accessor-declaration -> attributes GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":997,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 726 
set-accessor-declaration -> attributes SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":998,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 727 
get-accessor-declaration -> modifiers GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":999,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 728 
set-accessor-declaration -> modifiers SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1000,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 729 
get-accessor-declaration -> GET method-body . 
transitions ->  {}

item set 730 
set-accessor-declaration -> SET method-body . 
transitions ->  {}

item set 731 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1001,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 732 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1002}

item set 733 
class-method-header -> type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 734 
class-method-header -> type member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1003}

item set 735 
rank-specifier -> OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 736 
dim-separators -> dim-separators COMMA . 
transitions ->  {}

item set 737 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer . 
transitions ->  {}

item set 738 
constructor-initializer -> COLON .BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON .BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> COLON .THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON .THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"BASE":1004,"THIS":1005}

item set 739 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .constructor-initializer
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"constructor-initializer":1006,"COLON":738}

item set 740 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1007}

item set 741 
interface-body -> OPEN_BRACE .CLOSE_BRACE
interface-body -> OPEN_BRACE .interface-member-declarations CLOSE_BRACE
interface-member-declarations -> .interface-member-declaration
interface-member-declarations -> .interface-member-declarations interface-member-declaration
interface-member-declaration -> .interface-method-declaration
interface-member-declaration -> .interface-property-declaration
interface-member-declaration -> .interface-indexer-declaration
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
attributes -> .attribute-sections
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACE":1008,"interface-member-declarations":1009,"interface-member-declaration":1010,"interface-method-declaration":1011,"interface-property-declaration":1012,"interface-indexer-declaration":1013,"type-with-interr":1014,"attributes":1015,"NEW":1016,"type":192,"attribute-sections":42,"non-array-type":51,"array-type":52,"CONST":53,"attribute-section":54,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"OPEN_BRACKET":90,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 742 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1017,"OPEN_BRACE":741}

item set 743 
interface-base -> COLON interface-type-list . 
transitions ->  {}

item set 744 
enum-declaration -> enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 745 
enum-declaration -> enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1018}

item set 746 
enum-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 747 
enum-body -> OPEN_BRACE enum-member-declarations .CLOSE_BRACE
enum-body -> OPEN_BRACE enum-member-declarations .COMMA CLOSE_BRACE
enum-member-declarations -> enum-member-declarations .COMMA enum-member-declaration 
transitions ->  {"CLOSE_BRACE":1019,"COMMA":1020}

item set 748 
enum-member-declarations -> enum-member-declaration . 
transitions ->  {}

item set 749 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE .
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":1021}

item set 750 
enum-member-declaration -> attributes .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> attributes .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1022,"IDENTIFIER":70}

item set 751 
enum-base -> COLON type-with-interr . 
transitions ->  {}

item set 752 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1023,"formal-parameter-list":1024,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 753 
using-alias-directive -> USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name .SEMICOLON
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD 
transitions ->  {"SEMICOLON":1025,"DOUBLE_COLON":217,"DOT":218}

item set 754 
attribute-section -> OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 755 
attribute-list -> attribute-list COMMA attribute . 
transitions ->  {}

item set 756 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 757 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":1026,"attribute":755,"attribute-name":209,"type-name":216,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 758 
attribute-arguments -> OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 759 
attribute-arguments -> OPEN_PARENS positional-argument-list .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS positional-argument-list .COMMA named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list .COMMA positional-argument 
transitions ->  {"CLOSE_PARENS":1027,"COMMA":1028}

item set 760 
attribute-arguments -> OPEN_PARENS named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":1029,"COMMA":1030}

item set 761 
positional-argument-list -> positional-argument . 
transitions ->  {}

item set 762 
named-argument-list -> named-argument . 
transitions ->  {}

item set 763 
positional-argument -> attribute-argument-expression . 
transitions ->  {}

item set 764 
named-argument -> IDENTIFIER_WITH_TEMPLATE .ASSIGN attribute-argument-expression
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON member-access
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON invocation-expression
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"ASSIGN":1031,"DOUBLE_COLON":509}

item set 765 
attribute-argument-expression -> expression . 
transitions ->  {}

item set 766 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON . 
transitions ->  {}

item set 767 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON . 
transitions ->  {}

item set 768 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body .
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":1032}

item set 769 
class-body -> OPEN_BRACE member-list CLOSE_BRACE . 
transitions ->  {}

item set 770 
member-list -> class-member-declaration member-list . 
transitions ->  {}

item set 771 
member-list -> access-specifier COLON .member-list
member-list -> access-specifier COLON .
member-list -> .class-member-declaration member-list
member-list -> .class-member-declaration
member-list -> .access-specifier COLON member-list
member-list -> .access-specifier COLON
class-member-declaration -> .class-method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
class-member-declaration -> .using-directive
access-specifier -> .PRIVATE
access-specifier -> .PROTECTED
access-specifier -> .PUBLIC
class-method-declaration -> .class-method-header method-prefixs block SEMICOLON
class-method-declaration -> .class-method-header method-prefixs block
class-method-declaration -> .class-method-header method-prefixs SEMICOLON
class-method-declaration -> .class-method-header method-prefixs
class-method-declaration -> .class-method-header block SEMICOLON
class-method-declaration -> .class-method-header block
class-method-declaration -> .class-method-header SEMICOLON
class-method-declaration -> .class-method-header
field-declaration -> .field-variable-declarators SEMICOLON
field-declaration -> .method-types field-variable-declarators SEMICOLON
field-declaration -> .attributes method-types field-variable-declarators SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .modifiers attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
class-method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
class-method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
class-method-header -> .member-name-with-double-colon
field-variable-declarators -> .field-variable-declarators COMMA field-variable-declarator
field-variable-declarators -> .field-variable-declarator
method-types -> .method-types method-type
method-types -> .method-type
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
modifiers -> .modifier
modifiers -> .modifiers modifier
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
field-variable-declarator -> .member-name-with-double-colon ASSIGN variable-initializer
field-variable-declarator -> .member-name-with-double-colon
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
enum-class -> .ENUM class-key
enum-class -> .ENUM
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"member-list":1033,"class-member-declaration":480,"access-specifier":481,"class-method-declaration":10,"field-declaration":11,"property-declaration":12,"indexer-declaration":13,"operator-declaration":14,"constructor-declaration":15,"static-constructor-declaration":16,"destructor-declaration":17,"type-declaration":18,"using-directive":19,"PRIVATE":482,"PROTECTED":483,"PUBLIC":484,"class-method-header":26,"field-variable-declarators":27,"method-types":485,"attributes":486,"type-with-interr":28,"modifiers":29,"indexer-declarator":30,"constructor-declarator":31,"TILDE":32,"EXTERN":33,"struct-declaration":34,"interface-declaration":35,"enum-declaration":36,"delegate-declaration":37,"using-alias-directive":38,"using-namespace-directive":39,"member-name-with-double-colon":487,"type":41,"field-variable-declarator":43,"method-type":40,"attribute-sections":42,"modifier":44,"IDENTIFIER_WITH_TEMPLATE":45,"STRUCT":488,"INTERFACE":46,"enum-class":47,"DELEGATE":48,"USING":49,"non-array-type":51,"array-type":52,"CONST":53,"INTERR":50,"attribute-section":54,"UNSAFE":55,"ASYNC":56,"PARTIAL":58,"INTERNAL":60,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"NEW":69,"IDENTIFIER":70,"ENUM":71,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"OPEN_BRACKET":90,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 772 
field-declaration -> attributes method-types .field-variable-declarators SEMICOLON
method-types -> method-types .method-type
field-variable-declarators -> .field-variable-declarators COMMA field-variable-declarator
field-variable-declarators -> .field-variable-declarator
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
field-variable-declarator -> .member-name-with-double-colon ASSIGN variable-initializer
field-variable-declarator -> .member-name-with-double-colon
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"field-variable-declarators":391,"method-type":119,"field-variable-declarator":43,"type":120,"INTERR":50,"modifier":121,"member-name-with-double-colon":416,"non-array-type":51,"array-type":52,"CONST":53,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106,"IDENTIFIER":70}

item set 773 
class-method-header -> member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
class-method-header -> member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1034,"CLOSE_PARENS":1035,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 774 
base-list -> base-list COMMA .base-specifier
base-specifier -> .type-with-interr
base-specifier -> .VIRTUAL access-specifier type-with-interr
base-specifier -> .VIRTUAL type-with-interr
base-specifier -> .access-specifier VIRTUAL type-with-interr
base-specifier -> .access-specifier type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
access-specifier -> .PRIVATE
access-specifier -> .PROTECTED
access-specifier -> .PUBLIC
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"base-specifier":1036,"type-with-interr":491,"VIRTUAL":492,"access-specifier":493,"type":192,"PRIVATE":494,"PROTECTED":495,"PUBLIC":496,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 775 
base-specifier -> VIRTUAL access-specifier .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1037,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 776 
base-specifier -> VIRTUAL type-with-interr . 
transitions ->  {}

item set 777 
base-specifier -> access-specifier VIRTUAL .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1038,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 778 
base-specifier -> access-specifier type-with-interr . 
transitions ->  {}

item set 779 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels .
switch-labels -> switch-labels .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"switch-label":1039,"CASE":782,"DEFAULT":1040}

item set 780 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON statement . 
transitions ->  {}

item set 781 
switch-labels -> switch-label . 
transitions ->  {}

item set 782 
switch-label -> CASE .constant-expression COLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1041,"expression":863,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 783 
switch-label -> DEFAULT .COLON
IDENTIFIER_WITH_KEYWORD -> DEFAULT . 
transitions ->  {"COLON":1042}

item set 784 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression . 
transitions ->  {}

item set 785 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR block . 
transitions ->  {}

item set 786 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access .
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 787 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression .
invocation-expressions -> invocation-expression . 
transitions ->  {}

item set 788 
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC 
transitions ->  {"DOT":514,"OP_PTR":515,"OPEN_PARENS":513,"OP_INC":511,"OP_DEC":512}

item set 789 
local-variable-declarators -> local-variable-declarators COMMA .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .AMP IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarator":1043,"local-variable":517,"INTERR":518,"STARS":519,"AMP":520,"IDENTIFIER_WITH_KEYWORD":521,"STAR":199,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 790 
invocation-expression -> primary-expression OPEN_PARENS type .CLOSE_PARENS
type -> type .TEMPLATE
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":1044,"TEMPLATE":182,"rank-specifiers":183,"DOT":523,"OP_PTR":524,"rank-specifier":185,"OPEN_BRACKET":186}

item set 791 
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1045,"COLON":1046,"COMMA":1047}

item set 792 
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 793 
argument-list -> argument . 
transitions ->  {}

item set 794 
argument -> expression . 
transitions ->  {}

item set 795 
argument -> REF .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":1048,"expression":1049,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 796 
argument -> OUT .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":1050,"expression":1049,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 797 
member-access -> primary-expression DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 798 
member-access -> primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 799 
local-variable-declarator -> local-variable ASSIGN .local-variable-initializer
local-variable-initializer -> .expression
local-variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"local-variable-initializer":1051,"expression":1052,"array-initializer":1053,"conditional-expression":362,"assignment":363,"OPEN_BRACE":364,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 800 
local-variable -> INTERR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 801 
local-variable -> STARS IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 802 
local-variable -> AMP IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 803 
member-access -> type DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 804 
member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 805 
local-constant-declaration -> CONST type constant-declarators .
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"COMMA":1054}

item set 806 
constant-declarators -> constant-declarator .
constant-declarators -> constant-declarator . 
transitions ->  {}

item set 807 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression
constant-declarator -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":1055}

item set 808 
invocation-expressions -> invocation-expressions DOT invocation-expression .
invocation-expressions -> invocation-expression . 
transitions ->  {}

item set 809 
member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":500}

item set 810 
member-access -> invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 811 
try-statement -> TRY block catch-clauses .
try-statement -> TRY block catch-clauses .finally-clause
finally-clause -> .FINALLY block 
transitions ->  {"finally-clause":1056,"FINALLY":815}

item set 812 
try-statement -> TRY block finally-clause . 
transitions ->  {}

item set 813 
catch-clauses -> specific-catch-clauses .
catch-clauses -> specific-catch-clauses .general-catch-clause
specific-catch-clauses -> specific-catch-clauses .specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block 
transitions ->  {"general-catch-clause":1057,"specific-catch-clause":1058,"CATCH":817}

item set 814 
catch-clauses -> general-catch-clause . 
transitions ->  {}

item set 815 
finally-clause -> FINALLY .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1059,"OPEN_BRACE":113}

item set 816 
specific-catch-clauses -> specific-catch-clause . 
transitions ->  {}

item set 817 
general-catch-clause -> CATCH .block
specific-catch-clause -> CATCH .OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> CATCH .OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1060,"OPEN_PARENS":1061,"OPEN_BRACE":113}

item set 818 
checked-expression -> CHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1062}

item set 819 
unchecked-expression -> UNCHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1063}

item set 820 
lock-statement -> LOCK OPEN_PARENS expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1064}

item set 821 
using-statement -> USING OPEN_PARENS resource-acquisition .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1065}

item set 822 
resource-acquisition -> local-variable-declaration . 
transitions ->  {}

item set 823 
resource-acquisition -> expression . 
transitions ->  {}

item set 824 
fixed-statement -> modifiers FIXED OPEN_PARENS .type local-variable-declarators CLOSE_PARENS embedded-statement
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":1066,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 825 
fixed-statement -> FIXED OPEN_PARENS type .local-variable-declarators CLOSE_PARENS embedded-statement
type -> type .TEMPLATE
array-type -> type .rank-specifiers
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .AMP IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":1067,"TEMPLATE":182,"rank-specifiers":183,"local-variable-declarator":516,"rank-specifier":185,"local-variable":517,"OPEN_BRACKET":186,"INTERR":518,"STARS":519,"AMP":520,"IDENTIFIER_WITH_KEYWORD":521,"STAR":199,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 826 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":1068,"COMMA":878}

item set 827 
element-access -> primary-no-array-creation-expression OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":1069,"COMMA":736}

item set 828 
element-access -> primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 829 
expression-list -> expression . 
transitions ->  {}

item set 830 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS block-expression-with-brace
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":1070,"CLOSE_PARENS":1071,"argument":793,"expression":794,"REF":795,"OUT":796,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 831 
object-creation-expression -> NEW type-with-identifier block-expression-with-brace . 
transitions ->  {}

item set 832 
object-creation-expression -> NEW type-with-identifier rank-specifiers .block-expression-with-brace
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":1072,"rank-specifier":448,"OPEN_BRACE":545,"OPEN_BRACKET":186}

item set 833 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET .argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET .argument-list CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":1073,"dim-separators":449,"CLOSE_BRACKET":450,"argument":793,"COMMA":451,"expression":794,"REF":795,"OUT":796,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 834 
object-creation-expression -> NEW non-array-type rank-specifiers .block-expression-with-brace
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":1074,"rank-specifier":448,"OPEN_BRACE":545,"OPEN_BRACKET":186}

item set 835 
object-creation-expression -> NEW non-array-type OPEN_BRACKET .argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET .argument-list CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":1075,"dim-separators":449,"CLOSE_BRACKET":450,"argument":793,"COMMA":451,"expression":794,"REF":795,"OUT":796,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 836 
object-creation-expression -> NEW rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 837 
delegate-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS
delegate-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":1076,"CLOSE_PARENS":1077,"argument":793,"expression":794,"REF":795,"OUT":796,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 838 
delegate-creation-expression -> NEW type block-expression-with-brace . 
transitions ->  {}

item set 839 
type-with-identifier -> IDENTIFIER TEMPLATE .
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE . 
transitions ->  {}

item set 840 
block-expression-with-brace -> OPEN_BRACE block-expression-list .CLOSE_BRACE
block-expression-list -> block-expression-list .COMMA block-expression-list-unit 
transitions ->  {"CLOSE_BRACE":1078,"COMMA":1079}

item set 841 
block-expression-list -> block-expression-list-unit . 
transitions ->  {}

item set 842 
block-expression-list-unit -> block-expression-with-brace . 
transitions ->  {}

item set 843 
block-expression-list-unit -> expression . 
transitions ->  {}

item set 844 
assignment -> unary-expression assignment-operator expression . 
transitions ->  {}

item set 845 
assignment -> unary-expression assignment-operator block-expression-with-brace . 
transitions ->  {}

item set 846 
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"CLOSE_PARENS":1080}

item set 847 
boolean-expression -> expression .
boolean-expression -> expression . 
transitions ->  {}

item set 848 
switch-statement -> SWITCH OPEN_PARENS expression .CLOSE_PARENS switch-block 
transitions ->  {"CLOSE_PARENS":1081}

item set 849 
while-statement -> WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1082}

item set 850 
do-statement -> DO embedded-statement WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":1083}

item set 851 
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":1084,"for-condition":1085,"boolean-expression":1086,"expression":847,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 852 
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":1087}

item set 853 
for-initializer -> local-variable-declaration . 
transitions ->  {}

item set 854 
for-initializer -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":1088}

item set 855 
statement-expression-list -> statement-expression . 
transitions ->  {}

item set 856 
foreach-statement -> FOREACH OPEN_PARENS type .IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
type -> type .TEMPLATE
array-type -> type .rank-specifiers
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":1089,"TEMPLATE":182,"rank-specifiers":183,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"rank-specifier":185,"IDENTIFIER":70,"OPEN_BRACKET":186}

item set 857 
break-statement -> YIELD BREAK SEMICOLON . 
transitions ->  {}

item set 858 
return-statement -> YIELD RETURN block-expression-with-brace .SEMICOLON 
transitions ->  {"SEMICOLON":1090}

item set 859 
return-statement -> YIELD RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":1091}

item set 860 
return-statement -> YIELD RETURN SEMICOLON . 
transitions ->  {}

item set 861 
goto-statement -> GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 862 
goto-statement -> GOTO CASE constant-expression .SEMICOLON 
transitions ->  {"SEMICOLON":1092}

item set 863 
constant-expression -> expression . 
transitions ->  {}

item set 864 
goto-statement -> GOTO DEFAULT SEMICOLON . 
transitions ->  {}

item set 865 
return-statement -> RETURN block-expression-with-brace SEMICOLON . 
transitions ->  {}

item set 866 
return-statement -> RETURN expression SEMICOLON . 
transitions ->  {}

item set 867 
throw-statement -> THROW expression SEMICOLON . 
transitions ->  {}

item set 868 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":1093}

item set 869 
delegate-expression -> DELEGATE OPEN_PARENS CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1094,"OPEN_BRACE":113}

item set 870 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACKET":1095,"expression-list":1096,"expression":829,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 871 
array-creation-expression -> STACKALLOC array-type array-initializer . 
transitions ->  {}

item set 872 
invocation-expression -> AWAIT primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> AWAIT primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> AWAIT primary-expression OPEN_PARENS .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
type-name -> .namespace-or-type-name
expression -> .conditional-expression
expression -> .assignment
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":1097,"argument-list":1098,"CLOSE_PARENS":1099,"non-array-type":51,"array-type":52,"CONST":53,"argument":793,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"expression":794,"REF":795,"OUT":796,"namespace-or-type-name":91,"conditional-expression":362,"assignment":363,"IDENTIFIER_WITH_KEYWORD":377,"conditional-or-expression":365,"unary-expression":366,"TILDE":249,"IDENTIFIER_WITH_TEMPLATE":250,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":251,"ASYNC":132,"WHERE":106,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"STAR":325,"primary-expression":370,"IDENTIFIER":70,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"invocation-expression":284,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"equality-expression":383,"TRUE":336,"FALSE":337,"AWAIT":319,"relational-expression":384,"shift-expression":385,"additive-expression":386,"multiplicative-expression":387}

item set 873 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":1100}

item set 874 
dbl-expression-list -> dbl-expression-list COMMA .expression expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1101,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 875 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":1102}

item set 876 
type-expression-list -> type-expression-list COMMA .type expression
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":1103,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 877 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":1104}

item set 878 
expression-list -> expression-list COMMA .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1105,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 879 
cast-expression -> OPEN_PARENS type expression .CLOSE_PARENS OP_DBLPTR expression block
type-expression-list -> type expression . 
transitions ->  {"CLOSE_PARENS":1106}

item set 880 
member-access -> type OP_PTR .IDENTIFIER_WITH_KEYWORD
unary-expression -> OP_PTR .unary-expression
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":1107,"unary-expression":585,"TILDE":249,"IDENTIFIER_WITH_TEMPLATE":250,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":251,"ASYNC":132,"WHERE":106,"STRING":87,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"STAR":325,"primary-expression":370,"IDENTIFIER":70,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"type":379,"invocation-expression":284,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"TRUE":336,"FALSE":337,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 881 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .OP_DBLPTR expression block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .OP_DBLPTR expression
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .expression
parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS .
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"OP_DBLPTR":1108,"expression":1109,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 882 
dbl-expression-list -> expression expression . 
transitions ->  {}

item set 883 
cast-expression -> OPEN_PARENS type-with-interr CLOSE_PARENS .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1110,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 884 
base-access -> BASE DOT IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 885 
base-access -> BASE OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":1111,"COMMA":878}

item set 886 
typeof-expression -> TYPEOF OPEN_PARENS type-with-interr .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1112}

item set 887 
sizeof-expression -> SIZEOF OPEN_PARENS type-with-interr .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1113}

item set 888 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 889 
struct-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 890 
struct-body -> OPEN_BRACE struct-member-declarations .CLOSE_BRACE
struct-member-declarations -> struct-member-declarations .struct-member-declaration
struct-member-declaration -> .field-declaration
struct-member-declaration -> .method-declaration
struct-member-declaration -> .property-declaration
struct-member-declaration -> .indexer-declaration
struct-member-declaration -> .operator-declaration
struct-member-declaration -> .constructor-declaration
struct-member-declaration -> .static-constructor-declaration
struct-member-declaration -> .type-declaration
field-declaration -> .field-variable-declarators SEMICOLON
field-declaration -> .method-types field-variable-declarators SEMICOLON
field-declaration -> .attributes method-types field-variable-declarators SEMICOLON
method-declaration -> .method-header method-prefixs block
method-declaration -> .method-header block
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
field-variable-declarators -> .field-variable-declarators COMMA field-variable-declarator
field-variable-declarators -> .field-variable-declarator
method-types -> .method-types method-type
method-types -> .method-type
attributes -> .attribute-sections
method-header -> .method-types member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes method-types member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
modifiers -> .modifier
modifiers -> .modifiers modifier
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
field-variable-declarator -> .member-name-with-double-colon ASSIGN variable-initializer
field-variable-declarator -> .member-name-with-double-colon
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
enum-class -> .ENUM class-key
enum-class -> .ENUM
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"CLOSE_BRACE":1114,"struct-member-declaration":1115,"field-declaration":892,"method-declaration":893,"property-declaration":894,"indexer-declaration":895,"operator-declaration":896,"constructor-declaration":897,"static-constructor-declaration":898,"type-declaration":899,"field-variable-declarators":27,"method-types":23,"attributes":900,"method-header":9,"type-with-interr":28,"modifiers":901,"indexer-declarator":30,"constructor-declarator":31,"struct-declaration":34,"interface-declaration":35,"enum-declaration":36,"delegate-declaration":37,"field-variable-declarator":43,"method-type":40,"attribute-sections":42,"member-name-with-double-colon":902,"type":903,"modifier":44,"IDENTIFIER_WITH_TEMPLATE":45,"STRUCT":488,"INTERFACE":46,"enum-class":47,"DELEGATE":48,"INTERR":50,"attribute-section":54,"non-array-type":51,"array-type":52,"CONST":53,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"IDENTIFIER":70,"ENUM":71,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 891 
struct-member-declarations -> struct-member-declaration . 
transitions ->  {}

item set 892 
struct-member-declaration -> field-declaration . 
transitions ->  {}

item set 893 
struct-member-declaration -> method-declaration . 
transitions ->  {}

item set 894 
struct-member-declaration -> property-declaration . 
transitions ->  {}

item set 895 
struct-member-declaration -> indexer-declaration . 
transitions ->  {}

item set 896 
struct-member-declaration -> operator-declaration . 
transitions ->  {}

item set 897 
struct-member-declaration -> constructor-declaration . 
transitions ->  {}

item set 898 
struct-member-declaration -> static-constructor-declaration . 
transitions ->  {}

item set 899 
struct-member-declaration -> type-declaration . 
transitions ->  {}

item set 900 
field-declaration -> attributes .method-types field-variable-declarators SEMICOLON
property-declaration -> attributes .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> attributes .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes .modifiers operator-declarator method-body
constructor-declaration -> attributes .constructor-declarator method-body
constructor-declaration -> attributes .modifiers constructor-declarator method-body
static-constructor-declaration -> attributes .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes .method-types member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes .method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
method-types -> .method-types method-type
method-types -> .method-type
type-with-interr -> .type INTERR
type-with-interr -> .type
modifiers -> .modifier
modifiers -> .modifiers modifier
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
enum-class -> .ENUM class-key
enum-class -> .ENUM
method-type -> .method-type type
method-type -> .type
method-type -> .INTERR type
method-type -> .modifier
method-type -> .method-type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"method-types":133,"type-with-interr":134,"modifiers":1116,"indexer-declarator":136,"constructor-declarator":137,"STRUCT":141,"INTERFACE":142,"enum-class":143,"DELEGATE":144,"method-type":40,"type":1117,"modifier":44,"IDENTIFIER_WITH_TEMPLATE":45,"ENUM":71,"INTERR":50,"non-array-type":51,"array-type":52,"CONST":53,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"IDENTIFIER":70,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 901 
property-declaration -> modifiers .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> modifiers .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> modifiers .operator-declarator method-body
constructor-declaration -> modifiers .constructor-declarator method-body
static-constructor-declaration -> modifiers .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifiers -> modifiers .modifier
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
operator-declarator -> .unary-operator-declarator
operator-declarator -> .binary-operator-declarator
operator-declarator -> .conversion-operator-declarator
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
enum-class -> .ENUM class-key
enum-class -> .ENUM
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
unary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"type-with-interr":152,"indexer-declarator":153,"operator-declarator":154,"constructor-declarator":155,"IDENTIFIER_WITH_TEMPLATE":156,"modifier":161,"STRUCT":162,"INTERFACE":163,"enum-class":164,"DELEGATE":165,"type":192,"unary-operator-declarator":166,"binary-operator-declarator":167,"conversion-operator-declarator":168,"IDENTIFIER":70,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"ENUM":71,"non-array-type":51,"array-type":52,"CONST":53,"IMPLICIT":169,"EXPLICIT":170,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 902 
method-header -> member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
field-variable-declarator -> member-name-with-double-colon .ASSIGN variable-initializer
field-variable-declarator -> member-name-with-double-colon .
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name DOUBLE_COLON member-name
member-name-with-double-colon -> member-name-with-double-colon .COMMA member-name
member-name-with-double-colon -> member-name-with-double-colon .member-name
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type ASSIGN variable-initializer
variable-declarator -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"OPEN_PARENS":1118,"ASSIGN":128,"member-name":126,"COMMA":127,"variable-declarators":129,"variable-declarator":130,"type":131,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 903 
type-with-interr -> type .INTERR
type-with-interr -> type .
method-type -> type .
member-name-with-double-colon -> type .member-name-with-double-colon
member-name-with-double-colon -> type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
member-name-with-double-colon -> .type member-name-with-double-colon
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name DOUBLE_COLON member-name
member-name-with-double-colon -> .member-name-with-double-colon COMMA member-name
member-name-with-double-colon -> .member-name-with-double-colon member-name
member-name-with-double-colon -> .type
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"INTERR":181,"member-name-with-double-colon":343,"TEMPLATE":182,"rank-specifiers":183,"type":184,"rank-specifier":185,"non-array-type":51,"array-type":52,"CONST":53,"OPEN_BRACKET":186,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 904 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1119}

item set 905 
method-header -> method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 906 
formal-parameter-list -> fixed-parameters COMMA parameter-array . 
transitions ->  {}

item set 907 
fixed-parameters -> fixed-parameters COMMA fixed-parameter . 
transitions ->  {}

item set 908 
parameter-array -> PARAMS array-type IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 909 
parameter-array -> attributes PARAMS array-type .IDENTIFIER_WITH_TEMPLATE
type -> array-type .AMP
type -> array-type .STARS
type -> array-type .
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1120,"AMP":200,"STARS":201,"IDENTIFIER":70,"STAR":199}

item set 910 
fixed-parameter -> attributes type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 911 
fixed-parameter -> attributes parameter-modifier type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":1121,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 912 
fixed-parameter -> CONST type-with-interr IDENTIFIER_WITH_KEYWORD .ASSIGN expression
fixed-parameter -> CONST type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"ASSIGN":1122}

item set 913 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1123,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 914 
fixed-parameter -> THIS type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 915 
fixed-parameter -> parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 916 
member-name-with-double-colon -> member-name-with-double-colon member-name DOUBLE_COLON TILDE member-name . 
transitions ->  {}

item set 917 
IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 918 
array-initializer -> OPEN_BRACE variable-initializer-list CLOSE_BRACE . 
transitions ->  {}

item set 919 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA .CLOSE_BRACE
variable-initializer-list -> variable-initializer-list COMMA .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":1124,"variable-initializer":1125,"expression":360,"array-initializer":361,"conditional-expression":362,"assignment":363,"OPEN_BRACE":364,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 920 
conditional-expression -> conditional-or-expression INTERR expression .
conditional-expression -> conditional-or-expression INTERR expression .COLON expression 
transitions ->  {"COLON":1126}

item set 921 
conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":623}

item set 922 
multiplicative-expression -> unary-expression . 
transitions ->  {}

item set 923 
conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":624}

item set 924 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":625}

item set 925 
exclusive-or-expression -> exclusive-or-expression CARET and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":626}

item set 926 
and-expression -> and-expression AMP equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":627,"OP_NE":628}

item set 927 
equality-expression -> equality-expression OP_EQ relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":629,"GT":630,"OP_LE":631,"OP_GE":632,"OP_COALESCING":633,"IS":634,"AS":635}

item set 928 
equality-expression -> equality-expression OP_NE relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":629,"GT":630,"OP_LE":631,"OP_GE":632,"OP_COALESCING":633,"IS":634,"AS":635}

item set 929 
relational-expression -> relational-expression LT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":636,"RIGHT_SHIFT":637}

item set 930 
relational-expression -> relational-expression GT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":636,"RIGHT_SHIFT":637}

item set 931 
relational-expression -> relational-expression OP_LE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":636,"RIGHT_SHIFT":637}

item set 932 
relational-expression -> relational-expression OP_GE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":636,"RIGHT_SHIFT":637}

item set 933 
relational-expression -> relational-expression OP_COALESCING shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":636,"RIGHT_SHIFT":637}

item set 934 
relational-expression -> relational-expression IS type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"TEMPLATE":182,"rank-specifiers":183,"rank-specifier":185,"OPEN_BRACKET":186}

item set 935 
relational-expression -> relational-expression AS type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"TEMPLATE":182,"rank-specifiers":183,"rank-specifier":185,"OPEN_BRACKET":186}

item set 936 
shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":638,"OP_PTR":639,"OP_COALESCING":640,"MINUS":641}

item set 937 
shift-expression -> shift-expression RIGHT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":638,"OP_PTR":639,"OP_COALESCING":640,"MINUS":641}

item set 938 
additive-expression -> additive-expression PLUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":642,"DIV":643,"PERCENT":644}

item set 939 
additive-expression -> additive-expression OP_PTR multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":642,"DIV":643,"PERCENT":644}

item set 940 
additive-expression -> additive-expression OP_COALESCING multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":642,"DIV":643,"PERCENT":644}

item set 941 
additive-expression -> additive-expression MINUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":642,"DIV":643,"PERCENT":644}

item set 942 
multiplicative-expression -> multiplicative-expression STAR unary-expression . 
transitions ->  {}

item set 943 
multiplicative-expression -> multiplicative-expression DIV unary-expression . 
transitions ->  {}

item set 944 
multiplicative-expression -> multiplicative-expression PERCENT unary-expression . 
transitions ->  {}

item set 945 
method-header -> attributes method-types member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 946 
method-header -> attributes method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1127}

item set 947 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1128}

item set 948 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1129,"get-accessor-declaration":438,"set-accessor-declaration":439,"attributes":440,"modifiers":441,"GET":442,"SET":443,"attribute-sections":42,"modifier":301,"attribute-section":54,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"OPEN_BRACKET":90}

item set 949 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1130}

item set 950 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
method-body -> .block
method-body -> .SEMICOLON
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1131,"constructor-initializer":737,"block":173,"SEMICOLON":174,"COLON":738,"OPEN_BRACE":113}

item set 951 
class-method-header -> attributes modifiers type member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
class-method-header -> attributes modifiers type member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1132,"formal-parameter-list":1133,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 952 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1134,"OPEN_BRACE":601}

item set 953 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON 
transitions ->  {"where-base":1135}

item set 954 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1136,"OPEN_BRACE":741}

item set 955 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON 
transitions ->  {"where-base":1137}

item set 956 
enum-declaration -> attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1138}

item set 957 
enum-declaration -> attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":1139,"OPEN_BRACE":459}

item set 958 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":1140}

item set 959 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 960 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1141,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 961 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1142}

item set 962 
class-method-header -> attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 963 
class-method-header -> attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1143}

item set 964 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1144}

item set 965 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1145,"OPEN_BRACE":601}

item set 966 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1146}

item set 967 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1147,"OPEN_BRACE":741}

item set 968 
enum-declaration -> attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 969 
enum-declaration -> attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1148}

item set 970 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1149,"formal-parameter-list":1150,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 971 
property-declaration -> type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 972 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET . 
transitions ->  {}

item set 973 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET . 
transitions ->  {}

item set 974 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1151}

item set 975 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1152,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 976 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 977 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 978 
destructor-declaration -> modifiers TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1153,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 979 
destructor-declaration -> modifiers attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1154}

item set 980 
destructor-declaration -> modifiers attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1155}

item set 981 
destructor-declaration -> modifiers EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1156}

item set 982 
class-method-header -> modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 983 
class-method-header -> modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1157}

item set 984 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1158}

item set 985 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1159,"OPEN_BRACE":601}

item set 986 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1160}

item set 987 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1161,"OPEN_BRACE":741}

item set 988 
enum-declaration -> modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 989 
enum-declaration -> modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1162}

item set 990 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1163,"formal-parameter-list":1164,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 991 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1165,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 992 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1166,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 993 
set-accessor-declaration -> attributes modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"SET":996,"modifier":161,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69}

item set 994 
get-accessor-declaration -> attributes modifiers .GET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":995,"modifier":161,"UNSAFE":55,"ASYNC":444,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69}

item set 995 
get-accessor-declaration -> attributes modifiers GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1167,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 996 
set-accessor-declaration -> attributes modifiers SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1168,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 997 
get-accessor-declaration -> attributes GET method-body . 
transitions ->  {}

item set 998 
set-accessor-declaration -> attributes SET method-body . 
transitions ->  {}

item set 999 
get-accessor-declaration -> modifiers GET method-body . 
transitions ->  {}

item set 1000 
set-accessor-declaration -> modifiers SET method-body . 
transitions ->  {}

item set 1001 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1002 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1169,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 1003 
class-method-header -> type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 1004 
constructor-initializer -> COLON BASE .OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON BASE .OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1170}

item set 1005 
constructor-initializer -> COLON THIS .OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON THIS .OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1171}

item set 1006 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer . 
transitions ->  {}

item set 1007 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1008 
interface-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 1009 
interface-body -> OPEN_BRACE interface-member-declarations .CLOSE_BRACE
interface-member-declarations -> interface-member-declarations .interface-member-declaration
interface-member-declaration -> .interface-method-declaration
interface-member-declaration -> .interface-property-declaration
interface-member-declaration -> .interface-indexer-declaration
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
attributes -> .attribute-sections
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACE":1172,"interface-member-declaration":1173,"interface-method-declaration":1011,"interface-property-declaration":1012,"interface-indexer-declaration":1013,"type-with-interr":1014,"attributes":1015,"NEW":1016,"type":192,"attribute-sections":42,"non-array-type":51,"array-type":52,"CONST":53,"attribute-section":54,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"OPEN_BRACKET":90,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1010 
interface-member-declarations -> interface-member-declaration . 
transitions ->  {}

item set 1011 
interface-member-declaration -> interface-method-declaration . 
transitions ->  {}

item set 1012 
interface-member-declaration -> interface-property-declaration . 
transitions ->  {}

item set 1013 
interface-member-declaration -> interface-indexer-declaration . 
transitions ->  {}

item set 1014 
interface-method-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1174,"THIS":1175,"IDENTIFIER":70}

item set 1015 
interface-method-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1176,"NEW":1177,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1016 
interface-method-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> NEW .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1178,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1017 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1179}

item set 1018 
enum-declaration -> enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 1019 
enum-body -> OPEN_BRACE enum-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1020 
enum-body -> OPEN_BRACE enum-member-declarations COMMA .CLOSE_BRACE
enum-member-declarations -> enum-member-declarations COMMA .enum-member-declaration
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":1180,"enum-member-declaration":1181,"IDENTIFIER_WITH_TEMPLATE":749,"attributes":750,"IDENTIFIER":70,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1021 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1182,"expression":863,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1022 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE .
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":1183}

item set 1023 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1184}

item set 1024 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1185}

item set 1025 
using-alias-directive -> USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON . 
transitions ->  {}

item set 1026 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 1027 
attribute-arguments -> OPEN_PARENS positional-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1028 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA .named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list COMMA .positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"named-argument-list":1186,"positional-argument":1187,"named-argument":762,"attribute-argument-expression":763,"IDENTIFIER_WITH_TEMPLATE":764,"expression":765,"IDENTIFIER":70,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1029 
attribute-arguments -> OPEN_PARENS named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1030 
named-argument-list -> named-argument-list COMMA .named-argument
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"named-argument":1188,"IDENTIFIER_WITH_TEMPLATE":1189,"IDENTIFIER":70}

item set 1031 
named-argument -> IDENTIFIER_WITH_TEMPLATE ASSIGN .attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"attribute-argument-expression":1190,"expression":765,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1032 
class-declaration -> class-key IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON . 
transitions ->  {}

item set 1033 
member-list -> access-specifier COLON member-list . 
transitions ->  {}

item set 1034 
class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1191}

item set 1035 
class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1036 
base-list -> base-list COMMA base-specifier . 
transitions ->  {}

item set 1037 
base-specifier -> VIRTUAL access-specifier type-with-interr . 
transitions ->  {}

item set 1038 
base-specifier -> access-specifier VIRTUAL type-with-interr . 
transitions ->  {}

item set 1039 
switch-labels -> switch-labels switch-label . 
transitions ->  {}

item set 1040 
switch-label -> DEFAULT .COLON 
transitions ->  {"COLON":1042}

item set 1041 
switch-label -> CASE constant-expression .COLON 
transitions ->  {"COLON":1192}

item set 1042 
switch-label -> DEFAULT COLON . 
transitions ->  {}

item set 1043 
local-variable-declarators -> local-variable-declarators COMMA local-variable-declarator . 
transitions ->  {}

item set 1044 
invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 1045 
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1046 
argument-list -> argument-list COLON .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":1193,"expression":794,"REF":795,"OUT":796,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1047 
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":1194,"expression":794,"REF":795,"OUT":796,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1048 
argument -> REF variable-reference . 
transitions ->  {}

item set 1049 
variable-reference -> expression . 
transitions ->  {}

item set 1050 
argument -> OUT variable-reference . 
transitions ->  {}

item set 1051 
local-variable-declarator -> local-variable ASSIGN local-variable-initializer . 
transitions ->  {}

item set 1052 
local-variable-initializer -> expression . 
transitions ->  {}

item set 1053 
local-variable-initializer -> array-initializer . 
transitions ->  {}

item set 1054 
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarator":1195,"IDENTIFIER_WITH_TEMPLATE":807,"IDENTIFIER":70}

item set 1055 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1196,"expression":863,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1056 
try-statement -> TRY block catch-clauses finally-clause . 
transitions ->  {}

item set 1057 
catch-clauses -> specific-catch-clauses general-catch-clause . 
transitions ->  {}

item set 1058 
specific-catch-clauses -> specific-catch-clauses specific-catch-clause . 
transitions ->  {}

item set 1059 
finally-clause -> FINALLY block . 
transitions ->  {}

item set 1060 
general-catch-clause -> CATCH block . 
transitions ->  {}

item set 1061 
specific-catch-clause -> CATCH OPEN_PARENS .type CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS .type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":1197,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1062 
checked-expression -> CHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 1063 
unchecked-expression -> UNCHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 1064 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1198,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1065 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1199,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1066 
fixed-statement -> modifiers FIXED OPEN_PARENS type .local-variable-declarators CLOSE_PARENS embedded-statement
type -> type .TEMPLATE
array-type -> type .rank-specifiers
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .AMP IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":1200,"TEMPLATE":182,"rank-specifiers":183,"local-variable-declarator":516,"rank-specifier":185,"local-variable":517,"OPEN_BRACKET":186,"INTERR":518,"STARS":519,"AMP":520,"IDENTIFIER_WITH_KEYWORD":521,"STAR":199,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177,"IDENTIFIER":70}

item set 1067 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators .CLOSE_PARENS embedded-statement
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"CLOSE_PARENS":1201,"COMMA":789}

item set 1068 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 1069 
element-access -> primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 1070 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1202,"COLON":1046,"COMMA":1047}

item set 1071 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .block-expression-with-brace
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expressions":1203,"block-expression-with-brace":1204,"invocation-expression":284,"OPEN_BRACE":545,"AWAIT":319,"primary-expression":788,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1072 
object-creation-expression -> NEW type-with-identifier rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 1073 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list .CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list .CLOSE_BRACKET
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_BRACKET":1205,"COLON":1046,"COMMA":1047}

item set 1074 
object-creation-expression -> NEW non-array-type rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 1075 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list .CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list .CLOSE_BRACKET
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_BRACKET":1206,"COLON":1046,"COMMA":1047}

item set 1076 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1207,"COLON":1046,"COMMA":1047}

item set 1077 
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS .block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1208,"OPEN_BRACE":545}

item set 1078 
block-expression-with-brace -> OPEN_BRACE block-expression-list CLOSE_BRACE . 
transitions ->  {}

item set 1079 
block-expression-list -> block-expression-list COMMA .block-expression-list-unit
block-expression-list-unit -> .block-expression-with-brace
block-expression-list-unit -> .expression
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-list-unit":1209,"block-expression-with-brace":842,"expression":843,"OPEN_BRACE":545,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1080 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement ELSE embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1210,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1081 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS .switch-block
switch-block -> .OPEN_BRACE CLOSE_BRACE
switch-block -> .OPEN_BRACE switch-sections CLOSE_BRACE 
transitions ->  {"switch-block":1211,"OPEN_BRACE":1212}

item set 1082 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1213,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1083 
do-statement -> DO embedded-statement WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS SEMICOLON
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":1214,"expression":847,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1084 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1215,"for-iterator":1216,"statement-expression-list":1217,"statement-expression":855,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"invocation-expression":284,"NEW":380,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1085 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":1218}

item set 1086 
for-condition -> boolean-expression . 
transitions ->  {}

item set 1087 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":1219,"for-condition":1220,"boolean-expression":1086,"expression":847,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1088 
statement-expression-list -> statement-expression-list COMMA .statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement-expression":1221,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"invocation-expression":284,"NEW":380,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1089 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD .IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"IN":1222}

item set 1090 
return-statement -> YIELD RETURN block-expression-with-brace SEMICOLON . 
transitions ->  {}

item set 1091 
return-statement -> YIELD RETURN expression SEMICOLON . 
transitions ->  {}

item set 1092 
goto-statement -> GOTO CASE constant-expression SEMICOLON . 
transitions ->  {}

item set 1093 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1223,"OPEN_BRACE":113}

item set 1094 
delegate-expression -> DELEGATE OPEN_PARENS CLOSE_PARENS block . 
transitions ->  {}

item set 1095 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET .argument-list-with-brace
argument-list-with-brace -> .OPEN_BRACE argument-list COMMA CLOSE_BRACE
argument-list-with-brace -> .OPEN_BRACE argument-list CLOSE_BRACE
argument-list-with-brace -> .OPEN_BRACE CLOSE_BRACE 
transitions ->  {"argument-list-with-brace":1224,"OPEN_BRACE":1225}

item set 1096 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":1226,"COMMA":878}

item set 1097 
invocation-expression -> AWAIT primary-expression OPEN_PARENS type .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS type .CLOSE_PARENS
type -> type .TEMPLATE
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":1227,"TEMPLATE":182,"rank-specifiers":183,"DOT":523,"OP_PTR":524,"rank-specifier":185,"OPEN_BRACKET":186}

item set 1098 
invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1228,"COLON":1046,"COMMA":1047}

item set 1099 
invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1100 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1229,"block":1230,"conditional-expression":362,"assignment":363,"OPEN_BRACE":113,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1101 
dbl-expression-list -> dbl-expression-list COMMA expression .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1231,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1102 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1232,"block":1233,"conditional-expression":362,"assignment":363,"OPEN_BRACE":113,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1103 
type-expression-list -> type-expression-list COMMA type .expression
type -> type .TEMPLATE
array-type -> type .rank-specifiers
expression -> .conditional-expression
expression -> .assignment
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1234,"TEMPLATE":182,"rank-specifiers":183,"conditional-expression":362,"assignment":363,"rank-specifier":185,"conditional-or-expression":365,"unary-expression":366,"OPEN_BRACKET":186,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1104 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1235,"block":1236,"conditional-expression":362,"assignment":363,"OPEN_BRACE":113,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1105 
expression-list -> expression-list COMMA expression . 
transitions ->  {}

item set 1106 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS .OP_DBLPTR expression block 
transitions ->  {"OP_DBLPTR":1237}

item set 1107 
member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":500}

item set 1108 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR .expression block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1238,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1109 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS expression . 
transitions ->  {}

item set 1110 
cast-expression -> OPEN_PARENS type-with-interr CLOSE_PARENS expression . 
transitions ->  {}

item set 1111 
base-access -> BASE OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 1112 
typeof-expression -> TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS . 
transitions ->  {}

item set 1113 
sizeof-expression -> SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS . 
transitions ->  {}

item set 1114 
struct-body -> OPEN_BRACE struct-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1115 
struct-member-declarations -> struct-member-declarations struct-member-declaration . 
transitions ->  {}

item set 1116 
property-declaration -> attributes modifiers .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes modifiers .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes modifiers .operator-declarator method-body
constructor-declaration -> attributes modifiers .constructor-declarator method-body
static-constructor-declaration -> attributes modifiers .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers .enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> modifiers .modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
operator-declarator -> .unary-operator-declarator
operator-declarator -> .binary-operator-declarator
operator-declarator -> .conversion-operator-declarator
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
enum-class -> .ENUM class-key
enum-class -> .ENUM
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
unary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"type-with-interr":393,"indexer-declarator":394,"operator-declarator":395,"constructor-declarator":396,"IDENTIFIER_WITH_TEMPLATE":397,"STRUCT":399,"INTERFACE":400,"enum-class":401,"DELEGATE":402,"modifier":161,"type":192,"unary-operator-declarator":166,"binary-operator-declarator":167,"conversion-operator-declarator":168,"IDENTIFIER":70,"ENUM":71,"UNSAFE":55,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"NEW":69,"non-array-type":51,"array-type":52,"CONST":53,"IMPLICIT":169,"EXPLICIT":170,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"WHERE":106}

item set 1117 
type-with-interr -> type .INTERR
type-with-interr -> type .
method-type -> type .
type -> type .TEMPLATE
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"INTERR":181,"TEMPLATE":182,"rank-specifiers":183,"rank-specifier":185,"OPEN_BRACKET":186}

item set 1118 
method-header -> member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
method-header -> member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1239,"CLOSE_PARENS":1240,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1119 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1120 
parameter-array -> attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 1121 
fixed-parameter -> attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 1122 
fixed-parameter -> CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1241,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1123 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression . 
transitions ->  {}

item set 1124 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 1125 
variable-initializer-list -> variable-initializer-list COMMA variable-initializer . 
transitions ->  {}

item set 1126 
conditional-expression -> conditional-or-expression INTERR expression COLON .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1242,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1127 
method-header -> attributes method-types member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 1128 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1129 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1243}

item set 1130 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1131 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1132 
class-method-header -> attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1133 
class-method-header -> attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1244}

item set 1134 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1245}

item set 1135 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1246,"OPEN_BRACE":601}

item set 1136 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1247}

item set 1137 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1248,"OPEN_BRACE":741}

item set 1138 
enum-declaration -> attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 1139 
enum-declaration -> attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1249}

item set 1140 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1250,"formal-parameter-list":1251,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1141 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1142 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1252,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 1143 
class-method-header -> attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 1144 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1145 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1253}

item set 1146 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1147 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1254}

item set 1148 
enum-declaration -> attributes enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 1149 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1255}

item set 1150 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1256}

item set 1151 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1152 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1257,"IDENTIFIER":70}

item set 1153 
destructor-declaration -> modifiers TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1154 
destructor-declaration -> modifiers attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1258,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 1155 
destructor-declaration -> modifiers attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1259}

item set 1156 
destructor-declaration -> modifiers EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1260,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 1157 
class-method-header -> modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 1158 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1159 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1261}

item set 1160 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1161 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1262}

item set 1162 
enum-declaration -> modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 1163 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1263}

item set 1164 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1264}

item set 1165 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1265,"IDENTIFIER_WITH_KEYWORD":1266,"IDENTIFIER":70,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177}

item set 1166 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1267,"IDENTIFIER_WITH_KEYWORD":1268,"IDENTIFIER":70,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"STRING":177}

item set 1167 
get-accessor-declaration -> attributes modifiers GET method-body . 
transitions ->  {}

item set 1168 
set-accessor-declaration -> attributes modifiers SET method-body . 
transitions ->  {}

item set 1169 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1170 
constructor-initializer -> COLON BASE OPEN_PARENS .CLOSE_PARENS
constructor-initializer -> COLON BASE OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":1269,"argument-list":1270,"argument":793,"expression":794,"REF":795,"OUT":796,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1171 
constructor-initializer -> COLON THIS OPEN_PARENS .CLOSE_PARENS
constructor-initializer -> COLON THIS OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":1271,"argument-list":1272,"argument":793,"expression":794,"REF":795,"OUT":796,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1172 
interface-body -> OPEN_BRACE interface-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1173 
interface-member-declarations -> interface-member-declarations interface-member-declaration . 
transitions ->  {}

item set 1174 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1273,"OPEN_BRACE":1274}

item set 1175 
interface-indexer-declaration -> type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1275}

item set 1176 
interface-method-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1276,"THIS":1277,"IDENTIFIER":70}

item set 1177 
interface-method-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes NEW .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1278,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1178 
interface-method-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> NEW type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1279,"THIS":1280,"IDENTIFIER":70}

item set 1179 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1180 
enum-body -> OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE . 
transitions ->  {}

item set 1181 
enum-member-declarations -> enum-member-declarations COMMA enum-member-declaration . 
transitions ->  {}

item set 1182 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 1183 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1281,"expression":863,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1184 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1282}

item set 1185 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1283}

item set 1186 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":1284,"COMMA":1030}

item set 1187 
positional-argument-list -> positional-argument-list COMMA positional-argument . 
transitions ->  {}

item set 1188 
named-argument-list -> named-argument-list COMMA named-argument . 
transitions ->  {}

item set 1189 
named-argument -> IDENTIFIER_WITH_TEMPLATE .ASSIGN attribute-argument-expression 
transitions ->  {"ASSIGN":1031}

item set 1190 
named-argument -> IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression . 
transitions ->  {}

item set 1191 
class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 1192 
switch-label -> CASE constant-expression COLON . 
transitions ->  {}

item set 1193 
argument-list -> argument-list COLON argument . 
transitions ->  {}

item set 1194 
argument-list -> argument-list COMMA argument . 
transitions ->  {}

item set 1195 
constant-declarators -> constant-declarators COMMA constant-declarator .
constant-declarators -> constant-declarators COMMA constant-declarator . 
transitions ->  {}

item set 1196 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression .
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 1197 
specific-catch-clause -> CATCH OPEN_PARENS type .CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS type .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
type -> type .TEMPLATE
array-type -> type .rank-specifiers
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":1285,"IDENTIFIER_WITH_TEMPLATE":1286,"TEMPLATE":182,"rank-specifiers":183,"IDENTIFIER":70,"rank-specifier":185,"OPEN_BRACKET":186}

item set 1198 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1199 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1200 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators .CLOSE_PARENS embedded-statement
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"CLOSE_PARENS":1287,"COMMA":789}

item set 1201 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1288,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1202 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expressions":1289,"invocation-expression":284,"AWAIT":319,"primary-expression":788,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"TILDE":123,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1203 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> .DOT IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> . 
transitions ->  {"IDENTIFIER_WITH_DOT":1290,"DOT":1291,"OP_PTR":527}

item set 1204 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 1205 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1292,"OPEN_BRACE":545}

item set 1206 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET .block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1293,"OPEN_BRACE":545}

item set 1207 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS .block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1294,"OPEN_BRACE":545}

item set 1208 
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 1209 
block-expression-list -> block-expression-list COMMA block-expression-list-unit . 
transitions ->  {}

item set 1210 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .ELSE embedded-statement 
transitions ->  {"ELSE":1295}

item set 1211 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block . 
transitions ->  {}

item set 1212 
switch-block -> OPEN_BRACE .CLOSE_BRACE
switch-block -> OPEN_BRACE .switch-sections CLOSE_BRACE
switch-sections -> .switch-sections switch-section
switch-sections -> .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":1296,"switch-sections":1297,"switch-section":1298,"switch-labels":1299,"switch-label":781,"CASE":782,"DEFAULT":1040}

item set 1213 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1214 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":1300}

item set 1215 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1301,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1216 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1302}

item set 1217 
for-iterator -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":1088}

item set 1218 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1303,"for-iterator":1304,"statement-expression-list":1217,"statement-expression":855,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"invocation-expression":284,"NEW":380,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1219 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1305,"for-iterator":1306,"statement-expression-list":1217,"statement-expression":855,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"invocation-expression":284,"NEW":380,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1220 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":1307}

item set 1221 
statement-expression-list -> statement-expression-list COMMA statement-expression . 
transitions ->  {}

item set 1222 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1308,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1223 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block . 
transitions ->  {}

item set 1224 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace . 
transitions ->  {}

item set 1225 
argument-list-with-brace -> OPEN_BRACE .argument-list COMMA CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE .argument-list CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE .CLOSE_BRACE
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":1309,"CLOSE_BRACE":1310,"argument":793,"expression":794,"REF":795,"OUT":796,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1226 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers array-initializer
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":1311,"array-initializer":1312,"rank-specifier":185,"OPEN_BRACE":364,"OPEN_BRACKET":186}

item set 1227 
invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 1228 
invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1229 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 1230 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 1231 
dbl-expression-list -> dbl-expression-list COMMA expression expression . 
transitions ->  {}

item set 1232 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 1233 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 1234 
type-expression-list -> type-expression-list COMMA type expression . 
transitions ->  {}

item set 1235 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 1236 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 1237 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR .expression block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1313,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1238 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression .block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1314,"OPEN_BRACE":113}

item set 1239 
method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1315}

item set 1240 
method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1241 
fixed-parameter -> CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression . 
transitions ->  {}

item set 1242 
conditional-expression -> conditional-or-expression INTERR expression COLON expression . 
transitions ->  {}

item set 1243 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1244 
class-method-header -> attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 1245 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1246 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1316}

item set 1247 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1248 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1317}

item set 1249 
enum-declaration -> attributes modifiers enum-class IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 1250 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1318}

item set 1251 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1319}

item set 1252 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1253 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1254 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1255 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1320}

item set 1256 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1321}

item set 1257 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1322,"COMMA":1323}

item set 1258 
destructor-declaration -> modifiers attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1259 
destructor-declaration -> modifiers attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1324,"block":173,"SEMICOLON":174,"OPEN_BRACE":113}

item set 1260 
destructor-declaration -> modifiers EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1261 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1262 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1263 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1325}

item set 1264 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1326}

item set 1265 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"CLOSE_PARENS":1327}

item set 1266 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1328}

item set 1267 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"CLOSE_PARENS":1329}

item set 1268 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1330}

item set 1269 
constructor-initializer -> COLON BASE OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1270 
constructor-initializer -> COLON BASE OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1331,"COLON":1046,"COMMA":1047}

item set 1271 
constructor-initializer -> COLON THIS OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1272 
constructor-initializer -> COLON THIS OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1332,"COLON":1046,"COMMA":1047}

item set 1273 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1333,"formal-parameter-list":1334,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1274 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1335,"attributes":1336,"SET":1337,"GET":1338,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1275 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1339,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1276 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1340,"OPEN_BRACE":1341}

item set 1277 
interface-indexer-declaration -> attributes type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1342}

item set 1278 
interface-method-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes NEW type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1343,"THIS":1344,"IDENTIFIER":70}

item set 1279 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1345,"OPEN_BRACE":1346}

item set 1280 
interface-indexer-declaration -> NEW type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1347}

item set 1281 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 1282 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1283 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1348}

item set 1284 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1285 
specific-catch-clause -> CATCH OPEN_PARENS type CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1349,"OPEN_BRACE":113}

item set 1286 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":1350}

item set 1287 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1351,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1288 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1289 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> .DOT IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> . 
transitions ->  {"IDENTIFIER_WITH_DOT":1352,"DOT":1291,"OP_PTR":527}

item set 1290 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1353,"OPEN_BRACE":545}

item set 1291 
invocation-expressions -> invocation-expressions DOT .invocation-expression
member-access -> invocation-expressions DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> DOT .IDENTIFIER_WITH_KEYWORD
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expression":808,"IDENTIFIER_WITH_KEYWORD":1354,"AWAIT":319,"primary-expression":788,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":250,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":251,"ASYNC":132,"WHERE":106,"STRING":87,"primary-no-array-creation-expression":282,"array-creation-expression":283,"IDENTIFIER":70,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"type":379,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"TRUE":336,"FALSE":337,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1292 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace . 
transitions ->  {}

item set 1293 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace . 
transitions ->  {}

item set 1294 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 1295 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1355,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1296 
switch-block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 1297 
switch-block -> OPEN_BRACE switch-sections .CLOSE_BRACE
switch-sections -> switch-sections .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":1356,"switch-section":1357,"switch-labels":1299,"switch-label":781,"CASE":782,"DEFAULT":1040}

item set 1298 
switch-sections -> switch-section . 
transitions ->  {}

item set 1299 
switch-section -> switch-labels .statement-list
switch-labels -> switch-labels .switch-label
statement-list -> .statement
statement-list -> .statement-list statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
declaration-statement -> .local-variable-declaration block
declaration-statement -> .local-constant-declaration block
declaration-statement -> .local-variable-declaration
declaration-statement -> .local-constant-declaration
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement-list":1358,"switch-label":1039,"statement":229,"CASE":782,"DEFAULT":783,"labeled-statement":230,"declaration-statement":231,"embedded-statement":232,"IDENTIFIER_WITH_KEYWORD":233,"local-variable-declaration":234,"local-constant-declaration":235,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"TILDE":249,"IDENTIFIER_WITH_TEMPLATE":250,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":251,"ASYNC":56,"WHERE":106,"STRING":87,"primary-expression":252,"type":253,"CONST":254,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"IDENTIFIER":70,"primary-no-array-creation-expression":282,"array-creation-expression":283,"non-array-type":51,"array-type":52,"invocation-expression":284,"NEW":285,"unary-expression":286,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"STAR":325,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"BASE":333,"TYPEOF":334,"SIZEOF":335,"namespace-or-type-name":91,"TRUE":336,"FALSE":337}

item set 1300 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":1359}

item set 1301 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1302 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1360,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1303 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1361,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1304 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1362}

item set 1305 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1363,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1306 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1364}

item set 1307 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1365,"for-iterator":1366,"statement-expression-list":1217,"statement-expression":855,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"invocation-expression":284,"NEW":380,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1308 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1367}

item set 1309 
argument-list-with-brace -> OPEN_BRACE argument-list .COMMA CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE argument-list .CLOSE_BRACE
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"COMMA":1368,"CLOSE_BRACE":1369,"COLON":1046}

item set 1310 
argument-list-with-brace -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 1311 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .array-initializer
rank-specifiers -> rank-specifiers .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"array-initializer":1370,"rank-specifier":448,"OPEN_BRACE":364,"OPEN_BRACKET":186}

item set 1312 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer . 
transitions ->  {}

item set 1313 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1371,"OPEN_BRACE":113}

item set 1314 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block . 
transitions ->  {}

item set 1315 
method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 1316 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1317 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1318 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1372}

item set 1319 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1373}

item set 1320 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1321 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1374}

item set 1322 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1323 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1375,"type":192,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":105,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1324 
destructor-declaration -> modifiers attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1325 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1326 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1376}

item set 1327 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1328 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS . 
transitions ->  {}

item set 1329 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1330 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS . 
transitions ->  {}

item set 1331 
constructor-initializer -> COLON BASE OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1332 
constructor-initializer -> COLON THIS OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1333 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1377}

item set 1334 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1378}

item set 1335 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1379}

item set 1336 
interface-accessors -> attributes .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> attributes .GET SEMICOLON SET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON GET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON
interface-accessors -> attributes .GET SEMICOLON 
transitions ->  {"GET":1380,"SET":1381}

item set 1337 
interface-accessors -> SET .SEMICOLON attributes GET SEMICOLON
interface-accessors -> SET .SEMICOLON GET SEMICOLON
interface-accessors -> SET .SEMICOLON 
transitions ->  {"SEMICOLON":1382}

item set 1338 
interface-accessors -> GET .SEMICOLON attributes SET SEMICOLON
interface-accessors -> GET .SEMICOLON SET SEMICOLON
interface-accessors -> GET .SEMICOLON 
transitions ->  {"SEMICOLON":1383}

item set 1339 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1384}

item set 1340 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1385,"formal-parameter-list":1386,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1341 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1387,"attributes":1336,"SET":1337,"GET":1338,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1342 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1388,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1343 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1389,"OPEN_BRACE":1390}

item set 1344 
interface-indexer-declaration -> attributes NEW type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1391}

item set 1345 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1392,"formal-parameter-list":1393,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1346 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1394,"attributes":1336,"SET":1337,"GET":1338,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1347 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1395,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1348 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1349 
specific-catch-clause -> CATCH OPEN_PARENS type CLOSE_PARENS block . 
transitions ->  {}

item set 1350 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1396,"OPEN_BRACE":113}

item set 1351 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1352 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1397,"OPEN_BRACE":545}

item set 1353 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace . 
transitions ->  {}

item set 1354 
member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD .
IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":500}

item set 1355 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement . 
transitions ->  {}

item set 1356 
switch-block -> OPEN_BRACE switch-sections CLOSE_BRACE . 
transitions ->  {}

item set 1357 
switch-sections -> switch-sections switch-section . 
transitions ->  {}

item set 1358 
switch-section -> switch-labels statement-list .
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
declaration-statement -> .local-variable-declaration block
declaration-statement -> .local-constant-declaration block
declaration-statement -> .local-variable-declaration
declaration-statement -> .local-constant-declaration
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement":498,"labeled-statement":230,"declaration-statement":231,"embedded-statement":232,"IDENTIFIER_WITH_KEYWORD":233,"local-variable-declaration":234,"local-constant-declaration":235,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"TILDE":249,"IDENTIFIER_WITH_TEMPLATE":250,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"THIS":251,"ASYNC":56,"WHERE":106,"STRING":87,"primary-expression":252,"type":253,"CONST":254,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"IDENTIFIER":70,"primary-no-array-creation-expression":282,"array-creation-expression":283,"non-array-type":51,"array-type":52,"invocation-expression":284,"NEW":285,"unary-expression":286,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"STAR":325,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"BASE":333,"TYPEOF":334,"SIZEOF":335,"namespace-or-type-name":91,"TRUE":336,"FALSE":337}

item set 1359 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 1360 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1361 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1362 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1398,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1363 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1364 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1399,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1365 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1400,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1366 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1401}

item set 1367 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1402,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1368 
argument-list-with-brace -> OPEN_BRACE argument-list COMMA .CLOSE_BRACE
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":1403,"argument":1194,"expression":794,"REF":795,"OUT":796,"conditional-expression":362,"assignment":363,"conditional-or-expression":365,"unary-expression":366,"conditional-and-expression":367,"pre-increment-expression":368,"pre-decrement-expression":369,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-expression":370,"inclusive-or-expression":371,"OP_INC":287,"OP_DEC":288,"primary-no-array-creation-expression":282,"array-creation-expression":283,"exclusive-or-expression":372,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"invocation-expressions":373,"element-access":308,"this-access":309,"base-access":310,"post-increment-expression":374,"post-decrement-expression":375,"delegate-creation-expression":311,"object-creation-expression":376,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"and-expression":378,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"invocation-expression":284,"THIS":251,"BASE":333,"NEW":380,"TYPEOF":334,"SIZEOF":335,"CHECKED":381,"UNCHECKED":382,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"STRING":87,"equality-expression":383,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"AWAIT":319,"relational-expression":384,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"shift-expression":385,"namespace-or-type-name":91,"additive-expression":386,"multiplicative-expression":387}

item set 1369 
argument-list-with-brace -> OPEN_BRACE argument-list CLOSE_BRACE . 
transitions ->  {}

item set 1370 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer . 
transitions ->  {}

item set 1371 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block . 
transitions ->  {}

item set 1372 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1373 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1404}

item set 1374 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1375 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1405,"IDENTIFIER":70}

item set 1376 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1377 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1406}

item set 1378 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1407}

item set 1379 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1380 
interface-accessors -> attributes GET .SEMICOLON attributes SET SEMICOLON
interface-accessors -> attributes GET .SEMICOLON SET SEMICOLON
interface-accessors -> attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1408}

item set 1381 
interface-accessors -> attributes SET .SEMICOLON attributes GET SEMICOLON
interface-accessors -> attributes SET .SEMICOLON GET SEMICOLON
interface-accessors -> attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1409}

item set 1382 
interface-accessors -> SET SEMICOLON .attributes GET SEMICOLON
interface-accessors -> SET SEMICOLON .GET SEMICOLON
interface-accessors -> SET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1410,"GET":1411,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1383 
interface-accessors -> GET SEMICOLON .attributes SET SEMICOLON
interface-accessors -> GET SEMICOLON .SET SEMICOLON
interface-accessors -> GET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1412,"SET":1413,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1384 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1414}

item set 1385 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1415}

item set 1386 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1416}

item set 1387 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1417}

item set 1388 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1418}

item set 1389 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1419,"formal-parameter-list":1420,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1390 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1421,"attributes":1336,"SET":1337,"GET":1338,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1391 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .CONST type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1422,"fixed-parameters":346,"parameter-array":347,"fixed-parameter":348,"PARAMS":349,"attributes":350,"CONST":351,"type-with-interr":352,"THIS":353,"parameter-modifier":354,"attribute-sections":42,"type":192,"REF":355,"OUT":356,"attribute-section":54,"non-array-type":51,"array-type":52,"OPEN_BRACKET":90,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"STRING":87,"VOID":88,"AUTO":89,"namespace-or-type-name":91,"IDENTIFIER_WITH_KEYWORD":92,"TILDE":123,"IDENTIFIER_WITH_TEMPLATE":124,"ADD":93,"REMOVE":94,"SET":95,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"ASYNC":132,"WHERE":106,"IDENTIFIER":70}

item set 1392 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1423}

item set 1393 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1424}

item set 1394 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1425}

item set 1395 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1426}

item set 1396 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block . 
transitions ->  {}

item set 1397 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace . 
transitions ->  {}

item set 1398 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1399 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1400 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1401 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_KEYWORD -> .STRING
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .type TEMPLATE
type -> .non-array-type AMP
type -> .array-type AMP
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type -> .CONST
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1427,"block":236,"empty-statement":237,"statement-expression":238,"selection-statement":239,"iteration-statement":240,"jump-statement":241,"try-statement":242,"checked-statement":243,"unchecked-statement":244,"lock-statement":245,"using-statement":246,"unsafe-statement":247,"fixed-statement":248,"OPEN_BRACE":113,"SEMICOLON":255,"invocation-expressions":256,"object-creation-expression":257,"assignment":258,"post-increment-expression":259,"post-decrement-expression":260,"pre-increment-expression":261,"pre-decrement-expression":262,"if-statement":263,"switch-statement":264,"while-statement":265,"do-statement":266,"for-statement":267,"foreach-statement":268,"break-statement":269,"continue-statement":270,"goto-statement":271,"return-statement":272,"throw-statement":273,"TRY":274,"CHECKED":275,"UNCHECKED":276,"LOCK":277,"USING":278,"UNSAFE":279,"modifiers":280,"FIXED":281,"invocation-expression":284,"NEW":285,"unary-expression":286,"primary-expression":370,"OP_INC":287,"OP_DEC":288,"IF":289,"SWITCH":290,"WHILE":291,"DO":292,"FOR":293,"FOREACH":294,"YIELD":295,"BREAK":296,"CONTINUE":297,"GOTO":298,"RETURN":299,"THROW":300,"modifier":301,"AWAIT":319,"PLUS":320,"OP_PTR":321,"OP_COALESCING":322,"MINUS":323,"BANG":324,"TILDE":249,"STAR":325,"primary-no-array-creation-expression":282,"array-creation-expression":283,"ASYNC":56,"PUBLIC":57,"PARTIAL":58,"PROTECTED":59,"INTERNAL":60,"PRIVATE":61,"ABSTRACT":62,"SEALED":63,"STATIC":64,"READONLY":65,"VOLATILE":66,"VIRTUAL":67,"OVERRIDE":68,"EXTERN":122,"literal":302,"lambda-expression":303,"cast-expression":304,"parenthesized-expression":305,"double-colon-access":306,"member-access":307,"element-access":308,"this-access":309,"base-access":310,"delegate-creation-expression":311,"typeof-expression":312,"sizeof-expression":313,"checked-expression":314,"unchecked-expression":315,"IDENTIFIER_WITH_KEYWORD":377,"DELEGATE":316,"delegate-expression":317,"STACKALLOC":318,"BOOLEAN_LITERAL":326,"REAL_LITERAL":327,"INTEGER_LITERAL":328,"STRING_LITERAL":329,"CHARACTER_LITERAL":330,"NULL":331,"OPEN_PARENS":332,"IDENTIFIER_WITH_TEMPLATE":250,"type":379,"THIS":251,"BASE":333,"TYPEOF":334,"SIZEOF":335,"ADD":93,"REMOVE":94,"SET":95,"PARAMS":96,"DEFAULT":97,"METHOD":98,"PARAM":99,"ASSEMBLY":100,"PROPERTY":101,"MODULE":102,"FIELD":103,"TYPE":104,"WHERE":106,"STRING":87,"TRUE":336,"FALSE":337,"IDENTIFIER":70,"non-array-type":51,"array-type":52,"CONST":53,"type-name":72,"SBYTE":73,"BYTE":74,"SHORT":75,"USHORT":76,"INT":77,"UINT":78,"LONG":79,"ULONG":80,"CHAR":81,"FLOAT":82,"DOUBLE":83,"DECIMAL":84,"BOOL":85,"OBJECT":86,"VOID":88,"AUTO":89,"namespace-or-type-name":91}

item set 1402 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1403 
argument-list-with-brace -> OPEN_BRACE argument-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 1404 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1405 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1428}

item set 1406 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1407 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1429}

item set 1408 
interface-accessors -> attributes GET SEMICOLON .attributes SET SEMICOLON
interface-accessors -> attributes GET SEMICOLON .SET SEMICOLON
interface-accessors -> attributes GET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1430,"SET":1431,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1409 
interface-accessors -> attributes SET SEMICOLON .attributes GET SEMICOLON
interface-accessors -> attributes SET SEMICOLON .GET SEMICOLON
interface-accessors -> attributes SET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1432,"GET":1433,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1410 
interface-accessors -> SET SEMICOLON attributes .GET SEMICOLON 
transitions ->  {"GET":1434}

item set 1411 
interface-accessors -> SET SEMICOLON GET .SEMICOLON 
transitions ->  {"SEMICOLON":1435}

item set 1412 
interface-accessors -> GET SEMICOLON attributes .SET SEMICOLON 
transitions ->  {"SET":1436}

item set 1413 
interface-accessors -> GET SEMICOLON SET .SEMICOLON 
transitions ->  {"SEMICOLON":1437}

item set 1414 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1438,"attributes":1336,"SET":1337,"GET":1338,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1415 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1439}

item set 1416 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1440}

item set 1417 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1418 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1441}

item set 1419 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1442}

item set 1420 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1443}

item set 1421 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1444}

item set 1422 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1445}

item set 1423 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1446}

item set 1424 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1447}

item set 1425 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1426 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1448}

item set 1427 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1428 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1429 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1430 
interface-accessors -> attributes GET SEMICOLON attributes .SET SEMICOLON 
transitions ->  {"SET":1449}

item set 1431 
interface-accessors -> attributes GET SEMICOLON SET .SEMICOLON 
transitions ->  {"SEMICOLON":1450}

item set 1432 
interface-accessors -> attributes SET SEMICOLON attributes .GET SEMICOLON 
transitions ->  {"GET":1451}

item set 1433 
interface-accessors -> attributes SET SEMICOLON GET .SEMICOLON 
transitions ->  {"SEMICOLON":1452}

item set 1434 
interface-accessors -> SET SEMICOLON attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1453}

item set 1435 
interface-accessors -> SET SEMICOLON GET SEMICOLON . 
transitions ->  {}

item set 1436 
interface-accessors -> GET SEMICOLON attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1454}

item set 1437 
interface-accessors -> GET SEMICOLON SET SEMICOLON . 
transitions ->  {}

item set 1438 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1455}

item set 1439 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1440 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1456}

item set 1441 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1457,"attributes":1336,"SET":1337,"GET":1338,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1442 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1458}

item set 1443 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1459}

item set 1444 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1445 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1460}

item set 1446 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1447 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1461}

item set 1448 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1462,"attributes":1336,"SET":1337,"GET":1338,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1449 
interface-accessors -> attributes GET SEMICOLON attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1463}

item set 1450 
interface-accessors -> attributes GET SEMICOLON SET SEMICOLON . 
transitions ->  {}

item set 1451 
interface-accessors -> attributes SET SEMICOLON attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1464}

item set 1452 
interface-accessors -> attributes SET SEMICOLON GET SEMICOLON . 
transitions ->  {}

item set 1453 
interface-accessors -> SET SEMICOLON attributes GET SEMICOLON . 
transitions ->  {}

item set 1454 
interface-accessors -> GET SEMICOLON attributes SET SEMICOLON . 
transitions ->  {}

item set 1455 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1456 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1457 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1465}

item set 1458 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1459 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1466}

item set 1460 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1467,"attributes":1336,"SET":1337,"GET":1338,"attribute-sections":42,"attribute-section":54,"OPEN_BRACKET":90}

item set 1461 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1462 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1468}

item set 1463 
interface-accessors -> attributes GET SEMICOLON attributes SET SEMICOLON . 
transitions ->  {}

item set 1464 
interface-accessors -> attributes SET SEMICOLON attributes GET SEMICOLON . 
transitions ->  {}

item set 1465 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1466 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1467 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1469}

item set 1468 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1469 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}
1470 states.
Building lookahead grammar.
Computing lookaheads.
Building parse table.
Conflict at state: 21, token: IDENTIFIER
  reduce by rule: class-key -> STRUCT
  shift token (then go to state 70)
Conflict at state: 24, token: CONST
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 53)
Conflict at state: 24, token: ASYNC
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 132)
Conflict at state: 24, token: SBYTE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 73)
Conflict at state: 24, token: BYTE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 74)
Conflict at state: 24, token: SHORT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 75)
Conflict at state: 24, token: USHORT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 76)
Conflict at state: 24, token: INT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 77)
Conflict at state: 24, token: UINT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 78)
Conflict at state: 24, token: LONG
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 79)
Conflict at state: 24, token: ULONG
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 80)
Conflict at state: 24, token: CHAR
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 81)
Conflict at state: 24, token: FLOAT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 82)
Conflict at state: 24, token: DOUBLE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 83)
Conflict at state: 24, token: DECIMAL
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 84)
Conflict at state: 24, token: BOOL
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 85)
Conflict at state: 24, token: OBJECT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 86)
Conflict at state: 24, token: STRING
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 87)
Conflict at state: 24, token: VOID
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 88)
Conflict at state: 24, token: AUTO
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 89)
Conflict at state: 24, token: TILDE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 123)
Conflict at state: 24, token: ADD
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 93)
Conflict at state: 24, token: REMOVE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 94)
Conflict at state: 24, token: SET
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 95)
Conflict at state: 24, token: PARAMS
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 96)
Conflict at state: 24, token: DEFAULT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 97)
Conflict at state: 24, token: METHOD
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 98)
Conflict at state: 24, token: PARAM
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 99)
Conflict at state: 24, token: ASSEMBLY
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 100)
Conflict at state: 24, token: PROPERTY
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 101)
Conflict at state: 24, token: MODULE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 102)
Conflict at state: 24, token: FIELD
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 103)
Conflict at state: 24, token: TYPE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 104)
Conflict at state: 24, token: THIS
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 105)
Conflict at state: 24, token: WHERE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 106)
Conflict at state: 24, token: IDENTIFIER
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 70)
Conflict at state: 24, token: COMMA
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 127)
Conflict at state: 24, token: CONST
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 53)
Conflict at state: 24, token: OVERRIDE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: OPEN_BRACE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: SEMICOLON
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: EOF
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: CLASS
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: STRUCT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: UNION
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: INTERR
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: UNSAFE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: ASYNC
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 132)
Conflict at state: 24, token: PUBLIC
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: PARTIAL
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: PROTECTED
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: INTERNAL
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: PRIVATE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: ABSTRACT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: SEALED
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: STATIC
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: READONLY
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: VOLATILE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: VIRTUAL
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: EXTERN
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: NEW
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: SBYTE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 73)
Conflict at state: 24, token: BYTE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 74)
Conflict at state: 24, token: SHORT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 75)
Conflict at state: 24, token: USHORT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 76)
Conflict at state: 24, token: INT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 77)
Conflict at state: 24, token: UINT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 78)
Conflict at state: 24, token: LONG
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 79)
Conflict at state: 24, token: ULONG
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 80)
Conflict at state: 24, token: CHAR
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 81)
Conflict at state: 24, token: FLOAT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 82)
Conflict at state: 24, token: DOUBLE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 83)
Conflict at state: 24, token: DECIMAL
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 84)
Conflict at state: 24, token: BOOL
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 85)
Conflict at state: 24, token: OBJECT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 86)
Conflict at state: 24, token: STRING
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 87)
Conflict at state: 24, token: VOID
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 88)
Conflict at state: 24, token: AUTO
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 89)
Conflict at state: 24, token: TILDE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 123)
Conflict at state: 24, token: ADD
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 93)
Conflict at state: 24, token: REMOVE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 94)
Conflict at state: 24, token: SET
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 95)
Conflict at state: 24, token: PARAMS
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 96)
Conflict at state: 24, token: DEFAULT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 97)
Conflict at state: 24, token: METHOD
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 98)
Conflict at state: 24, token: PARAM
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 99)
Conflict at state: 24, token: ASSEMBLY
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 100)
Conflict at state: 24, token: PROPERTY
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 101)
Conflict at state: 24, token: MODULE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 102)
Conflict at state: 24, token: FIELD
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 103)
Conflict at state: 24, token: TYPE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 104)
Conflict at state: 24, token: THIS
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 105)
Conflict at state: 24, token: WHERE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 106)
Conflict at state: 24, token: OPEN_BRACKET
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: IDENTIFIER
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 70)
Conflict at state: 24, token: INTERFACE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: ENUM
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: DELEGATE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: USING
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 24, token: COMMA
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 127)
Conflict at state: 26, token: OVERRIDE
  reduce by rule: class-method-declaration -> class-method-header
  shift token (then go to state 115)
Conflict at state: 26, token: CONST
  reduce by rule: class-method-declaration -> class-method-header
  shift token (then go to state 114)
Conflict at state: 33, token: TILDE
  reduce by rule: modifier -> EXTERN
  shift token (then go to state 178)
Conflict at state: 40, token: CONST
  reduce by rule: method-types -> method-type
  shift token (then go to state 53)
Conflict at state: 40, token: SBYTE
  reduce by rule: method-types -> method-type
  shift token (then go to state 73)
Conflict at state: 40, token: BYTE
  reduce by rule: method-types -> method-type
  shift token (then go to state 74)
Conflict at state: 40, token: SHORT
  reduce by rule: method-types -> method-type
  shift token (then go to state 75)
Conflict at state: 40, token: USHORT
  reduce by rule: method-types -> method-type
  shift token (then go to state 76)
Conflict at state: 40, token: INT
  reduce by rule: method-types -> method-type
  shift token (then go to state 77)
Conflict at state: 40, token: UINT
  reduce by rule: method-types -> method-type
  shift token (then go to state 78)
Conflict at state: 40, token: LONG
  reduce by rule: method-types -> method-type
  shift token (then go to state 79)
Conflict at state: 40, token: ULONG
  reduce by rule: method-types -> method-type
  shift token (then go to state 80)
Conflict at state: 40, token: CHAR
  reduce by rule: method-types -> method-type
  shift token (then go to state 81)
Conflict at state: 40, token: FLOAT
  reduce by rule: method-types -> method-type
  shift token (then go to state 82)
Conflict at state: 40, token: DOUBLE
  reduce by rule: method-types -> method-type
  shift token (then go to state 83)
Conflict at state: 40, token: DECIMAL
  reduce by rule: method-types -> method-type
  shift token (then go to state 84)
Conflict at state: 40, token: BOOL
  reduce by rule: method-types -> method-type
  shift token (then go to state 85)
Conflict at state: 40, token: OBJECT
  reduce by rule: method-types -> method-type
  shift token (then go to state 86)
Conflict at state: 40, token: STRING
  reduce by rule: method-types -> method-type
  shift token (then go to state 87)
Conflict at state: 40, token: VOID
  reduce by rule: method-types -> method-type
  shift token (then go to state 88)
Conflict at state: 40, token: AUTO
  reduce by rule: method-types -> method-type
  shift token (then go to state 89)
Conflict at state: 40, token: TILDE
  reduce by rule: method-types -> method-type
  shift token (then go to state 123)
Conflict at state: 40, token: ADD
  reduce by rule: method-types -> method-type
  shift token (then go to state 93)
Conflict at state: 40, token: REMOVE
  reduce by rule: method-types -> method-type
  shift token (then go to state 94)
Conflict at state: 40, token: SET
  reduce by rule: method-types -> method-type
  shift token (then go to state 95)
Conflict at state: 40, token: PARAMS
  reduce by rule: method-types -> method-type
  shift token (then go to state 96)
Conflict at state: 40, token: DEFAULT
  reduce by rule: method-types -> method-type
  shift token (then go to state 97)
Conflict at state: 40, token: METHOD
  reduce by rule: method-types -> method-type
  shift token (then go to state 98)
Conflict at state: 40, token: PARAM
  reduce by rule: method-types -> method-type
  shift token (then go to state 99)
Conflict at state: 40, token: ASSEMBLY
  reduce by rule: method-types -> method-type
  shift token (then go to state 100)
Conflict at state: 40, token: PROPERTY
  reduce by rule: method-types -> method-type
  shift token (then go to state 101)
Conflict at state: 40, token: MODULE
  reduce by rule: method-types -> method-type
  shift token (then go to state 102)
Conflict at state: 40, token: FIELD
  reduce by rule: method-types -> method-type
  shift token (then go to state 103)
Conflict at state: 40, token: TYPE
  reduce by rule: method-types -> method-type
  shift token (then go to state 104)
Conflict at state: 40, token: THIS
  reduce by rule: method-types -> method-type
  shift token (then go to state 105)
Conflict at state: 40, token: ASYNC
  reduce by rule: method-types -> method-type
  shift token (then go to state 132)
Conflict at state: 40, token: WHERE
  reduce by rule: method-types -> method-type
  shift token (then go to state 106)
Conflict at state: 40, token: IDENTIFIER
  reduce by rule: method-types -> method-type
  shift token (then go to state 70)
Conflict at state: 40, token: CONST
  reduce by rule: method-type -> method-type
  shift token (then go to state 53)
Conflict at state: 40, token: SBYTE
  reduce by rule: method-type -> method-type
  shift token (then go to state 73)
Conflict at state: 40, token: BYTE
  reduce by rule: method-type -> method-type
  shift token (then go to state 74)
Conflict at state: 40, token: SHORT
  reduce by rule: method-type -> method-type
  shift token (then go to state 75)
Conflict at state: 40, token: USHORT
  reduce by rule: method-type -> method-type
  shift token (then go to state 76)
Conflict at state: 40, token: INT
  reduce by rule: method-type -> method-type
  shift token (then go to state 77)
Conflict at state: 40, token: UINT
  reduce by rule: method-type -> method-type
  shift token (then go to state 78)
Conflict at state: 40, token: LONG
  reduce by rule: method-type -> method-type
  shift token (then go to state 79)
Conflict at state: 40, token: ULONG
  reduce by rule: method-type -> method-type
  shift token (then go to state 80)
Conflict at state: 40, token: CHAR
  reduce by rule: method-type -> method-type
  shift token (then go to state 81)
Conflict at state: 40, token: FLOAT
  reduce by rule: method-type -> method-type
  shift token (then go to state 82)
Conflict at state: 40, token: DOUBLE
  reduce by rule: method-type -> method-type
  shift token (then go to state 83)
Conflict at state: 40, token: DECIMAL
  reduce by rule: method-type -> method-type
  shift token (then go to state 84)
Conflict at state: 40, token: BOOL
  reduce by rule: method-type -> method-type
  shift token (then go to state 85)
Conflict at state: 40, token: OBJECT
  reduce by rule: method-type -> method-type
  shift token (then go to state 86)
Conflict at state: 40, token: STRING
  reduce by rule: method-type -> method-type
  shift token (then go to state 87)
Conflict at state: 40, token: VOID
  reduce by rule: method-type -> method-type
  shift token (then go to state 88)
Conflict at state: 40, token: AUTO
  reduce by rule: method-type -> method-type
  shift token (then go to state 89)
Conflict at state: 40, token: TILDE
  reduce by rule: method-type -> method-type
  shift token (then go to state 123)
Conflict at state: 40, token: ADD
  reduce by rule: method-type -> method-type
  shift token (then go to state 93)
Conflict at state: 40, token: REMOVE
  reduce by rule: method-type -> method-type
  shift token (then go to state 94)
Conflict at state: 40, token: SET
  reduce by rule: method-type -> method-type
  shift token (then go to state 95)
Conflict at state: 40, token: PARAMS
  reduce by rule: method-type -> method-type
  shift token (then go to state 96)
Conflict at state: 40, token: DEFAULT
  reduce by rule: method-type -> method-type
  shift token (then go to state 97)
Conflict at state: 40, token: METHOD
  reduce by rule: method-type -> method-type
  shift token (then go to state 98)
Conflict at state: 40, token: PARAM
  reduce by rule: method-type -> method-type
  shift token (then go to state 99)
Conflict at state: 40, token: ASSEMBLY
  reduce by rule: method-type -> method-type
  shift token (then go to state 100)
Conflict at state: 40, token: PROPERTY
  reduce by rule: method-type -> method-type
  shift token (then go to state 101)
Conflict at state: 40, token: MODULE
  reduce by rule: method-type -> method-type
  shift token (then go to state 102)
Conflict at state: 40, token: FIELD
  reduce by rule: method-type -> method-type
  shift token (then go to state 103)
Conflict at state: 40, token: TYPE
  reduce by rule: method-type -> method-type
  shift token (then go to state 104)
Conflict at state: 40, token: THIS
  reduce by rule: method-type -> method-type
  shift token (then go to state 105)
Conflict at state: 40, token: ASYNC
  reduce by rule: method-type -> method-type
  shift token (then go to state 132)
Conflict at state: 40, token: WHERE
  reduce by rule: method-type -> method-type
  shift token (then go to state 106)
Conflict at state: 40, token: IDENTIFIER
  reduce by rule: method-type -> method-type
  shift token (then go to state 70)
Conflict at state: 40, token: INTERR
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: UNSAFE
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: PUBLIC
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: PARTIAL
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: PROTECTED
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: INTERNAL
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: PRIVATE
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: ABSTRACT
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: SEALED
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: STATIC
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: READONLY
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: VOLATILE
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: VIRTUAL
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: OVERRIDE
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: EXTERN
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 40, token: NEW
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-type
Conflict at state: 41, token: CONST
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 53)
Conflict at state: 41, token: SBYTE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 73)
Conflict at state: 41, token: BYTE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 74)
Conflict at state: 41, token: SHORT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 75)
Conflict at state: 41, token: USHORT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 76)
Conflict at state: 41, token: INT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 77)
Conflict at state: 41, token: UINT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 78)
Conflict at state: 41, token: LONG
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 79)
Conflict at state: 41, token: ULONG
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 80)
Conflict at state: 41, token: CHAR
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 81)
Conflict at state: 41, token: FLOAT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 82)
Conflict at state: 41, token: DOUBLE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 83)
Conflict at state: 41, token: DECIMAL
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 84)
Conflict at state: 41, token: BOOL
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 85)
Conflict at state: 41, token: OBJECT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 86)
Conflict at state: 41, token: STRING
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 87)
Conflict at state: 41, token: VOID
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 88)
Conflict at state: 41, token: AUTO
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 89)
Conflict at state: 41, token: TILDE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 123)
Conflict at state: 41, token: ADD
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 93)
Conflict at state: 41, token: REMOVE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 94)
Conflict at state: 41, token: SET
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 95)
Conflict at state: 41, token: PARAMS
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 96)
Conflict at state: 41, token: DEFAULT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 97)
Conflict at state: 41, token: METHOD
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 98)
Conflict at state: 41, token: PARAM
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 99)
Conflict at state: 41, token: ASSEMBLY
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 100)
Conflict at state: 41, token: PROPERTY
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 101)
Conflict at state: 41, token: MODULE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 102)
Conflict at state: 41, token: FIELD
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 103)
Conflict at state: 41, token: TYPE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 104)
Conflict at state: 41, token: THIS
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 105)
Conflict at state: 41, token: ASYNC
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 132)
Conflict at state: 41, token: WHERE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 106)
Conflict at state: 41, token: IDENTIFIER
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 70)
Conflict at state: 41, token: OPEN_BRACKET
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 186)
Conflict at state: 41, token: INTERR
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 181)
Conflict at state: 41, token: OPEN_PARENS
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: CONST
  reduce by rule: type-with-interr -> type
  shift token (then go to state 53)
Conflict at state: 41, token: SBYTE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 73)
Conflict at state: 41, token: BYTE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 74)
Conflict at state: 41, token: SHORT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 75)
Conflict at state: 41, token: USHORT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 76)
Conflict at state: 41, token: INT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 77)
Conflict at state: 41, token: UINT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 78)
Conflict at state: 41, token: LONG
  reduce by rule: type-with-interr -> type
  shift token (then go to state 79)
Conflict at state: 41, token: ULONG
  reduce by rule: type-with-interr -> type
  shift token (then go to state 80)
Conflict at state: 41, token: CHAR
  reduce by rule: type-with-interr -> type
  shift token (then go to state 81)
Conflict at state: 41, token: FLOAT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 82)
Conflict at state: 41, token: DOUBLE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 83)
Conflict at state: 41, token: DECIMAL
  reduce by rule: type-with-interr -> type
  shift token (then go to state 84)
Conflict at state: 41, token: BOOL
  reduce by rule: type-with-interr -> type
  shift token (then go to state 85)
Conflict at state: 41, token: OBJECT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 86)
Conflict at state: 41, token: STRING
  reduce by rule: type-with-interr -> type
  shift token (then go to state 87)
Conflict at state: 41, token: VOID
  reduce by rule: type-with-interr -> type
  shift token (then go to state 88)
Conflict at state: 41, token: AUTO
  reduce by rule: type-with-interr -> type
  shift token (then go to state 89)
Conflict at state: 41, token: TILDE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 123)
Conflict at state: 41, token: ADD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 93)
Conflict at state: 41, token: REMOVE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 94)
Conflict at state: 41, token: SET
  reduce by rule: type-with-interr -> type
  shift token (then go to state 95)
Conflict at state: 41, token: PARAMS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 96)
Conflict at state: 41, token: DEFAULT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 97)
Conflict at state: 41, token: METHOD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 98)
Conflict at state: 41, token: PARAM
  reduce by rule: type-with-interr -> type
  shift token (then go to state 99)
Conflict at state: 41, token: ASSEMBLY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 100)
Conflict at state: 41, token: PROPERTY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 101)
Conflict at state: 41, token: MODULE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 102)
Conflict at state: 41, token: FIELD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 103)
Conflict at state: 41, token: TYPE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 104)
Conflict at state: 41, token: THIS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 105)
Conflict at state: 41, token: ASYNC
  reduce by rule: type-with-interr -> type
  shift token (then go to state 132)
Conflict at state: 41, token: WHERE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 106)
Conflict at state: 41, token: IDENTIFIER
  reduce by rule: type-with-interr -> type
  shift token (then go to state 70)
Conflict at state: 41, token: COMMA
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: USING
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: DELEGATE
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: ENUM
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: INTERFACE
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: OPEN_BRACKET
  reduce by rule: type-with-interr -> type
  shift token (then go to state 186)
Conflict at state: 41, token: NEW
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: EXTERN
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: OVERRIDE
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: VIRTUAL
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: VOLATILE
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: READONLY
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: STATIC
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: SEALED
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: ABSTRACT
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: PRIVATE
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: INTERNAL
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: PROTECTED
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: PARTIAL
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: PUBLIC
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: UNSAFE
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: INTERR
  reduce by rule: type-with-interr -> type
  shift token (then go to state 181)
Conflict at state: 41, token: UNION
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: STRUCT
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: CLASS
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: EOF
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: SEMICOLON
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: OPEN_BRACE
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: ASSIGN
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: CLOSE_BRACE
  reduce by rule: type-with-interr -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: OPEN_PARENS
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: CONST
  reduce by rule: method-type -> type
  shift token (then go to state 53)
Conflict at state: 41, token: SBYTE
  reduce by rule: method-type -> type
  shift token (then go to state 73)
Conflict at state: 41, token: BYTE
  reduce by rule: method-type -> type
  shift token (then go to state 74)
Conflict at state: 41, token: SHORT
  reduce by rule: method-type -> type
  shift token (then go to state 75)
Conflict at state: 41, token: USHORT
  reduce by rule: method-type -> type
  shift token (then go to state 76)
Conflict at state: 41, token: INT
  reduce by rule: method-type -> type
  shift token (then go to state 77)
Conflict at state: 41, token: UINT
  reduce by rule: method-type -> type
  shift token (then go to state 78)
Conflict at state: 41, token: LONG
  reduce by rule: method-type -> type
  shift token (then go to state 79)
Conflict at state: 41, token: ULONG
  reduce by rule: method-type -> type
  shift token (then go to state 80)
Conflict at state: 41, token: CHAR
  reduce by rule: method-type -> type
  shift token (then go to state 81)
Conflict at state: 41, token: FLOAT
  reduce by rule: method-type -> type
  shift token (then go to state 82)
Conflict at state: 41, token: DOUBLE
  reduce by rule: method-type -> type
  shift token (then go to state 83)
Conflict at state: 41, token: DECIMAL
  reduce by rule: method-type -> type
  shift token (then go to state 84)
Conflict at state: 41, token: BOOL
  reduce by rule: method-type -> type
  shift token (then go to state 85)
Conflict at state: 41, token: OBJECT
  reduce by rule: method-type -> type
  shift token (then go to state 86)
Conflict at state: 41, token: STRING
  reduce by rule: method-type -> type
  shift token (then go to state 87)
Conflict at state: 41, token: VOID
  reduce by rule: method-type -> type
  shift token (then go to state 88)
Conflict at state: 41, token: AUTO
  reduce by rule: method-type -> type
  shift token (then go to state 89)
Conflict at state: 41, token: TILDE
  reduce by rule: method-type -> type
  shift token (then go to state 123)
Conflict at state: 41, token: ADD
  reduce by rule: method-type -> type
  shift token (then go to state 93)
Conflict at state: 41, token: REMOVE
  reduce by rule: method-type -> type
  shift token (then go to state 94)
Conflict at state: 41, token: SET
  reduce by rule: method-type -> type
  shift token (then go to state 95)
Conflict at state: 41, token: PARAMS
  reduce by rule: method-type -> type
  shift token (then go to state 96)
Conflict at state: 41, token: DEFAULT
  reduce by rule: method-type -> type
  shift token (then go to state 97)
Conflict at state: 41, token: METHOD
  reduce by rule: method-type -> type
  shift token (then go to state 98)
Conflict at state: 41, token: PARAM
  reduce by rule: method-type -> type
  shift token (then go to state 99)
Conflict at state: 41, token: ASSEMBLY
  reduce by rule: method-type -> type
  shift token (then go to state 100)
Conflict at state: 41, token: PROPERTY
  reduce by rule: method-type -> type
  shift token (then go to state 101)
Conflict at state: 41, token: MODULE
  reduce by rule: method-type -> type
  shift token (then go to state 102)
Conflict at state: 41, token: FIELD
  reduce by rule: method-type -> type
  shift token (then go to state 103)
Conflict at state: 41, token: TYPE
  reduce by rule: method-type -> type
  shift token (then go to state 104)
Conflict at state: 41, token: THIS
  reduce by rule: method-type -> type
  shift token (then go to state 105)
Conflict at state: 41, token: ASYNC
  reduce by rule: method-type -> type
  shift token (then go to state 132)
Conflict at state: 41, token: WHERE
  reduce by rule: method-type -> type
  shift token (then go to state 106)
Conflict at state: 41, token: IDENTIFIER
  reduce by rule: method-type -> type
  shift token (then go to state 70)
Conflict at state: 41, token: COMMA
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: USING
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: DELEGATE
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: ENUM
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: INTERFACE
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: OPEN_BRACKET
  reduce by rule: method-type -> type
  shift token (then go to state 186)
Conflict at state: 41, token: NEW
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: EXTERN
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: OVERRIDE
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: VIRTUAL
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: VOLATILE
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: READONLY
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: STATIC
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: SEALED
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: ABSTRACT
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: PRIVATE
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: INTERNAL
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: PROTECTED
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: PARTIAL
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: PUBLIC
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: UNSAFE
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: INTERR
  reduce by rule: method-type -> type
  shift token (then go to state 181)
Conflict at state: 41, token: UNION
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: STRUCT
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: CLASS
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: EOF
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: SEMICOLON
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: OPEN_BRACE
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: ASSIGN
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 41, token: CLOSE_BRACE
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 44, token: CONST
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: SBYTE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: BYTE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: SHORT
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: USHORT
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: INT
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: UINT
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: LONG
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: ULONG
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: CHAR
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: FLOAT
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: DOUBLE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: DECIMAL
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: BOOL
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: OBJECT
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: STRING
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: VOID
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: AUTO
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: TILDE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: ADD
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: REMOVE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: SET
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: PARAMS
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: DEFAULT
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: METHOD
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: PARAM
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: ASSEMBLY
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: PROPERTY
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: MODULE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: FIELD
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: TYPE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: THIS
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: ASYNC
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: WHERE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: IDENTIFIER
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: IMPLICIT
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: EXPLICIT
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: OPEN_BRACKET
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: EXTERN
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: UNSAFE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: PUBLIC
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: PARTIAL
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: PROTECTED
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: INTERNAL
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: PRIVATE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: ABSTRACT
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: SEALED
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: STATIC
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: READONLY
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: VOLATILE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: VIRTUAL
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: OVERRIDE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: NEW
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: STRUCT
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: INTERFACE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: ENUM
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: DELEGATE
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 44, token: INTERR
  reduce by rule: method-type -> modifier
  reduce by rule: modifiers -> modifier
Conflict at state: 45, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 188)
Conflict at state: 51, token: AMP
  reduce by rule: type -> non-array-type
  shift token (then go to state 197)
Conflict at state: 51, token: STAR
  reduce by rule: type -> non-array-type
  shift token (then go to state 199)
Conflict at state: 52, token: AMP
  reduce by rule: type -> array-type
  shift token (then go to state 200)
Conflict at state: 52, token: STAR
  reduce by rule: type -> array-type
  shift token (then go to state 199)
Conflict at state: 56, token: EXTERN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: EXPLICIT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: IMPLICIT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: TILDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: AUTO
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: VOID
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: STRING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OBJECT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: BOOL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: DECIMAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: DOUBLE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: FLOAT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: CHAR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: ULONG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: LONG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: UINT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: INT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: USHORT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: SHORT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: BYTE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: SBYTE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: CONST
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: INTERR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: UNSAFE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: PUBLIC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: PARTIAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: PROTECTED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: INTERNAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: PRIVATE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: ABSTRACT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: SEALED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: STATIC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: READONLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: VOLATILE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: VIRTUAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OVERRIDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: NEW
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: DELEGATE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: ENUM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: INTERFACE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: STRUCT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: TEMPLATE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: STAR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: AMP
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: SEMICOLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: ASSIGN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OPEN_BRACE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: EOF
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: CLASS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: UNION
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: USING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OPERATOR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_DBLPTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: CLOSE_BRACE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_XOR_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_OR_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_AND_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_MOD_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_DIV_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_MULT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_SUB_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_ADD_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: TRUE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: FALSE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: REAL_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: INTEGER_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: STRING_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: CHARACTER_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: NULL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: AWAIT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: STACKALLOC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: BASE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: TYPEOF
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: SIZEOF
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: CHECKED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: UNCHECKED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: PLUS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: OP_COALESCING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: MINUS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: BANG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: IF
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: SWITCH
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: WHILE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: DO
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: FOR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: FOREACH
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: YIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: BREAK
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: CONTINUE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: GOTO
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: RETURN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: THROW
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: TRY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: LOCK
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: FIXED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 56, token: CASE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 70, token: TEMPLATE
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER
  shift token (then go to state 202)
Conflict at state: 87, token: AMP
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: STAR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: TEMPLATE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: NEW
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: EXTERN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OVERRIDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: VIRTUAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: VOLATILE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: READONLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: STATIC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: SEALED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: ABSTRACT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: PRIVATE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: INTERNAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: PROTECTED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: PARTIAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: PUBLIC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: UNSAFE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: INTERR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: TILDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: AUTO
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: VOID
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: STRING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OBJECT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: BOOL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: DECIMAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: DOUBLE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: FLOAT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: CHAR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: ULONG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: LONG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: UINT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: INT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: USHORT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: SHORT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: BYTE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: SBYTE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: CONST
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: USING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: DELEGATE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: ENUM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: INTERFACE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: UNION
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: STRUCT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: CLASS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: EOF
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: SEMICOLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OPEN_BRACE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: ASSIGN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OPERATOR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: CLOSE_BRACE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_DBLPTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_XOR_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_OR_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_AND_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_MOD_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_DIV_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_MULT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_SUB_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_ADD_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: TRUE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: FALSE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: REAL_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: INTEGER_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: STRING_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: CHARACTER_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: NULL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: AWAIT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: STACKALLOC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: BASE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: TYPEOF
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: SIZEOF
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: CHECKED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: UNCHECKED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: PLUS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_COALESCING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: MINUS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: BANG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: IF
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: SWITCH
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: WHILE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: DO
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: FOR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: FOREACH
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: YIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: BREAK
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: CONTINUE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: GOTO
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: RETURN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: THROW
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: TRY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: LOCK
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: FIXED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: DIV
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: PERCENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_LEFT_SHIFT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: RIGHT_SHIFT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_EQ
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_NE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: CARET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_AND
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_OR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: BITWISE_OR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: AS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: IS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_GE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: OP_LE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: GT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: LT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 87, token: CASE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> STRING
  reduce by rule: non-array-type -> STRING
Conflict at state: 91, token: DOUBLE_COLON
  reduce by rule: type-name -> namespace-or-type-name
  shift token (then go to state 217)
Conflict at state: 91, token: DOT
  reduce by rule: type-name -> namespace-or-type-name
  shift token (then go to state 218)
Conflict at state: 113, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 113, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 113, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 227)
Conflict at state: 113, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 113, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 113, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 113, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 113, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 113, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 113, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 113, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 113, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 113, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 113, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 113, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 113, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 113, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 113, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 113, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 56)
Conflict at state: 113, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 113, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 113, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 113, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 113, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 113, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 113, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 113, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 113, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 113, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 113, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 113, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 113, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 113, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 113, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 113, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 113, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 113, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 113, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 113, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 113, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 113, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 113, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 113, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 113, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 113, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 113, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 113, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 113, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 113, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 113, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 113, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 113, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 113, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 113, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 113, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 285)
Conflict at state: 113, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 113, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 113, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 113, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 113, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 113, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 113, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 113, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 113, token: IF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 289)
Conflict at state: 113, token: SWITCH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 290)
Conflict at state: 113, token: WHILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 291)
Conflict at state: 113, token: DO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 292)
Conflict at state: 113, token: FOR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 293)
Conflict at state: 113, token: FOREACH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 294)
Conflict at state: 113, token: YIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 295)
Conflict at state: 113, token: BREAK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 296)
Conflict at state: 113, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 297)
Conflict at state: 113, token: GOTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 298)
Conflict at state: 113, token: RETURN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 299)
Conflict at state: 113, token: THROW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 300)
Conflict at state: 113, token: TRY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 274)
Conflict at state: 113, token: LOCK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 113, token: USING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 278)
Conflict at state: 113, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 279)
Conflict at state: 113, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 113, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 58)
Conflict at state: 113, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 113, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 113, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 61)
Conflict at state: 113, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 113, token: SEALED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 113, token: STATIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 113, token: READONLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 113, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 113, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 113, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 113, token: EXTERN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 113, token: FIXED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 117, token: COMMA
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 127)
Conflict at state: 119, token: CONST
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 53)
Conflict at state: 119, token: SBYTE
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 73)
Conflict at state: 119, token: BYTE
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 74)
Conflict at state: 119, token: SHORT
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 75)
Conflict at state: 119, token: USHORT
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 76)
Conflict at state: 119, token: INT
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 77)
Conflict at state: 119, token: UINT
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 78)
Conflict at state: 119, token: LONG
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 79)
Conflict at state: 119, token: ULONG
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 80)
Conflict at state: 119, token: CHAR
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 81)
Conflict at state: 119, token: FLOAT
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 82)
Conflict at state: 119, token: DOUBLE
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 83)
Conflict at state: 119, token: DECIMAL
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 84)
Conflict at state: 119, token: BOOL
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 85)
Conflict at state: 119, token: OBJECT
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 86)
Conflict at state: 119, token: STRING
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 87)
Conflict at state: 119, token: VOID
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 88)
Conflict at state: 119, token: AUTO
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 89)
Conflict at state: 119, token: TILDE
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 123)
Conflict at state: 119, token: ADD
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 93)
Conflict at state: 119, token: REMOVE
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 94)
Conflict at state: 119, token: SET
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 95)
Conflict at state: 119, token: PARAMS
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 96)
Conflict at state: 119, token: DEFAULT
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 97)
Conflict at state: 119, token: METHOD
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 98)
Conflict at state: 119, token: PARAM
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 99)
Conflict at state: 119, token: ASSEMBLY
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 100)
Conflict at state: 119, token: PROPERTY
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 101)
Conflict at state: 119, token: MODULE
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 102)
Conflict at state: 119, token: FIELD
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 103)
Conflict at state: 119, token: TYPE
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 104)
Conflict at state: 119, token: THIS
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 105)
Conflict at state: 119, token: ASYNC
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 132)
Conflict at state: 119, token: WHERE
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 106)
Conflict at state: 119, token: IDENTIFIER
  reduce by rule: method-types -> method-types method-type
  shift token (then go to state 70)
Conflict at state: 119, token: NEW
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: EXTERN
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: OVERRIDE
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: VIRTUAL
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: VOLATILE
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: READONLY
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: STATIC
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: SEALED
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: ABSTRACT
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: PRIVATE
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: INTERNAL
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: PROTECTED
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: PARTIAL
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: PUBLIC
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: UNSAFE
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: INTERR
  reduce by rule: method-type -> method-type
  reduce by rule: method-types -> method-types method-type
Conflict at state: 119, token: IDENTIFIER
  reduce by rule: method-type -> method-type
  shift token (then go to state 70)
Conflict at state: 119, token: WHERE
  reduce by rule: method-type -> method-type
  shift token (then go to state 106)
Conflict at state: 119, token: ASYNC
  reduce by rule: method-type -> method-type
  shift token (then go to state 132)
Conflict at state: 119, token: THIS
  reduce by rule: method-type -> method-type
  shift token (then go to state 105)
Conflict at state: 119, token: TYPE
  reduce by rule: method-type -> method-type
  shift token (then go to state 104)
Conflict at state: 119, token: FIELD
  reduce by rule: method-type -> method-type
  shift token (then go to state 103)
Conflict at state: 119, token: MODULE
  reduce by rule: method-type -> method-type
  shift token (then go to state 102)
Conflict at state: 119, token: PROPERTY
  reduce by rule: method-type -> method-type
  shift token (then go to state 101)
Conflict at state: 119, token: ASSEMBLY
  reduce by rule: method-type -> method-type
  shift token (then go to state 100)
Conflict at state: 119, token: PARAM
  reduce by rule: method-type -> method-type
  shift token (then go to state 99)
Conflict at state: 119, token: METHOD
  reduce by rule: method-type -> method-type
  shift token (then go to state 98)
Conflict at state: 119, token: DEFAULT
  reduce by rule: method-type -> method-type
  shift token (then go to state 97)
Conflict at state: 119, token: PARAMS
  reduce by rule: method-type -> method-type
  shift token (then go to state 96)
Conflict at state: 119, token: SET
  reduce by rule: method-type -> method-type
  shift token (then go to state 95)
Conflict at state: 119, token: REMOVE
  reduce by rule: method-type -> method-type
  shift token (then go to state 94)
Conflict at state: 119, token: ADD
  reduce by rule: method-type -> method-type
  shift token (then go to state 93)
Conflict at state: 119, token: TILDE
  reduce by rule: method-type -> method-type
  shift token (then go to state 123)
Conflict at state: 119, token: AUTO
  reduce by rule: method-type -> method-type
  shift token (then go to state 89)
Conflict at state: 119, token: VOID
  reduce by rule: method-type -> method-type
  shift token (then go to state 88)
Conflict at state: 119, token: STRING
  reduce by rule: method-type -> method-type
  shift token (then go to state 87)
Conflict at state: 119, token: OBJECT
  reduce by rule: method-type -> method-type
  shift token (then go to state 86)
Conflict at state: 119, token: BOOL
  reduce by rule: method-type -> method-type
  shift token (then go to state 85)
Conflict at state: 119, token: DECIMAL
  reduce by rule: method-type -> method-type
  shift token (then go to state 84)
Conflict at state: 119, token: DOUBLE
  reduce by rule: method-type -> method-type
  shift token (then go to state 83)
Conflict at state: 119, token: FLOAT
  reduce by rule: method-type -> method-type
  shift token (then go to state 82)
Conflict at state: 119, token: CHAR
  reduce by rule: method-type -> method-type
  shift token (then go to state 81)
Conflict at state: 119, token: ULONG
  reduce by rule: method-type -> method-type
  shift token (then go to state 80)
Conflict at state: 119, token: LONG
  reduce by rule: method-type -> method-type
  shift token (then go to state 79)
Conflict at state: 119, token: UINT
  reduce by rule: method-type -> method-type
  shift token (then go to state 78)
Conflict at state: 119, token: INT
  reduce by rule: method-type -> method-type
  shift token (then go to state 77)
Conflict at state: 119, token: USHORT
  reduce by rule: method-type -> method-type
  shift token (then go to state 76)
Conflict at state: 119, token: SHORT
  reduce by rule: method-type -> method-type
  shift token (then go to state 75)
Conflict at state: 119, token: BYTE
  reduce by rule: method-type -> method-type
  shift token (then go to state 74)
Conflict at state: 119, token: SBYTE
  reduce by rule: method-type -> method-type
  shift token (then go to state 73)
Conflict at state: 119, token: CONST
  reduce by rule: method-type -> method-type
  shift token (then go to state 53)
Conflict at state: 120, token: CONST
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 53)
Conflict at state: 120, token: SBYTE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 73)
Conflict at state: 120, token: BYTE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 74)
Conflict at state: 120, token: SHORT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 75)
Conflict at state: 120, token: USHORT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 76)
Conflict at state: 120, token: INT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 77)
Conflict at state: 120, token: UINT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 78)
Conflict at state: 120, token: LONG
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 79)
Conflict at state: 120, token: ULONG
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 80)
Conflict at state: 120, token: CHAR
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 81)
Conflict at state: 120, token: FLOAT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 82)
Conflict at state: 120, token: DOUBLE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 83)
Conflict at state: 120, token: DECIMAL
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 84)
Conflict at state: 120, token: BOOL
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 85)
Conflict at state: 120, token: OBJECT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 86)
Conflict at state: 120, token: STRING
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 87)
Conflict at state: 120, token: VOID
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 88)
Conflict at state: 120, token: AUTO
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 89)
Conflict at state: 120, token: TILDE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 123)
Conflict at state: 120, token: ADD
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 93)
Conflict at state: 120, token: REMOVE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 94)
Conflict at state: 120, token: SET
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 95)
Conflict at state: 120, token: PARAMS
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 96)
Conflict at state: 120, token: DEFAULT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 97)
Conflict at state: 120, token: METHOD
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 98)
Conflict at state: 120, token: PARAM
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 99)
Conflict at state: 120, token: ASSEMBLY
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 100)
Conflict at state: 120, token: PROPERTY
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 101)
Conflict at state: 120, token: MODULE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 102)
Conflict at state: 120, token: FIELD
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 103)
Conflict at state: 120, token: TYPE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 104)
Conflict at state: 120, token: THIS
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 105)
Conflict at state: 120, token: ASYNC
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 132)
Conflict at state: 120, token: WHERE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 106)
Conflict at state: 120, token: IDENTIFIER
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 70)
Conflict at state: 120, token: OPEN_PARENS
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: CONST
  reduce by rule: method-type -> type
  shift token (then go to state 53)
Conflict at state: 120, token: SBYTE
  reduce by rule: method-type -> type
  shift token (then go to state 73)
Conflict at state: 120, token: BYTE
  reduce by rule: method-type -> type
  shift token (then go to state 74)
Conflict at state: 120, token: SHORT
  reduce by rule: method-type -> type
  shift token (then go to state 75)
Conflict at state: 120, token: USHORT
  reduce by rule: method-type -> type
  shift token (then go to state 76)
Conflict at state: 120, token: INT
  reduce by rule: method-type -> type
  shift token (then go to state 77)
Conflict at state: 120, token: UINT
  reduce by rule: method-type -> type
  shift token (then go to state 78)
Conflict at state: 120, token: LONG
  reduce by rule: method-type -> type
  shift token (then go to state 79)
Conflict at state: 120, token: ULONG
  reduce by rule: method-type -> type
  shift token (then go to state 80)
Conflict at state: 120, token: CHAR
  reduce by rule: method-type -> type
  shift token (then go to state 81)
Conflict at state: 120, token: FLOAT
  reduce by rule: method-type -> type
  shift token (then go to state 82)
Conflict at state: 120, token: DOUBLE
  reduce by rule: method-type -> type
  shift token (then go to state 83)
Conflict at state: 120, token: DECIMAL
  reduce by rule: method-type -> type
  shift token (then go to state 84)
Conflict at state: 120, token: BOOL
  reduce by rule: method-type -> type
  shift token (then go to state 85)
Conflict at state: 120, token: OBJECT
  reduce by rule: method-type -> type
  shift token (then go to state 86)
Conflict at state: 120, token: STRING
  reduce by rule: method-type -> type
  shift token (then go to state 87)
Conflict at state: 120, token: VOID
  reduce by rule: method-type -> type
  shift token (then go to state 88)
Conflict at state: 120, token: AUTO
  reduce by rule: method-type -> type
  shift token (then go to state 89)
Conflict at state: 120, token: TILDE
  reduce by rule: method-type -> type
  shift token (then go to state 123)
Conflict at state: 120, token: ADD
  reduce by rule: method-type -> type
  shift token (then go to state 93)
Conflict at state: 120, token: REMOVE
  reduce by rule: method-type -> type
  shift token (then go to state 94)
Conflict at state: 120, token: SET
  reduce by rule: method-type -> type
  shift token (then go to state 95)
Conflict at state: 120, token: PARAMS
  reduce by rule: method-type -> type
  shift token (then go to state 96)
Conflict at state: 120, token: DEFAULT
  reduce by rule: method-type -> type
  shift token (then go to state 97)
Conflict at state: 120, token: METHOD
  reduce by rule: method-type -> type
  shift token (then go to state 98)
Conflict at state: 120, token: PARAM
  reduce by rule: method-type -> type
  shift token (then go to state 99)
Conflict at state: 120, token: ASSEMBLY
  reduce by rule: method-type -> type
  shift token (then go to state 100)
Conflict at state: 120, token: PROPERTY
  reduce by rule: method-type -> type
  shift token (then go to state 101)
Conflict at state: 120, token: MODULE
  reduce by rule: method-type -> type
  shift token (then go to state 102)
Conflict at state: 120, token: FIELD
  reduce by rule: method-type -> type
  shift token (then go to state 103)
Conflict at state: 120, token: TYPE
  reduce by rule: method-type -> type
  shift token (then go to state 104)
Conflict at state: 120, token: THIS
  reduce by rule: method-type -> type
  shift token (then go to state 105)
Conflict at state: 120, token: ASYNC
  reduce by rule: method-type -> type
  shift token (then go to state 132)
Conflict at state: 120, token: WHERE
  reduce by rule: method-type -> type
  shift token (then go to state 106)
Conflict at state: 120, token: IDENTIFIER
  reduce by rule: method-type -> type
  shift token (then go to state 70)
Conflict at state: 120, token: COMMA
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: ASSIGN
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: SEMICOLON
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: NEW
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: EXTERN
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: OVERRIDE
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: VIRTUAL
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: VOLATILE
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: READONLY
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: STATIC
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: SEALED
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: ABSTRACT
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: PRIVATE
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: INTERNAL
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: PROTECTED
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: PARTIAL
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: PUBLIC
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: UNSAFE
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 120, token: INTERR
  reduce by rule: method-type -> type
  reduce by rule: member-name-with-double-colon -> type
Conflict at state: 128, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 128, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 128, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 128, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 128, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 128, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 128, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 128, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 129, token: COMMA
  reduce by rule: member-name -> variable-declarators
  shift token (then go to state 388)
Conflict at state: 131, token: ASSIGN
  reduce by rule: variable-declarator -> type
  shift token (then go to state 389)
Conflict at state: 131, token: OPEN_BRACKET
  reduce by rule: variable-declarator -> type
  shift token (then go to state 186)
Conflict at state: 139, token: TILDE
  reduce by rule: modifier -> EXTERN
  shift token (then go to state 406)
Conflict at state: 140, token: CONST
  reduce by rule: type-with-interr -> type
  shift token (then go to state 53)
Conflict at state: 140, token: SBYTE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 73)
Conflict at state: 140, token: BYTE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 74)
Conflict at state: 140, token: SHORT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 75)
Conflict at state: 140, token: USHORT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 76)
Conflict at state: 140, token: INT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 77)
Conflict at state: 140, token: UINT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 78)
Conflict at state: 140, token: LONG
  reduce by rule: type-with-interr -> type
  shift token (then go to state 79)
Conflict at state: 140, token: ULONG
  reduce by rule: type-with-interr -> type
  shift token (then go to state 80)
Conflict at state: 140, token: CHAR
  reduce by rule: type-with-interr -> type
  shift token (then go to state 81)
Conflict at state: 140, token: FLOAT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 82)
Conflict at state: 140, token: DOUBLE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 83)
Conflict at state: 140, token: DECIMAL
  reduce by rule: type-with-interr -> type
  shift token (then go to state 84)
Conflict at state: 140, token: BOOL
  reduce by rule: type-with-interr -> type
  shift token (then go to state 85)
Conflict at state: 140, token: OBJECT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 86)
Conflict at state: 140, token: STRING
  reduce by rule: type-with-interr -> type
  shift token (then go to state 87)
Conflict at state: 140, token: VOID
  reduce by rule: type-with-interr -> type
  shift token (then go to state 88)
Conflict at state: 140, token: AUTO
  reduce by rule: type-with-interr -> type
  shift token (then go to state 89)
Conflict at state: 140, token: TILDE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 123)
Conflict at state: 140, token: ADD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 93)
Conflict at state: 140, token: REMOVE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 94)
Conflict at state: 140, token: SET
  reduce by rule: type-with-interr -> type
  shift token (then go to state 95)
Conflict at state: 140, token: PARAMS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 96)
Conflict at state: 140, token: DEFAULT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 97)
Conflict at state: 140, token: METHOD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 98)
Conflict at state: 140, token: PARAM
  reduce by rule: type-with-interr -> type
  shift token (then go to state 99)
Conflict at state: 140, token: ASSEMBLY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 100)
Conflict at state: 140, token: PROPERTY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 101)
Conflict at state: 140, token: MODULE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 102)
Conflict at state: 140, token: FIELD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 103)
Conflict at state: 140, token: TYPE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 104)
Conflict at state: 140, token: THIS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 105)
Conflict at state: 140, token: ASYNC
  reduce by rule: type-with-interr -> type
  shift token (then go to state 132)
Conflict at state: 140, token: WHERE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 106)
Conflict at state: 140, token: IDENTIFIER
  reduce by rule: type-with-interr -> type
  shift token (then go to state 70)
Conflict at state: 140, token: INTERR
  reduce by rule: type-with-interr -> type
  shift token (then go to state 181)
Conflict at state: 140, token: CONST
  reduce by rule: method-type -> type
  shift token (then go to state 53)
Conflict at state: 140, token: SBYTE
  reduce by rule: method-type -> type
  shift token (then go to state 73)
Conflict at state: 140, token: BYTE
  reduce by rule: method-type -> type
  shift token (then go to state 74)
Conflict at state: 140, token: SHORT
  reduce by rule: method-type -> type
  shift token (then go to state 75)
Conflict at state: 140, token: USHORT
  reduce by rule: method-type -> type
  shift token (then go to state 76)
Conflict at state: 140, token: INT
  reduce by rule: method-type -> type
  shift token (then go to state 77)
Conflict at state: 140, token: UINT
  reduce by rule: method-type -> type
  shift token (then go to state 78)
Conflict at state: 140, token: LONG
  reduce by rule: method-type -> type
  shift token (then go to state 79)
Conflict at state: 140, token: ULONG
  reduce by rule: method-type -> type
  shift token (then go to state 80)
Conflict at state: 140, token: CHAR
  reduce by rule: method-type -> type
  shift token (then go to state 81)
Conflict at state: 140, token: FLOAT
  reduce by rule: method-type -> type
  shift token (then go to state 82)
Conflict at state: 140, token: DOUBLE
  reduce by rule: method-type -> type
  shift token (then go to state 83)
Conflict at state: 140, token: DECIMAL
  reduce by rule: method-type -> type
  shift token (then go to state 84)
Conflict at state: 140, token: BOOL
  reduce by rule: method-type -> type
  shift token (then go to state 85)
Conflict at state: 140, token: OBJECT
  reduce by rule: method-type -> type
  shift token (then go to state 86)
Conflict at state: 140, token: STRING
  reduce by rule: method-type -> type
  shift token (then go to state 87)
Conflict at state: 140, token: VOID
  reduce by rule: method-type -> type
  shift token (then go to state 88)
Conflict at state: 140, token: AUTO
  reduce by rule: method-type -> type
  shift token (then go to state 89)
Conflict at state: 140, token: TILDE
  reduce by rule: method-type -> type
  shift token (then go to state 123)
Conflict at state: 140, token: ADD
  reduce by rule: method-type -> type
  shift token (then go to state 93)
Conflict at state: 140, token: REMOVE
  reduce by rule: method-type -> type
  shift token (then go to state 94)
Conflict at state: 140, token: SET
  reduce by rule: method-type -> type
  shift token (then go to state 95)
Conflict at state: 140, token: PARAMS
  reduce by rule: method-type -> type
  shift token (then go to state 96)
Conflict at state: 140, token: DEFAULT
  reduce by rule: method-type -> type
  shift token (then go to state 97)
Conflict at state: 140, token: METHOD
  reduce by rule: method-type -> type
  shift token (then go to state 98)
Conflict at state: 140, token: PARAM
  reduce by rule: method-type -> type
  shift token (then go to state 99)
Conflict at state: 140, token: ASSEMBLY
  reduce by rule: method-type -> type
  shift token (then go to state 100)
Conflict at state: 140, token: PROPERTY
  reduce by rule: method-type -> type
  shift token (then go to state 101)
Conflict at state: 140, token: MODULE
  reduce by rule: method-type -> type
  shift token (then go to state 102)
Conflict at state: 140, token: FIELD
  reduce by rule: method-type -> type
  shift token (then go to state 103)
Conflict at state: 140, token: TYPE
  reduce by rule: method-type -> type
  shift token (then go to state 104)
Conflict at state: 140, token: THIS
  reduce by rule: method-type -> type
  shift token (then go to state 105)
Conflict at state: 140, token: ASYNC
  reduce by rule: method-type -> type
  shift token (then go to state 132)
Conflict at state: 140, token: WHERE
  reduce by rule: method-type -> type
  shift token (then go to state 106)
Conflict at state: 140, token: IDENTIFIER
  reduce by rule: method-type -> type
  shift token (then go to state 70)
Conflict at state: 140, token: NEW
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: EXTERN
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: OVERRIDE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: VIRTUAL
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: VOLATILE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: READONLY
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: STATIC
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: SEALED
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: ABSTRACT
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: PRIVATE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: INTERNAL
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: PROTECTED
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: PARTIAL
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: PUBLIC
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: UNSAFE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 140, token: INTERR
  reduce by rule: method-type -> type
  shift token (then go to state 181)
Conflict at state: 145, token: OVERRIDE
  reduce by rule: class-method-declaration -> class-method-header method-prefixs
  shift token (then go to state 115)
Conflict at state: 145, token: CONST
  reduce by rule: class-method-declaration -> class-method-header method-prefixs
  shift token (then go to state 114)
Conflict at state: 151, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 419)
Conflict at state: 159, token: TILDE
  reduce by rule: modifier -> EXTERN
  shift token (then go to state 429)
Conflict at state: 160, token: CONST
  reduce by rule: type-with-interr -> type
  shift token (then go to state 53)
Conflict at state: 160, token: SBYTE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 73)
Conflict at state: 160, token: BYTE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 74)
Conflict at state: 160, token: SHORT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 75)
Conflict at state: 160, token: USHORT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 76)
Conflict at state: 160, token: INT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 77)
Conflict at state: 160, token: UINT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 78)
Conflict at state: 160, token: LONG
  reduce by rule: type-with-interr -> type
  shift token (then go to state 79)
Conflict at state: 160, token: ULONG
  reduce by rule: type-with-interr -> type
  shift token (then go to state 80)
Conflict at state: 160, token: CHAR
  reduce by rule: type-with-interr -> type
  shift token (then go to state 81)
Conflict at state: 160, token: FLOAT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 82)
Conflict at state: 160, token: DOUBLE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 83)
Conflict at state: 160, token: DECIMAL
  reduce by rule: type-with-interr -> type
  shift token (then go to state 84)
Conflict at state: 160, token: BOOL
  reduce by rule: type-with-interr -> type
  shift token (then go to state 85)
Conflict at state: 160, token: OBJECT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 86)
Conflict at state: 160, token: STRING
  reduce by rule: type-with-interr -> type
  shift token (then go to state 87)
Conflict at state: 160, token: VOID
  reduce by rule: type-with-interr -> type
  shift token (then go to state 88)
Conflict at state: 160, token: AUTO
  reduce by rule: type-with-interr -> type
  shift token (then go to state 89)
Conflict at state: 160, token: TILDE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 123)
Conflict at state: 160, token: ADD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 93)
Conflict at state: 160, token: REMOVE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 94)
Conflict at state: 160, token: SET
  reduce by rule: type-with-interr -> type
  shift token (then go to state 95)
Conflict at state: 160, token: PARAMS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 96)
Conflict at state: 160, token: DEFAULT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 97)
Conflict at state: 160, token: METHOD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 98)
Conflict at state: 160, token: PARAM
  reduce by rule: type-with-interr -> type
  shift token (then go to state 99)
Conflict at state: 160, token: ASSEMBLY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 100)
Conflict at state: 160, token: PROPERTY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 101)
Conflict at state: 160, token: MODULE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 102)
Conflict at state: 160, token: FIELD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 103)
Conflict at state: 160, token: TYPE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 104)
Conflict at state: 160, token: THIS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 105)
Conflict at state: 160, token: ASYNC
  reduce by rule: type-with-interr -> type
  shift token (then go to state 132)
Conflict at state: 160, token: WHERE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 106)
Conflict at state: 160, token: IDENTIFIER
  reduce by rule: type-with-interr -> type
  shift token (then go to state 70)
Conflict at state: 175, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 445)
Conflict at state: 180, token: OPEN_PARENS
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 447)
Conflict at state: 180, token: CONST
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 53)
Conflict at state: 180, token: SBYTE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 73)
Conflict at state: 180, token: BYTE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 74)
Conflict at state: 180, token: SHORT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 75)
Conflict at state: 180, token: USHORT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 76)
Conflict at state: 180, token: INT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 77)
Conflict at state: 180, token: UINT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 78)
Conflict at state: 180, token: LONG
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 79)
Conflict at state: 180, token: ULONG
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 80)
Conflict at state: 180, token: CHAR
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 81)
Conflict at state: 180, token: FLOAT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 82)
Conflict at state: 180, token: DOUBLE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 83)
Conflict at state: 180, token: DECIMAL
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 84)
Conflict at state: 180, token: BOOL
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 85)
Conflict at state: 180, token: OBJECT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 86)
Conflict at state: 180, token: STRING
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 87)
Conflict at state: 180, token: VOID
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 88)
Conflict at state: 180, token: AUTO
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 89)
Conflict at state: 180, token: TILDE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 123)
Conflict at state: 180, token: ADD
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 93)
Conflict at state: 180, token: REMOVE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 94)
Conflict at state: 180, token: SET
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 95)
Conflict at state: 180, token: PARAMS
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 96)
Conflict at state: 180, token: DEFAULT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 97)
Conflict at state: 180, token: METHOD
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 98)
Conflict at state: 180, token: PARAM
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 99)
Conflict at state: 180, token: ASSEMBLY
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 100)
Conflict at state: 180, token: PROPERTY
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 101)
Conflict at state: 180, token: MODULE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 102)
Conflict at state: 180, token: FIELD
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 103)
Conflict at state: 180, token: TYPE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 104)
Conflict at state: 180, token: THIS
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 105)
Conflict at state: 180, token: ASYNC
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 132)
Conflict at state: 180, token: WHERE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 106)
Conflict at state: 180, token: IDENTIFIER
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 70)
Conflict at state: 180, token: COMMA
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 127)
Conflict at state: 183, token: OPEN_BRACKET
  reduce by rule: array-type -> type rank-specifiers
  shift token (then go to state 186)
Conflict at state: 184, token: CONST
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 53)
Conflict at state: 184, token: SBYTE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 73)
Conflict at state: 184, token: BYTE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 74)
Conflict at state: 184, token: SHORT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 75)
Conflict at state: 184, token: USHORT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 76)
Conflict at state: 184, token: INT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 77)
Conflict at state: 184, token: UINT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 78)
Conflict at state: 184, token: LONG
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 79)
Conflict at state: 184, token: ULONG
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 80)
Conflict at state: 184, token: CHAR
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 81)
Conflict at state: 184, token: FLOAT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 82)
Conflict at state: 184, token: DOUBLE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 83)
Conflict at state: 184, token: DECIMAL
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 84)
Conflict at state: 184, token: BOOL
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 85)
Conflict at state: 184, token: OBJECT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 86)
Conflict at state: 184, token: STRING
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 87)
Conflict at state: 184, token: VOID
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 88)
Conflict at state: 184, token: AUTO
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 89)
Conflict at state: 184, token: TILDE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 123)
Conflict at state: 184, token: ADD
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 93)
Conflict at state: 184, token: REMOVE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 94)
Conflict at state: 184, token: SET
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 95)
Conflict at state: 184, token: PARAMS
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 96)
Conflict at state: 184, token: DEFAULT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 97)
Conflict at state: 184, token: METHOD
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 98)
Conflict at state: 184, token: PARAM
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 99)
Conflict at state: 184, token: ASSEMBLY
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 100)
Conflict at state: 184, token: PROPERTY
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 101)
Conflict at state: 184, token: MODULE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 102)
Conflict at state: 184, token: FIELD
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 103)
Conflict at state: 184, token: TYPE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 104)
Conflict at state: 184, token: THIS
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 105)
Conflict at state: 184, token: ASYNC
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 132)
Conflict at state: 184, token: WHERE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 106)
Conflict at state: 184, token: IDENTIFIER
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 70)
Conflict at state: 184, token: OPEN_BRACKET
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 186)
Conflict at state: 198, token: STAR
  reduce by rule: type -> non-array-type STARS
  shift token (then go to state 464)
Conflict at state: 201, token: STAR
  reduce by rule: type -> array-type STARS
  shift token (then go to state 464)
Conflict at state: 210, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 210, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 210, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 210, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 210, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 210, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 211, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 211, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 211, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 211, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 211, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 211, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 212, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 212, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 212, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 212, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 212, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 212, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 213, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 213, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 213, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 213, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 213, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 213, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 215, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 215, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 215, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 215, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 215, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 215, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 228, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 228, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 228, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 497)
Conflict at state: 228, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 228, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 228, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 228, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 228, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 228, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 228, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 228, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 228, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 228, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 228, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 228, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 228, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 228, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 228, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 228, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 56)
Conflict at state: 228, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 228, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 228, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 228, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 228, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 228, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 228, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 228, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 228, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 228, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 228, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 228, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 228, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 228, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 228, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 228, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 228, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 228, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 228, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 228, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 228, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 228, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 228, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 228, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 228, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 228, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 228, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 228, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 228, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 228, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 228, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 228, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 228, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 228, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 228, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 228, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 285)
Conflict at state: 228, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 228, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 228, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 228, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 228, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 228, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 228, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 228, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 228, token: IF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 289)
Conflict at state: 228, token: SWITCH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 290)
Conflict at state: 228, token: WHILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 291)
Conflict at state: 228, token: DO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 292)
Conflict at state: 228, token: FOR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 293)
Conflict at state: 228, token: FOREACH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 294)
Conflict at state: 228, token: YIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 295)
Conflict at state: 228, token: BREAK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 296)
Conflict at state: 228, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 297)
Conflict at state: 228, token: GOTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 298)
Conflict at state: 228, token: RETURN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 299)
Conflict at state: 228, token: THROW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 300)
Conflict at state: 228, token: TRY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 274)
Conflict at state: 228, token: LOCK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 228, token: USING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 278)
Conflict at state: 228, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 279)
Conflict at state: 228, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 228, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 58)
Conflict at state: 228, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 228, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 228, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 61)
Conflict at state: 228, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 228, token: SEALED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 228, token: STATIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 228, token: READONLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 228, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 228, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 228, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 228, token: EXTERN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 228, token: FIXED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 233, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: STRING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: TILDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OPEN_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: CLOSE_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: FIXED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: EXTERN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OVERRIDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: VIRTUAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: VOLATILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: READONLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: STATIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: SEALED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: ABSTRACT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: PRIVATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: INTERNAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: PROTECTED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: PARTIAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: PUBLIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: UNSAFE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: USING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: LOCK
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: TRY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: THROW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: RETURN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: GOTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: CONTINUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: BREAK
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: YIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: FOREACH
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: FOR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: DO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: WHILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: SWITCH
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: IF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: BANG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: UNCHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: CHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: SIZEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: TYPEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: NEW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: BASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: AUTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: VOID
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OBJECT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: BOOL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: DECIMAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: DOUBLE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: FLOAT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: CHAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: ULONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: LONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: UINT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: INT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: USHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: SHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: BYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: SBYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: CONST
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: STACKALLOC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: DELEGATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: AWAIT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: NULL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: CHARACTER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: STRING_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: INTEGER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: REAL_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: FALSE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: TRUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: TEMPLATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 233, token: CASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 234, token: SEMICOLON
  reduce by rule: declaration-statement -> local-variable-declaration
  shift token (then go to state 501)
Conflict at state: 234, token: OPEN_BRACE
  reduce by rule: declaration-statement -> local-variable-declaration
  shift token (then go to state 113)
Conflict at state: 235, token: SEMICOLON
  reduce by rule: declaration-statement -> local-constant-declaration
  shift token (then go to state 503)
Conflict at state: 235, token: OPEN_BRACE
  reduce by rule: declaration-statement -> local-constant-declaration
  shift token (then go to state 113)
Conflict at state: 249, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 249, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 249, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 249, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 249, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 249, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 249, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 249, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 249, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 249, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 249, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 249, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 249, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 249, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 249, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 249, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 249, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 249, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 249, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 249, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 249, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 249, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 249, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 249, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 249, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 249, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 249, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 249, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 249, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 249, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 249, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 249, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 249, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 249, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 249, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 249, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 249, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 249, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 249, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 249, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 249, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 249, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 249, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 249, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 249, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 249, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 249, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 249, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 249, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 249, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 249, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 249, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 249, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 249, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 249, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 249, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 249, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 249, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 249, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 249, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 250, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 509)
Conflict at state: 251, token: COLON
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_DBLPTR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: CLOSE_BRACE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OPEN_BRACE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: SEMICOLON
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: COMMA
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: ASSIGN
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: INTERR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: AMP
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: STAR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: TILDE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: ADD
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: REMOVE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: SET
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: PARAMS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: DEFAULT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: METHOD
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: PARAM
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: ASSEMBLY
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: PROPERTY
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: MODULE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: FIELD
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: TYPE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: THIS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: ASYNC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: WHERE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: STRING
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: IDENTIFIER
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: DOT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: DOUBLE_COLON
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: TEMPLATE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_INC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_DEC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OPEN_PARENS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_XOR_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_OR_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_AND_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_MOD_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_DIV_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_MULT_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_SUB_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_ADD_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_PTR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: TRUE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: FALSE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: REAL_LITERAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: INTEGER_LITERAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: STRING_LITERAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: CHARACTER_LITERAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: NULL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: AWAIT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: DELEGATE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: STACKALLOC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: CONST
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: SBYTE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: BYTE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: SHORT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: USHORT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: INT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: UINT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: LONG
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: ULONG
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: CHAR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: FLOAT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: DOUBLE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: DECIMAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: BOOL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OBJECT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: VOID
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: AUTO
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: BASE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: NEW
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: TYPEOF
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: SIZEOF
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: CHECKED
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: UNCHECKED
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: PLUS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_COALESCING
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: MINUS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: BANG
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: IF
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: SWITCH
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: WHILE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: DO
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: FOR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: FOREACH
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: YIELD
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: BREAK
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: CONTINUE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: GOTO
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: RETURN
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: THROW
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: TRY
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: LOCK
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: USING
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: UNSAFE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: PUBLIC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: PARTIAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: PROTECTED
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: INTERNAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: PRIVATE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: ABSTRACT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: SEALED
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: STATIC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: READONLY
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: VOLATILE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: VIRTUAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OVERRIDE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: EXTERN
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: FIXED
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OPEN_BRACKET
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: DIV
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: PERCENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_LEFT_SHIFT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: RIGHT_SHIFT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_EQ
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_NE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: CARET
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_AND
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_OR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: BITWISE_OR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: AS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: IS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_GE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: OP_LE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: GT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: LT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: CLOSE_PARENS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: CLOSE_BRACKET
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: STRUCT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: INTERFACE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: ENUM
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: CASE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: EOF
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: CLASS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 251, token: UNION
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 252, token: INTERR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 518)
Conflict at state: 252, token: OP_PTR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 515)
Conflict at state: 252, token: AMP
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 520)
Conflict at state: 252, token: STAR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 199)
Conflict at state: 252, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 123)
Conflict at state: 252, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 70)
Conflict at state: 252, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 93)
Conflict at state: 252, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 94)
Conflict at state: 252, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 95)
Conflict at state: 252, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 96)
Conflict at state: 252, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 97)
Conflict at state: 252, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 98)
Conflict at state: 252, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 99)
Conflict at state: 252, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 100)
Conflict at state: 252, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 101)
Conflict at state: 252, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 102)
Conflict at state: 252, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 103)
Conflict at state: 252, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 104)
Conflict at state: 252, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 105)
Conflict at state: 252, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 132)
Conflict at state: 252, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 106)
Conflict at state: 252, token: STRING
  reduce by rule: local-variable -> 
  shift token (then go to state 177)
Conflict at state: 252, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 518)
Conflict at state: 252, token: AMP
  reduce by rule: local-variable -> 
  shift token (then go to state 520)
Conflict at state: 252, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 199)
Conflict at state: 252, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 513)
Conflict at state: 252, token: DOT
  reduce by rule: local-variable -> 
  shift token (then go to state 514)
Conflict at state: 252, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 515)
Conflict at state: 252, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 511)
Conflict at state: 252, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 512)
Conflict at state: 252, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: PLUS
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: OP_COALESCING
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: MINUS
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 252, token: CLOSE_PARENS
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 253, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 123)
Conflict at state: 253, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 70)
Conflict at state: 253, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 93)
Conflict at state: 253, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 94)
Conflict at state: 253, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 95)
Conflict at state: 253, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 96)
Conflict at state: 253, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 97)
Conflict at state: 253, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 98)
Conflict at state: 253, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 99)
Conflict at state: 253, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 100)
Conflict at state: 253, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 101)
Conflict at state: 253, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 102)
Conflict at state: 253, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 103)
Conflict at state: 253, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 104)
Conflict at state: 253, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 105)
Conflict at state: 253, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 132)
Conflict at state: 253, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 106)
Conflict at state: 253, token: STRING
  reduce by rule: local-variable -> 
  shift token (then go to state 177)
Conflict at state: 253, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 518)
Conflict at state: 253, token: AMP
  reduce by rule: local-variable -> 
  shift token (then go to state 520)
Conflict at state: 253, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 199)
Conflict at state: 253, token: DOT
  reduce by rule: local-variable -> 
  shift token (then go to state 523)
Conflict at state: 253, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 524)
Conflict at state: 253, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 186)
Conflict at state: 254, token: TILDE
  reduce by rule: type -> CONST
  shift token (then go to state 123)
Conflict at state: 254, token: ADD
  reduce by rule: type -> CONST
  shift token (then go to state 93)
Conflict at state: 254, token: REMOVE
  reduce by rule: type -> CONST
  shift token (then go to state 94)
Conflict at state: 254, token: SET
  reduce by rule: type -> CONST
  shift token (then go to state 95)
Conflict at state: 254, token: PARAMS
  reduce by rule: type -> CONST
  shift token (then go to state 96)
Conflict at state: 254, token: DEFAULT
  reduce by rule: type -> CONST
  shift token (then go to state 97)
Conflict at state: 254, token: METHOD
  reduce by rule: type -> CONST
  shift token (then go to state 98)
Conflict at state: 254, token: PARAM
  reduce by rule: type -> CONST
  shift token (then go to state 99)
Conflict at state: 254, token: ASSEMBLY
  reduce by rule: type -> CONST
  shift token (then go to state 100)
Conflict at state: 254, token: PROPERTY
  reduce by rule: type -> CONST
  shift token (then go to state 101)
Conflict at state: 254, token: MODULE
  reduce by rule: type -> CONST
  shift token (then go to state 102)
Conflict at state: 254, token: FIELD
  reduce by rule: type -> CONST
  shift token (then go to state 103)
Conflict at state: 254, token: TYPE
  reduce by rule: type -> CONST
  shift token (then go to state 104)
Conflict at state: 254, token: THIS
  reduce by rule: type -> CONST
  shift token (then go to state 105)
Conflict at state: 254, token: ASYNC
  reduce by rule: type -> CONST
  shift token (then go to state 132)
Conflict at state: 254, token: WHERE
  reduce by rule: type -> CONST
  shift token (then go to state 106)
Conflict at state: 254, token: STRING
  reduce by rule: type -> CONST
  shift token (then go to state 87)
Conflict at state: 254, token: IDENTIFIER
  reduce by rule: type -> CONST
  shift token (then go to state 70)
Conflict at state: 254, token: CONST
  reduce by rule: type -> CONST
  shift token (then go to state 53)
Conflict at state: 254, token: SBYTE
  reduce by rule: type -> CONST
  shift token (then go to state 73)
Conflict at state: 254, token: BYTE
  reduce by rule: type -> CONST
  shift token (then go to state 74)
Conflict at state: 254, token: SHORT
  reduce by rule: type -> CONST
  shift token (then go to state 75)
Conflict at state: 254, token: USHORT
  reduce by rule: type -> CONST
  shift token (then go to state 76)
Conflict at state: 254, token: INT
  reduce by rule: type -> CONST
  shift token (then go to state 77)
Conflict at state: 254, token: UINT
  reduce by rule: type -> CONST
  shift token (then go to state 78)
Conflict at state: 254, token: LONG
  reduce by rule: type -> CONST
  shift token (then go to state 79)
Conflict at state: 254, token: ULONG
  reduce by rule: type -> CONST
  shift token (then go to state 80)
Conflict at state: 254, token: CHAR
  reduce by rule: type -> CONST
  shift token (then go to state 81)
Conflict at state: 254, token: FLOAT
  reduce by rule: type -> CONST
  shift token (then go to state 82)
Conflict at state: 254, token: DOUBLE
  reduce by rule: type -> CONST
  shift token (then go to state 83)
Conflict at state: 254, token: DECIMAL
  reduce by rule: type -> CONST
  shift token (then go to state 84)
Conflict at state: 254, token: BOOL
  reduce by rule: type -> CONST
  shift token (then go to state 85)
Conflict at state: 254, token: OBJECT
  reduce by rule: type -> CONST
  shift token (then go to state 86)
Conflict at state: 254, token: VOID
  reduce by rule: type -> CONST
  shift token (then go to state 88)
Conflict at state: 254, token: AUTO
  reduce by rule: type -> CONST
  shift token (then go to state 89)
Conflict at state: 256, token: OP_PTR
  reduce by rule: statement-expression -> invocation-expressions
  shift token (then go to state 527)
Conflict at state: 256, token: DOT
  reduce by rule: statement-expression -> invocation-expressions
  shift token (then go to state 526)
Conflict at state: 256, token: OPEN_BRACE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: STRING
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: THIS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: SET
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: ADD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: TILDE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: STAR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: AMP
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: CLOSE_BRACE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: FIXED
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: EXTERN
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OVERRIDE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: VIRTUAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: VOLATILE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: READONLY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: STATIC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: SEALED
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: ABSTRACT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: PRIVATE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: INTERNAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: PROTECTED
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: PARTIAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: PUBLIC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: UNSAFE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: USING
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: LOCK
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: TRY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: THROW
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: RETURN
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: GOTO
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: CONTINUE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: BREAK
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: YIELD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: FOREACH
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: FOR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: DO
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: WHILE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: SWITCH
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: IF
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: BANG
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 527)
Conflict at state: 256, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: UNCHECKED
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: CHECKED
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: SIZEOF
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: TYPEOF
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: NEW
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: BASE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: AUTO
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: VOID
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OBJECT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: BOOL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: DECIMAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: DOUBLE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: FLOAT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: CHAR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: ULONG
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: LONG
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: UINT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: INT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: USHORT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: SHORT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: BYTE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: SBYTE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: CONST
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: STACKALLOC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: DELEGATE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: AWAIT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 526)
Conflict at state: 256, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: NULL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: CHARACTER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: STRING_LITERAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: INTEGER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: REAL_LITERAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: FALSE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: TRUE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: CASE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 256, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 257, token: OPEN_BRACE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: STRING
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: THIS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: SET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: ADD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: TILDE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: STAR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: AMP
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: CLOSE_BRACE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: FIXED
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: EXTERN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OVERRIDE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: VIRTUAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: VOLATILE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: READONLY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: STATIC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: SEALED
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: ABSTRACT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: PRIVATE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: INTERNAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: PROTECTED
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: PARTIAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: PUBLIC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: UNSAFE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: USING
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: LOCK
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: TRY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: THROW
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: RETURN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: GOTO
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: CONTINUE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: BREAK
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: YIELD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: FOREACH
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: FOR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: DO
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: WHILE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: SWITCH
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: IF
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: BANG
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: UNCHECKED
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: CHECKED
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: SIZEOF
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: TYPEOF
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: NEW
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: BASE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: AUTO
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: VOID
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OBJECT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: BOOL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: DECIMAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: DOUBLE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: FLOAT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: CHAR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: ULONG
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: LONG
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: UINT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: INT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: USHORT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: SHORT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: BYTE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: SBYTE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: CONST
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: STACKALLOC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: DELEGATE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: AWAIT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: DOT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: NULL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: CHARACTER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: STRING_LITERAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: INTEGER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: REAL_LITERAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: FALSE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: TRUE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: CASE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 257, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 259, token: OPEN_BRACE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: STRING
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: THIS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: SET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: ADD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: TILDE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: STAR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: AMP
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: CLOSE_BRACE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: FIXED
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: EXTERN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OVERRIDE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: VIRTUAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: VOLATILE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: READONLY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: STATIC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: SEALED
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: ABSTRACT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: PRIVATE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: INTERNAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: PROTECTED
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: PARTIAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: PUBLIC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: UNSAFE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: USING
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: LOCK
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: TRY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: THROW
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: RETURN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: GOTO
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: CONTINUE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: BREAK
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: YIELD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: FOREACH
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: FOR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: DO
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: WHILE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: SWITCH
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: IF
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: BANG
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: UNCHECKED
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: CHECKED
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: SIZEOF
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: TYPEOF
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: NEW
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: BASE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: AUTO
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: VOID
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OBJECT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: BOOL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: DECIMAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: DOUBLE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: FLOAT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: CHAR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: ULONG
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: LONG
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: UINT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: INT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: USHORT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: SHORT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: BYTE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: SBYTE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: CONST
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: STACKALLOC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: DELEGATE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: AWAIT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: NULL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: CHARACTER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: STRING_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: INTEGER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: REAL_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: FALSE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: TRUE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: CASE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 259, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 260, token: OPEN_BRACE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: STRING
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: THIS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: SET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: ADD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: TILDE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: STAR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: AMP
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: CLOSE_BRACE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: FIXED
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: EXTERN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OVERRIDE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: VIRTUAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: VOLATILE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: READONLY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: STATIC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: SEALED
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: ABSTRACT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: PRIVATE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: INTERNAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: PROTECTED
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: PARTIAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: PUBLIC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: UNSAFE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: USING
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: LOCK
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: TRY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: THROW
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: RETURN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: GOTO
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: CONTINUE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: BREAK
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: YIELD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: FOREACH
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: FOR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: DO
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: WHILE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: SWITCH
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: IF
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: BANG
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: UNCHECKED
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: CHECKED
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: SIZEOF
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: TYPEOF
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: NEW
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: BASE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: AUTO
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: VOID
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OBJECT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: BOOL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: DECIMAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: DOUBLE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: FLOAT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: CHAR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: ULONG
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: LONG
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: UINT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: INT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: USHORT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: SHORT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: BYTE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: SBYTE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: CONST
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: STACKALLOC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: DELEGATE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: AWAIT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: NULL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: CHARACTER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: STRING_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: INTEGER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: REAL_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: FALSE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: TRUE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: CASE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 260, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 261, token: OPEN_BRACE
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: SEMICOLON
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: ASSIGN
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: COMMA
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 261, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 262, token: OPEN_BRACE
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: SEMICOLON
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: ASSIGN
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: COMMA
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 262, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 282, token: OPEN_BRACKET
  reduce by rule: primary-expression -> primary-no-array-creation-expression
  shift token (then go to state 538)
Conflict at state: 285, token: ASYNC
  reduce by rule: modifier -> NEW
  shift token (then go to state 132)
Conflict at state: 287, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 287, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 287, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 287, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 287, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 287, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 287, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 287, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 287, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 287, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 287, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 287, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 287, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 287, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 287, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 287, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 287, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 287, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 287, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 287, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 287, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 287, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 287, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 287, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 287, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 287, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 287, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 287, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 287, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 287, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 287, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 287, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 287, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 287, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 287, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 287, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 287, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 287, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 287, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 287, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 287, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 287, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 287, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 287, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 287, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 287, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 287, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 287, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 287, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 287, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 287, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 287, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 287, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 287, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 287, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 287, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 287, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 287, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 287, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 287, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 288, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 288, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 288, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 288, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 288, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 288, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 288, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 288, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 288, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 288, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 288, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 288, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 288, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 288, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 288, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 288, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 288, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 288, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 288, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 288, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 288, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 288, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 288, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 288, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 288, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 288, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 288, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 288, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 288, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 288, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 288, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 288, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 288, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 288, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 288, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 288, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 288, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 288, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 288, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 288, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 288, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 288, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 288, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 288, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 288, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 288, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 288, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 288, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 288, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 288, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 288, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 288, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 288, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 288, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 288, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 288, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 288, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 288, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 288, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 288, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 292, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 292, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 292, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 292, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 292, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 292, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 299, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 299, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 299, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 299, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 299, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 574)
Conflict at state: 299, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 299, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 299, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 299, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 300, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 300, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 300, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 300, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 300, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 576)
Conflict at state: 300, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 300, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 300, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 300, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 319, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 320, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 320, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 320, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 320, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 320, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 320, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 320, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 320, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 320, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 320, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 320, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 320, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 320, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 320, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 320, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 320, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 320, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 320, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 320, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 320, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 320, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 320, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 320, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 320, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 320, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 320, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 320, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 320, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 320, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 320, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 320, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 320, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 320, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 320, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 320, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 320, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 320, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 320, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 320, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 320, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 320, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 320, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 320, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 320, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 320, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 320, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 320, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 320, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 320, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 320, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 320, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 320, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 320, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 320, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 320, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 320, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 320, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 320, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 320, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 320, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 321, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 321, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 321, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 321, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 321, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 321, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 321, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 321, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 321, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 321, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 321, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 321, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 321, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 321, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 321, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 321, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 321, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 321, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 321, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 321, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 321, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 321, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 321, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 321, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 321, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 321, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 321, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 321, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 321, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 321, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 321, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 321, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 321, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 321, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 321, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 321, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 321, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 321, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 321, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 321, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 321, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 321, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 321, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 321, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 321, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 321, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 321, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 321, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 321, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 321, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 321, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 321, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 321, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 321, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 321, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 321, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 321, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 321, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 321, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 321, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 322, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 322, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 322, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 322, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 322, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 322, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 322, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 322, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 322, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 322, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 322, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 322, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 322, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 322, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 322, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 322, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 322, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 322, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 322, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 322, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 322, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 322, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 322, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 322, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 322, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 322, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 322, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 322, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 322, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 322, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 322, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 322, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 322, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 322, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 322, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 322, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 322, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 322, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 322, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 322, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 322, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 322, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 322, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 322, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 322, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 322, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 322, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 322, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 322, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 322, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 322, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 322, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 322, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 322, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 322, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 322, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 322, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 322, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 322, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 322, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 323, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 323, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 323, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 323, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 323, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 323, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 323, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 323, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 323, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 323, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 323, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 323, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 323, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 323, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 323, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 323, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 323, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 323, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 323, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 323, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 323, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 323, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 323, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 323, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 323, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 323, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 323, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 323, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 323, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 323, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 323, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 323, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 323, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 323, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 323, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 323, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 323, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 323, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 323, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 323, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 323, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 323, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 323, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 323, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 323, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 323, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 323, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 323, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 323, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 323, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 323, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 323, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 323, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 323, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 323, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 323, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 323, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 323, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 323, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 323, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 324, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 324, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 324, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 324, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 324, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 324, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 324, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 324, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 324, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 324, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 324, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 324, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 324, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 324, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 324, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 324, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 324, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 324, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 324, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 324, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 324, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 324, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 324, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 324, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 324, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 324, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 324, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 324, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 324, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 324, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 324, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 324, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 324, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 324, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 324, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 324, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 324, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 324, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 324, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 324, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 324, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 324, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 324, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 324, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 324, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 324, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 324, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 324, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 324, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 324, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 324, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 324, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 324, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 324, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 324, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 324, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 324, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 324, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 324, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 324, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 325, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 325, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 325, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 325, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 325, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 325, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 325, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 325, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 325, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 325, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 325, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 325, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 325, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 325, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 325, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 325, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 325, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 325, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 325, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 325, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 325, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 325, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 325, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 325, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 325, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 325, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 325, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 325, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 325, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 325, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 325, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 325, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 325, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 325, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 325, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 325, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 325, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 325, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 325, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 325, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 325, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 325, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 325, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 325, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 325, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 325, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 325, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 325, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 325, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 325, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 325, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 325, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 325, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 325, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 325, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 325, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 325, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 325, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 325, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 325, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 332, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 332, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 332, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 332, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 332, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 332, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 332, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 332, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 332, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 332, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 332, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 332, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 332, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 332, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 332, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 332, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 332, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 332, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 332, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 332, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 332, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 332, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 332, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 332, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 332, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 332, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 332, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 332, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 332, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 332, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 332, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 332, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 332, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 332, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 332, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 332, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 332, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 332, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 332, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 332, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 332, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 332, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 332, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 332, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 332, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 332, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 332, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 332, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 332, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 332, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 332, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 332, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 332, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 332, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 332, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 332, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 332, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 332, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 332, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 332, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 343, token: CONST
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 53)
Conflict at state: 343, token: SBYTE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 73)
Conflict at state: 343, token: BYTE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 74)
Conflict at state: 343, token: SHORT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 75)
Conflict at state: 343, token: USHORT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 76)
Conflict at state: 343, token: INT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 77)
Conflict at state: 343, token: UINT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 78)
Conflict at state: 343, token: LONG
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 79)
Conflict at state: 343, token: ULONG
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 80)
Conflict at state: 343, token: CHAR
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 81)
Conflict at state: 343, token: FLOAT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 82)
Conflict at state: 343, token: DOUBLE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 83)
Conflict at state: 343, token: DECIMAL
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 84)
Conflict at state: 343, token: BOOL
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 85)
Conflict at state: 343, token: OBJECT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 86)
Conflict at state: 343, token: STRING
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 87)
Conflict at state: 343, token: VOID
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 88)
Conflict at state: 343, token: AUTO
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 89)
Conflict at state: 343, token: TILDE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 123)
Conflict at state: 343, token: ADD
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 93)
Conflict at state: 343, token: REMOVE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 94)
Conflict at state: 343, token: SET
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 95)
Conflict at state: 343, token: PARAMS
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 96)
Conflict at state: 343, token: DEFAULT
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 97)
Conflict at state: 343, token: METHOD
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 98)
Conflict at state: 343, token: PARAM
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 99)
Conflict at state: 343, token: ASSEMBLY
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 100)
Conflict at state: 343, token: PROPERTY
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 101)
Conflict at state: 343, token: MODULE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 102)
Conflict at state: 343, token: FIELD
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 103)
Conflict at state: 343, token: TYPE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 104)
Conflict at state: 343, token: THIS
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 105)
Conflict at state: 343, token: ASYNC
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 132)
Conflict at state: 343, token: WHERE
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 106)
Conflict at state: 343, token: IDENTIFIER
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 70)
Conflict at state: 343, token: COMMA
  reduce by rule: member-name-with-double-colon -> type member-name-with-double-colon
  shift token (then go to state 127)
Conflict at state: 345, token: CONST
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: OVERRIDE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: OPEN_BRACE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: SEMICOLON
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: EOF
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: CLASS
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: STRUCT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: UNION
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: INTERR
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: UNSAFE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: ASYNC
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: PUBLIC
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: PARTIAL
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: PROTECTED
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: INTERNAL
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: PRIVATE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: ABSTRACT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: SEALED
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: STATIC
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: READONLY
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: VOLATILE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: VIRTUAL
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: EXTERN
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: NEW
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: SBYTE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: BYTE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: SHORT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: USHORT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: INT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: UINT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: LONG
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: ULONG
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: CHAR
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: FLOAT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: DOUBLE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: DECIMAL
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: BOOL
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: OBJECT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: STRING
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: VOID
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: AUTO
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: TILDE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: ADD
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: REMOVE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: SET
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: PARAMS
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: DEFAULT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: METHOD
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: PARAM
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: ASSEMBLY
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: PROPERTY
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: MODULE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: FIELD
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: TYPE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: THIS
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: WHERE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: OPEN_BRACKET
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: IDENTIFIER
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: INTERFACE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: ENUM
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: DELEGATE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 345, token: USING
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
Conflict at state: 349, token: STRING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 87)
Conflict at state: 349, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 106)
Conflict at state: 349, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 132)
Conflict at state: 349, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 105)
Conflict at state: 349, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 104)
Conflict at state: 349, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 103)
Conflict at state: 349, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 102)
Conflict at state: 349, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 101)
Conflict at state: 349, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 100)
Conflict at state: 349, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 99)
Conflict at state: 349, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 98)
Conflict at state: 349, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 97)
Conflict at state: 349, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 96)
Conflict at state: 349, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 95)
Conflict at state: 349, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 94)
Conflict at state: 349, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 93)
Conflict at state: 349, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 70)
Conflict at state: 349, token: TILDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 123)
Conflict at state: 351, token: STRING
  reduce by rule: type -> CONST
  shift token (then go to state 87)
Conflict at state: 351, token: WHERE
  reduce by rule: type -> CONST
  shift token (then go to state 106)
Conflict at state: 351, token: ASYNC
  reduce by rule: type -> CONST
  shift token (then go to state 132)
Conflict at state: 351, token: THIS
  reduce by rule: type -> CONST
  shift token (then go to state 105)
Conflict at state: 351, token: TYPE
  reduce by rule: type -> CONST
  shift token (then go to state 104)
Conflict at state: 351, token: FIELD
  reduce by rule: type -> CONST
  shift token (then go to state 103)
Conflict at state: 351, token: MODULE
  reduce by rule: type -> CONST
  shift token (then go to state 102)
Conflict at state: 351, token: PROPERTY
  reduce by rule: type -> CONST
  shift token (then go to state 101)
Conflict at state: 351, token: ASSEMBLY
  reduce by rule: type -> CONST
  shift token (then go to state 100)
Conflict at state: 351, token: PARAM
  reduce by rule: type -> CONST
  shift token (then go to state 99)
Conflict at state: 351, token: METHOD
  reduce by rule: type -> CONST
  shift token (then go to state 98)
Conflict at state: 351, token: DEFAULT
  reduce by rule: type -> CONST
  shift token (then go to state 97)
Conflict at state: 351, token: PARAMS
  reduce by rule: type -> CONST
  shift token (then go to state 96)
Conflict at state: 351, token: SET
  reduce by rule: type -> CONST
  shift token (then go to state 95)
Conflict at state: 351, token: REMOVE
  reduce by rule: type -> CONST
  shift token (then go to state 94)
Conflict at state: 351, token: ADD
  reduce by rule: type -> CONST
  shift token (then go to state 93)
Conflict at state: 351, token: IDENTIFIER
  reduce by rule: type -> CONST
  shift token (then go to state 70)
Conflict at state: 351, token: TILDE
  reduce by rule: type -> CONST
  shift token (then go to state 123)
Conflict at state: 353, token: STRING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 87)
Conflict at state: 353, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 106)
Conflict at state: 353, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 132)
Conflict at state: 353, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 105)
Conflict at state: 353, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 104)
Conflict at state: 353, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 103)
Conflict at state: 353, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 102)
Conflict at state: 353, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 101)
Conflict at state: 353, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 100)
Conflict at state: 353, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 99)
Conflict at state: 353, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 98)
Conflict at state: 353, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 97)
Conflict at state: 353, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 96)
Conflict at state: 353, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 95)
Conflict at state: 353, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 94)
Conflict at state: 353, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 93)
Conflict at state: 353, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 70)
Conflict at state: 353, token: TILDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 123)
Conflict at state: 360, token: SEMICOLON
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: COMMA
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: CLOSE_BRACE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: OPEN_PARENS
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: CONST
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: SBYTE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: BYTE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: SHORT
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: USHORT
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: INT
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: UINT
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: LONG
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: ULONG
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: CHAR
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: FLOAT
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: DOUBLE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: DECIMAL
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: BOOL
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: OBJECT
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: STRING
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: VOID
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: AUTO
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: TILDE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: ADD
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: REMOVE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: SET
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: PARAMS
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: DEFAULT
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: METHOD
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: PARAM
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: ASSEMBLY
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: PROPERTY
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: MODULE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: FIELD
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: TYPE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: THIS
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: ASYNC
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: WHERE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: IDENTIFIER
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: DOUBLE_COLON
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: OPEN_BRACKET
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: OPEN_BRACE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: ASSIGN
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: USING
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: DELEGATE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: ENUM
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: INTERFACE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: STRUCT
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: INTERR
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: NEW
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: EXTERN
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: OVERRIDE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: VIRTUAL
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: VOLATILE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: READONLY
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: STATIC
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: SEALED
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: ABSTRACT
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: PRIVATE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: INTERNAL
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: PROTECTED
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: PARTIAL
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: PUBLIC
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: UNSAFE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: UNION
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: CLASS
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 360, token: EOF
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 361, token: SEMICOLON
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: COMMA
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: CLOSE_BRACE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: OPEN_PARENS
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: CONST
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: SBYTE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: BYTE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: SHORT
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: USHORT
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: INT
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: UINT
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: LONG
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: ULONG
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: CHAR
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: FLOAT
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: DOUBLE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: DECIMAL
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: BOOL
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: OBJECT
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: STRING
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: VOID
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: AUTO
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: TILDE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: ADD
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: REMOVE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: SET
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: PARAMS
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: DEFAULT
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: METHOD
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: PARAM
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: ASSEMBLY
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: PROPERTY
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: MODULE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: FIELD
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: TYPE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: THIS
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: ASYNC
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: WHERE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: IDENTIFIER
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: DOUBLE_COLON
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: OPEN_BRACKET
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: OPEN_BRACE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: ASSIGN
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: USING
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: DELEGATE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: ENUM
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: INTERFACE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: STRUCT
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: INTERR
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: NEW
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: EXTERN
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: OVERRIDE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: VIRTUAL
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: VOLATILE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: READONLY
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: STATIC
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: SEALED
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: ABSTRACT
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: PRIVATE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: INTERNAL
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: PROTECTED
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: PARTIAL
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: PUBLIC
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: UNSAFE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: UNION
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: CLASS
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 361, token: EOF
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 364, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 364, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 364, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 364, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 364, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 618)
Conflict at state: 364, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 364, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 364, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 364, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 365, token: INTERR
  reduce by rule: conditional-expression -> conditional-or-expression
  shift token (then go to state 621)
Conflict at state: 365, token: OP_OR
  reduce by rule: conditional-expression -> conditional-or-expression
  shift token (then go to state 622)
Conflict at state: 366, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 557)
Conflict at state: 366, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 556)
Conflict at state: 366, token: OP_XOR_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 555)
Conflict at state: 366, token: OP_OR_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 554)
Conflict at state: 366, token: OP_AND_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 553)
Conflict at state: 366, token: OP_MOD_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 552)
Conflict at state: 366, token: OP_DIV_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 551)
Conflict at state: 366, token: OP_MULT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 550)
Conflict at state: 366, token: OP_SUB_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 549)
Conflict at state: 366, token: OP_ADD_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 548)
Conflict at state: 366, token: ASSIGN
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 547)
Conflict at state: 367, token: OP_AND
  reduce by rule: conditional-or-expression -> conditional-and-expression
  shift token (then go to state 623)
Conflict at state: 370, token: OP_PTR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 515)
Conflict at state: 370, token: OP_DEC
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 512)
Conflict at state: 370, token: OP_INC
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 511)
Conflict at state: 370, token: DOT
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 514)
Conflict at state: 370, token: OPEN_PARENS
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 513)
Conflict at state: 371, token: BITWISE_OR
  reduce by rule: conditional-and-expression -> inclusive-or-expression
  shift token (then go to state 624)
Conflict at state: 372, token: CARET
  reduce by rule: inclusive-or-expression -> exclusive-or-expression
  shift token (then go to state 625)
Conflict at state: 373, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 527)
Conflict at state: 373, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 526)
Conflict at state: 377, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: LT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: GT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_LE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_GE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: IS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: AS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: BITWISE_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_AND
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: CARET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_NE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_EQ
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: RIGHT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OP_LEFT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: PERCENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: DIV
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: TEMPLATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OPEN_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: CLOSE_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: CLOSE_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: CLOSE_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: TILDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: STRING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: TRUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: FALSE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: REAL_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: INTEGER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: STRING_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: CHARACTER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: NULL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: AWAIT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: DELEGATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: STACKALLOC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: CONST
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: SBYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: BYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: SHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: USHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: INT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: UINT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: LONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: ULONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: CHAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: FLOAT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: DOUBLE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: DECIMAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: BOOL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OBJECT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: VOID
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: AUTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: BASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: NEW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: TYPEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: SIZEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: CHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: UNCHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: BANG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: IF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: SWITCH
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: WHILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: DO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: FOR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: FOREACH
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: YIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: BREAK
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: CONTINUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: GOTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: RETURN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: THROW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: TRY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: LOCK
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: USING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: UNSAFE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: PUBLIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: PARTIAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: PROTECTED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: INTERNAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: PRIVATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: ABSTRACT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: SEALED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: STATIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: READONLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: VOLATILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: VIRTUAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: OVERRIDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: EXTERN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: FIXED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: STRUCT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: INTERFACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: ENUM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: CASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: EOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: CLASS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 377, token: UNION
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 378, token: AMP
  reduce by rule: exclusive-or-expression -> and-expression
  shift token (then go to state 626)
Conflict at state: 383, token: OP_EQ
  reduce by rule: and-expression -> equality-expression
  shift token (then go to state 627)
Conflict at state: 383, token: OP_NE
  reduce by rule: and-expression -> equality-expression
  shift token (then go to state 628)
Conflict at state: 384, token: OP_COALESCING
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 633)
Conflict at state: 384, token: AS
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 635)
Conflict at state: 384, token: IS
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 634)
Conflict at state: 384, token: OP_GE
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 632)
Conflict at state: 384, token: OP_LE
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 631)
Conflict at state: 384, token: GT
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 630)
Conflict at state: 384, token: LT
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 629)
Conflict at state: 385, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> shift-expression
  shift token (then go to state 636)
Conflict at state: 385, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> shift-expression
  shift token (then go to state 637)
Conflict at state: 386, token: OP_COALESCING
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 640)
Conflict at state: 386, token: OP_PTR
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 639)
Conflict at state: 386, token: MINUS
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 641)
Conflict at state: 386, token: PLUS
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 638)
Conflict at state: 387, token: STAR
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 642)
Conflict at state: 387, token: DIV
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 643)
Conflict at state: 387, token: PERCENT
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 644)
Conflict at state: 389, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 389, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 389, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 389, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 389, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 389, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 389, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 389, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 389, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 389, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 389, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 389, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 389, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 389, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 389, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 389, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 389, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 389, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 389, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 389, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 389, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 389, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 389, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 389, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 389, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 389, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 389, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 389, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 389, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 389, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 389, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 389, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 389, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 389, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 389, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 389, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 389, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 389, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 389, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 389, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 364)
Conflict at state: 389, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 389, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 389, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 389, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 389, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 389, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 390, token: COMMA
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 127)
Conflict at state: 398, token: CONST
  reduce by rule: type-with-interr -> type
  shift token (then go to state 53)
Conflict at state: 398, token: SBYTE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 73)
Conflict at state: 398, token: BYTE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 74)
Conflict at state: 398, token: SHORT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 75)
Conflict at state: 398, token: USHORT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 76)
Conflict at state: 398, token: INT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 77)
Conflict at state: 398, token: UINT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 78)
Conflict at state: 398, token: LONG
  reduce by rule: type-with-interr -> type
  shift token (then go to state 79)
Conflict at state: 398, token: ULONG
  reduce by rule: type-with-interr -> type
  shift token (then go to state 80)
Conflict at state: 398, token: CHAR
  reduce by rule: type-with-interr -> type
  shift token (then go to state 81)
Conflict at state: 398, token: FLOAT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 82)
Conflict at state: 398, token: DOUBLE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 83)
Conflict at state: 398, token: DECIMAL
  reduce by rule: type-with-interr -> type
  shift token (then go to state 84)
Conflict at state: 398, token: BOOL
  reduce by rule: type-with-interr -> type
  shift token (then go to state 85)
Conflict at state: 398, token: OBJECT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 86)
Conflict at state: 398, token: STRING
  reduce by rule: type-with-interr -> type
  shift token (then go to state 87)
Conflict at state: 398, token: VOID
  reduce by rule: type-with-interr -> type
  shift token (then go to state 88)
Conflict at state: 398, token: AUTO
  reduce by rule: type-with-interr -> type
  shift token (then go to state 89)
Conflict at state: 398, token: TILDE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 123)
Conflict at state: 398, token: ADD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 93)
Conflict at state: 398, token: REMOVE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 94)
Conflict at state: 398, token: SET
  reduce by rule: type-with-interr -> type
  shift token (then go to state 95)
Conflict at state: 398, token: PARAMS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 96)
Conflict at state: 398, token: DEFAULT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 97)
Conflict at state: 398, token: METHOD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 98)
Conflict at state: 398, token: PARAM
  reduce by rule: type-with-interr -> type
  shift token (then go to state 99)
Conflict at state: 398, token: ASSEMBLY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 100)
Conflict at state: 398, token: PROPERTY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 101)
Conflict at state: 398, token: MODULE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 102)
Conflict at state: 398, token: FIELD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 103)
Conflict at state: 398, token: TYPE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 104)
Conflict at state: 398, token: THIS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 105)
Conflict at state: 398, token: ASYNC
  reduce by rule: type-with-interr -> type
  shift token (then go to state 132)
Conflict at state: 398, token: WHERE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 106)
Conflict at state: 398, token: IDENTIFIER
  reduce by rule: type-with-interr -> type
  shift token (then go to state 70)
Conflict at state: 416, token: COMMA
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 127)
Conflict at state: 470, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 470, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 470, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 470, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 470, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 758)
Conflict at state: 470, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 470, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 470, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 470, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 482, token: COLON
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: EXTERN
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: OPEN_BRACKET
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: EXPLICIT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: IMPLICIT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: IDENTIFIER
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: WHERE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: ASYNC
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: THIS
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: TYPE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: FIELD
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: MODULE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: PROPERTY
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: ASSEMBLY
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: PARAM
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: METHOD
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: DEFAULT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: PARAMS
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: SET
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: REMOVE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: ADD
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: TILDE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: AUTO
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: VOID
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: STRING
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: OBJECT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: BOOL
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: DECIMAL
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: DOUBLE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: FLOAT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: CHAR
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: ULONG
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: LONG
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: UINT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: INT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: USHORT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: SHORT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: BYTE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: SBYTE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: CONST
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: INTERR
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: UNSAFE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: PUBLIC
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: PARTIAL
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: PROTECTED
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: INTERNAL
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: PRIVATE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: ABSTRACT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: SEALED
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: STATIC
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: READONLY
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: VOLATILE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: VIRTUAL
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: OVERRIDE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: NEW
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: DELEGATE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: ENUM
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: INTERFACE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 482, token: STRUCT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 483, token: COLON
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: EXTERN
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: OPEN_BRACKET
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: EXPLICIT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: IMPLICIT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: IDENTIFIER
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: WHERE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: ASYNC
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: THIS
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: TYPE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: FIELD
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: MODULE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: PROPERTY
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: ASSEMBLY
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: PARAM
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: METHOD
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: DEFAULT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: PARAMS
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: SET
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: REMOVE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: ADD
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: TILDE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: AUTO
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: VOID
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: STRING
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: OBJECT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: BOOL
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: DECIMAL
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: DOUBLE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: FLOAT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: CHAR
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: ULONG
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: LONG
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: UINT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: INT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: USHORT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: SHORT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: BYTE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: SBYTE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: CONST
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: INTERR
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: UNSAFE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: PUBLIC
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: PARTIAL
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: PROTECTED
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: INTERNAL
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: PRIVATE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: ABSTRACT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: SEALED
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: STATIC
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: READONLY
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: VOLATILE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: VIRTUAL
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: OVERRIDE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: NEW
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: DELEGATE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: ENUM
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: INTERFACE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 483, token: STRUCT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 484, token: COLON
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: EXTERN
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: OPEN_BRACKET
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: EXPLICIT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: IMPLICIT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: IDENTIFIER
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: WHERE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: ASYNC
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: THIS
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: TYPE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: FIELD
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: MODULE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: PROPERTY
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: ASSEMBLY
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: PARAM
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: METHOD
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: DEFAULT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: PARAMS
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: SET
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: REMOVE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: ADD
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: TILDE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: AUTO
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: VOID
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: STRING
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: OBJECT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: BOOL
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: DECIMAL
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: DOUBLE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: FLOAT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: CHAR
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: ULONG
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: LONG
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: UINT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: INT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: USHORT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: SHORT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: BYTE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: SBYTE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: CONST
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: INTERR
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: UNSAFE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: PUBLIC
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: PARTIAL
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: PROTECTED
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: INTERNAL
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: PRIVATE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: ABSTRACT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: SEALED
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: STATIC
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: READONLY
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: VOLATILE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: VIRTUAL
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: OVERRIDE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: NEW
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: DELEGATE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: ENUM
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: INTERFACE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 484, token: STRUCT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 487, token: CONST
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 53)
Conflict at state: 487, token: SBYTE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 73)
Conflict at state: 487, token: BYTE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 74)
Conflict at state: 487, token: SHORT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 75)
Conflict at state: 487, token: USHORT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 76)
Conflict at state: 487, token: INT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 77)
Conflict at state: 487, token: UINT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 78)
Conflict at state: 487, token: LONG
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 79)
Conflict at state: 487, token: ULONG
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 80)
Conflict at state: 487, token: CHAR
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 81)
Conflict at state: 487, token: FLOAT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 82)
Conflict at state: 487, token: DOUBLE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 83)
Conflict at state: 487, token: DECIMAL
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 84)
Conflict at state: 487, token: BOOL
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 85)
Conflict at state: 487, token: OBJECT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 86)
Conflict at state: 487, token: STRING
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 87)
Conflict at state: 487, token: VOID
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 88)
Conflict at state: 487, token: AUTO
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 89)
Conflict at state: 487, token: TILDE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 123)
Conflict at state: 487, token: ADD
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 93)
Conflict at state: 487, token: REMOVE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 94)
Conflict at state: 487, token: SET
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 95)
Conflict at state: 487, token: PARAMS
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 96)
Conflict at state: 487, token: DEFAULT
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 97)
Conflict at state: 487, token: METHOD
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 98)
Conflict at state: 487, token: PARAM
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 99)
Conflict at state: 487, token: ASSEMBLY
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 100)
Conflict at state: 487, token: PROPERTY
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 101)
Conflict at state: 487, token: MODULE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 102)
Conflict at state: 487, token: FIELD
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 103)
Conflict at state: 487, token: TYPE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 104)
Conflict at state: 487, token: THIS
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 105)
Conflict at state: 487, token: ASYNC
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 132)
Conflict at state: 487, token: WHERE
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 106)
Conflict at state: 487, token: IDENTIFIER
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 70)
Conflict at state: 487, token: COMMA
  reduce by rule: class-method-header -> member-name-with-double-colon
  shift token (then go to state 127)
Conflict at state: 487, token: CONST
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 53)
Conflict at state: 487, token: OVERRIDE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: OPEN_BRACE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: SEMICOLON
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: SBYTE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 73)
Conflict at state: 487, token: BYTE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 74)
Conflict at state: 487, token: SHORT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 75)
Conflict at state: 487, token: USHORT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 76)
Conflict at state: 487, token: INT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 77)
Conflict at state: 487, token: UINT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 78)
Conflict at state: 487, token: LONG
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 79)
Conflict at state: 487, token: ULONG
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 80)
Conflict at state: 487, token: CHAR
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 81)
Conflict at state: 487, token: FLOAT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 82)
Conflict at state: 487, token: DOUBLE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 83)
Conflict at state: 487, token: DECIMAL
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 84)
Conflict at state: 487, token: BOOL
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 85)
Conflict at state: 487, token: OBJECT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 86)
Conflict at state: 487, token: STRING
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 87)
Conflict at state: 487, token: VOID
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 88)
Conflict at state: 487, token: AUTO
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 89)
Conflict at state: 487, token: TILDE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 123)
Conflict at state: 487, token: ADD
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 93)
Conflict at state: 487, token: REMOVE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 94)
Conflict at state: 487, token: SET
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 95)
Conflict at state: 487, token: PARAMS
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 96)
Conflict at state: 487, token: DEFAULT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 97)
Conflict at state: 487, token: METHOD
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 98)
Conflict at state: 487, token: PARAM
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 99)
Conflict at state: 487, token: ASSEMBLY
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 100)
Conflict at state: 487, token: PROPERTY
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 101)
Conflict at state: 487, token: MODULE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 102)
Conflict at state: 487, token: FIELD
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 103)
Conflict at state: 487, token: TYPE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 104)
Conflict at state: 487, token: THIS
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 105)
Conflict at state: 487, token: ASYNC
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 132)
Conflict at state: 487, token: WHERE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 106)
Conflict at state: 487, token: OPEN_BRACKET
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: UNSAFE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: PUBLIC
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: PARTIAL
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: PROTECTED
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: INTERNAL
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: PRIVATE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: ABSTRACT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: SEALED
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: STATIC
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: READONLY
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: VOLATILE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: VIRTUAL
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: EXTERN
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: NEW
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: INTERR
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: IDENTIFIER
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 70)
Conflict at state: 487, token: STRUCT
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: INTERFACE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: ENUM
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: DELEGATE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: USING
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: CLOSE_BRACE
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  reduce by rule: class-method-header -> member-name-with-double-colon
Conflict at state: 487, token: COMMA
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 127)
Conflict at state: 499, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 499, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 499, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 499, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 499, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 499, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 499, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 499, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 499, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 783)
Conflict at state: 499, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 499, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 499, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 499, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 499, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 499, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 499, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 499, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 499, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 56)
Conflict at state: 499, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 499, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 499, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 499, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 499, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 499, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 499, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 499, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 499, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 499, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 499, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 499, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 499, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 499, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 499, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 499, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 499, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 499, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 499, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 499, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 499, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 499, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 499, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 499, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 499, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 499, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 499, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 499, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 499, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 499, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 499, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 499, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 499, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 499, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 499, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 499, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 285)
Conflict at state: 499, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 499, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 499, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 499, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 499, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 499, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 499, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 499, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 499, token: IF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 289)
Conflict at state: 499, token: SWITCH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 290)
Conflict at state: 499, token: WHILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 291)
Conflict at state: 499, token: DO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 292)
Conflict at state: 499, token: FOR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 293)
Conflict at state: 499, token: FOREACH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 294)
Conflict at state: 499, token: YIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 295)
Conflict at state: 499, token: BREAK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 296)
Conflict at state: 499, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 297)
Conflict at state: 499, token: GOTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 298)
Conflict at state: 499, token: RETURN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 299)
Conflict at state: 499, token: THROW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 300)
Conflict at state: 499, token: TRY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 274)
Conflict at state: 499, token: LOCK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 499, token: USING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 278)
Conflict at state: 499, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 279)
Conflict at state: 499, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 499, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 58)
Conflict at state: 499, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 499, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 499, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 61)
Conflict at state: 499, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 499, token: SEALED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 499, token: STATIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 499, token: READONLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 499, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 499, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 499, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 499, token: EXTERN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 499, token: FIXED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 499, token: CASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 782)
Conflict at state: 500, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 500, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 500, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 500, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 500, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 500, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 500, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 500, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 500, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 500, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 500, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 500, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 500, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 500, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 500, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 500, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 500, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 500, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 500, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 500, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 500, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 500, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 500, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 500, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 500, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 500, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 500, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 500, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 500, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 500, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 500, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 500, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 500, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 500, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 500, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 500, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 500, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 500, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 500, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 500, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 500, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 500, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 500, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 500, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 500, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 500, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 500, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 500, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 500, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 500, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 500, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 500, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 500, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 500, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 500, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 500, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 500, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 500, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 500, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 500, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 500, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 507, token: OP_DBLPTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
  shift token (then go to state 500)
Conflict at state: 507, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OPEN_BRACE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ADD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: UNCHECKED
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CHECKED
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SIZEOF
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: TYPEOF
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: NEW
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: BASE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: THIS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: AUTO
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: VOID
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: STRING
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OBJECT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: BOOL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DECIMAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DOUBLE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: FLOAT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CHAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ULONG
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: LONG
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: UINT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: INT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: USHORT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SHORT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: BYTE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SBYTE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CONST
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: STACKALLOC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DELEGATE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: AWAIT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: NULL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CHARACTER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: STRING_LITERAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: INTEGER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: REAL_LITERAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: FALSE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: TRUE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: TILDE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: BANG
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_AND
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: BITWISE_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CARET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: AMP
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_NE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_EQ
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: AS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: IS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_GE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_LE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: GT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: LT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: RIGHT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_LEFT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PERCENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DIV
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CLOSE_BRACE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DOUBLE_COLON
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: USING
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ENUM
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: INTERFACE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: STRUCT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: EXTERN
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OVERRIDE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: VIRTUAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: VOLATILE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: READONLY
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: STATIC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SEALED
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ABSTRACT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PRIVATE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: INTERNAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PROTECTED
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PARTIAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PUBLIC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: UNSAFE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: FIXED
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: LOCK
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: TRY
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: THROW
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: RETURN
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: GOTO
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CONTINUE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: BREAK
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: YIELD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: FOREACH
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: FOR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DO
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: WHILE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SWITCH
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: IF
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: COLON
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CLOSE_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: UNION
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CLASS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: EOF
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CASE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: TEMPLATE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OPEN_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CLOSE_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: UNCHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SIZEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: TYPEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: NEW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: BASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: AUTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: VOID
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: STRING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OBJECT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: BOOL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DECIMAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DOUBLE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: FLOAT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CHAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ULONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: LONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: UINT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: INT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: USHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: BYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SBYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CONST
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: STACKALLOC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DELEGATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: AWAIT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: NULL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CHARACTER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: STRING_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: INTEGER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: REAL_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: FALSE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: TRUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: TILDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: BANG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_AND
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: BITWISE_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CARET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_NE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_EQ
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: AS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: IS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_GE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_LE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: GT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: LT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: RIGHT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OP_LEFT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PERCENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DIV
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CLOSE_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: USING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ENUM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: INTERFACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: STRUCT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: EXTERN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: OVERRIDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: VIRTUAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: VOLATILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: READONLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: STATIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SEALED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: ABSTRACT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PRIVATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: INTERNAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PROTECTED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PARTIAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: PUBLIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: UNSAFE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: FIXED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: LOCK
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: TRY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: THROW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: RETURN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: GOTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CONTINUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: BREAK
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: YIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: FOREACH
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: FOR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: DO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: WHILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: SWITCH
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: IF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CLOSE_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: UNION
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CLASS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: EOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: CASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 507, token: TEMPLATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 509, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 510, token: COMMA
  reduce by rule: local-variable-declaration -> primary-expression local-variable-declarators
  shift token (then go to state 789)
Conflict at state: 513, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 513, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 513, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 513, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 513, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 792)
Conflict at state: 513, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 513, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 513, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 513, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 517, token: ASSIGN
  reduce by rule: local-variable-declarator -> local-variable
  shift token (then go to state 799)
Conflict at state: 522, token: COMMA
  reduce by rule: local-variable-declaration -> type local-variable-declarators
  shift token (then go to state 789)
Conflict at state: 526, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 530, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 530, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 530, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 530, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 530, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 530, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 530, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 530, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 532, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 532, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 532, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 532, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 532, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 532, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 532, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 532, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 533, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 533, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 533, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 533, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 533, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 533, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 533, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 533, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 534, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 534, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 534, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 534, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 534, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 534, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 534, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 534, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 534, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 534, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 534, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 534, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 534, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 534, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 534, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 534, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 534, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 534, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 534, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 534, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 534, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 534, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 534, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 534, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 534, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 534, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 538, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 538, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 538, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 538, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 538, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 828)
Conflict at state: 538, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 538, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 451)
Conflict at state: 538, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 538, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 538, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 540, token: OPEN_BRACKET
  reduce by rule: type-with-identifier -> non-array-type
  shift token (then go to state 835)
Conflict at state: 540, token: OPEN_PARENS
  reduce by rule: type -> non-array-type
  reduce by rule: type-with-identifier -> non-array-type
Conflict at state: 540, token: OPEN_BRACE
  reduce by rule: type -> non-array-type
  reduce by rule: type-with-identifier -> non-array-type
Conflict at state: 540, token: OPEN_BRACKET
  reduce by rule: type -> non-array-type
  shift token (then go to state 835)
Conflict at state: 540, token: TEMPLATE
  reduce by rule: type -> non-array-type
  reduce by rule: type-with-identifier -> non-array-type
Conflict at state: 541, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW rank-specifiers
  shift token (then go to state 545)
Conflict at state: 541, token: OPEN_BRACKET
  reduce by rule: object-creation-expression -> NEW rank-specifiers
  shift token (then go to state 186)
Conflict at state: 544, token: TEMPLATE
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER
  shift token (then go to state 839)
Conflict at state: 545, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 545, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 545, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 545, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 545, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 545, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 545, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 545, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 546, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 546, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 546, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 546, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 546, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 546, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 546, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 546, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 546, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 546, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 545)
Conflict at state: 546, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 546, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 546, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 546, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 546, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 546, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 546, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 546, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 546, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 546, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 546, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 546, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 546, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 546, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 546, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 546, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 546, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 546, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 546, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 546, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 546, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 546, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 546, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 546, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 546, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 546, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 546, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 546, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 546, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 546, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 546, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 546, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 546, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 546, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 546, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 546, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 546, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 546, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 546, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 546, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 546, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 546, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 546, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 546, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 546, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 546, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 546, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 546, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 546, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 546, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 546, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 560, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 560, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 560, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 560, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 560, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 560, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 560, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 560, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 561, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 561, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 561, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 561, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 561, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 561, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 561, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 561, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 562, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 562, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 562, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 562, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 562, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 562, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 562, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 562, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 564, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 851)
Conflict at state: 564, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 564, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 564, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 564, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 564, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 564, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 564, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 564, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 564, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 564, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 564, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 564, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 564, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 564, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 564, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 564, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 564, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 564, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 564, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 564, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 564, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 564, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 564, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 567, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 567, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 567, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 567, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 567, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 860)
Conflict at state: 567, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 567, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 567, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 567, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 571, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 571, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 571, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 571, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 571, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 571, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 571, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 571, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 580, token: OPEN_BRACKET
  reduce by rule: type -> non-array-type
  shift token (then go to state 870)
Conflict at state: 593, token: DOT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 523)
Conflict at state: 593, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 880)
Conflict at state: 593, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 593, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 593, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 593, token: INTERR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 181)
Conflict at state: 593, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  reduce by rule: type-with-interr -> type
Conflict at state: 593, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 186)
Conflict at state: 593, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 593, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 593, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 593, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 594, token: CLOSE_PARENS
  reduce by rule: expression-list -> expression
  shift token (then go to state 881)
Conflict at state: 594, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 594, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 594, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 594, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 594, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 881)
Conflict at state: 594, token: COMMA
  reduce by rule: invocation-expressions -> 
  reduce by rule: expression-list -> expression
Conflict at state: 594, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 594, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 594, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 594, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 597, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 597, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 597, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 597, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 597, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 597, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 597, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 597, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 606, token: CONST
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: OVERRIDE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: OPEN_BRACE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: SEMICOLON
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: EOF
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: CLASS
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: STRUCT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: UNION
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: INTERR
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: UNSAFE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: ASYNC
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: PUBLIC
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: PARTIAL
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: PROTECTED
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: INTERNAL
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: PRIVATE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: ABSTRACT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: SEALED
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: STATIC
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: READONLY
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: VOLATILE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: VIRTUAL
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: EXTERN
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: NEW
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: SBYTE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: BYTE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: SHORT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: USHORT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: INT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: UINT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: LONG
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: ULONG
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: CHAR
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: FLOAT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: DOUBLE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: DECIMAL
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: BOOL
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: OBJECT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: STRING
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: VOID
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: AUTO
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: TILDE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: ADD
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: REMOVE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: SET
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: PARAMS
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: DEFAULT
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: METHOD
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: PARAM
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: ASSEMBLY
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: PROPERTY
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: MODULE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: FIELD
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: TYPE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: THIS
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: WHERE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: OPEN_BRACKET
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: IDENTIFIER
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: INTERFACE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: ENUM
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: DELEGATE
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 606, token: USING
  reduce by rule: class-method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
  reduce by rule: method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
Conflict at state: 609, token: STRING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 87)
Conflict at state: 609, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 106)
Conflict at state: 609, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 132)
Conflict at state: 609, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 105)
Conflict at state: 609, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 104)
Conflict at state: 609, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 103)
Conflict at state: 609, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 102)
Conflict at state: 609, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 101)
Conflict at state: 609, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 100)
Conflict at state: 609, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 99)
Conflict at state: 609, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 98)
Conflict at state: 609, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 97)
Conflict at state: 609, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 96)
Conflict at state: 609, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 95)
Conflict at state: 609, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 94)
Conflict at state: 609, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 93)
Conflict at state: 609, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 70)
Conflict at state: 609, token: TILDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 123)
Conflict at state: 621, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 621, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 621, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 621, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 621, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 621, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 621, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 621, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 621, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 621, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 621, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 621, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 621, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 621, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 621, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 621, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 621, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 621, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 621, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 621, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 621, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 621, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 621, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 621, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 621, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 621, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 621, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 621, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 621, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 621, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 621, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 621, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 621, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 621, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 621, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 621, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 621, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 621, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 621, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 621, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 621, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 621, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 621, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 621, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 621, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 621, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 621, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 621, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 621, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 621, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 621, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 621, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 621, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 621, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 621, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 621, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 621, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 621, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 621, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 621, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 622, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 622, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 622, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 622, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 622, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 622, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 622, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 622, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 622, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 622, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 622, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 622, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 622, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 622, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 622, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 622, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 622, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 622, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 622, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 622, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 622, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 622, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 622, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 622, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 622, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 622, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 622, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 622, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 622, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 622, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 622, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 622, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 622, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 622, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 622, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 622, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 622, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 622, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 622, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 622, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 622, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 622, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 622, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 622, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 622, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 622, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 622, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 622, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 622, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 622, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 622, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 622, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 622, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 622, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 622, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 622, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 622, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 622, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 622, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 622, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 623, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 623, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 623, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 623, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 623, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 623, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 623, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 623, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 623, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 623, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 623, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 623, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 623, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 623, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 623, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 623, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 623, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 623, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 623, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 623, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 623, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 623, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 623, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 623, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 623, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 623, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 623, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 623, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 623, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 623, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 623, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 623, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 623, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 623, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 623, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 623, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 623, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 623, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 623, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 623, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 623, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 623, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 623, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 623, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 623, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 623, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 623, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 623, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 623, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 623, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 623, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 623, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 623, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 623, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 623, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 623, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 623, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 623, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 623, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 623, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 624, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 624, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 624, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 624, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 624, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 624, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 624, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 624, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 624, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 624, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 624, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 624, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 624, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 624, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 624, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 624, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 624, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 624, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 624, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 624, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 624, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 624, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 624, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 624, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 624, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 624, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 624, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 624, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 624, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 624, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 624, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 624, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 624, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 624, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 624, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 624, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 624, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 624, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 624, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 624, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 624, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 624, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 624, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 624, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 624, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 624, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 624, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 624, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 624, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 624, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 624, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 624, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 624, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 624, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 624, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 624, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 624, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 624, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 624, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 624, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 625, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 625, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 625, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 625, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 625, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 625, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 625, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 625, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 625, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 625, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 625, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 625, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 625, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 625, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 625, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 625, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 625, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 625, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 625, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 625, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 625, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 625, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 625, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 625, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 625, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 625, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 625, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 625, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 625, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 625, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 625, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 625, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 625, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 625, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 625, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 625, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 625, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 625, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 625, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 625, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 625, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 625, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 625, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 625, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 625, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 625, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 625, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 625, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 625, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 625, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 625, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 625, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 625, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 625, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 625, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 625, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 625, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 625, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 625, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 625, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 626, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 626, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 626, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 626, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 626, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 626, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 626, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 626, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 626, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 626, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 626, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 626, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 626, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 626, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 626, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 626, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 626, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 626, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 626, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 626, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 626, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 626, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 626, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 626, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 626, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 626, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 626, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 626, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 626, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 626, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 626, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 626, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 626, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 626, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 626, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 626, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 626, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 626, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 626, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 626, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 626, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 626, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 626, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 626, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 626, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 626, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 626, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 626, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 626, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 626, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 626, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 626, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 626, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 626, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 626, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 626, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 626, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 626, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 626, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 626, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 627, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 627, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 627, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 627, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 627, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 627, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 627, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 627, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 627, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 627, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 627, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 627, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 627, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 627, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 627, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 627, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 627, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 627, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 627, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 627, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 627, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 627, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 627, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 627, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 627, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 627, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 627, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 627, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 627, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 627, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 627, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 627, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 627, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 627, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 627, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 627, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 627, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 627, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 627, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 627, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 627, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 627, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 627, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 627, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 627, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 627, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 627, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 627, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 627, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 627, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 627, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 627, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 627, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 627, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 627, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 627, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 627, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 627, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 627, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 627, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 628, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 628, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 628, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 628, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 628, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 628, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 628, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 628, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 628, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 628, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 628, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 628, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 628, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 628, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 628, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 628, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 628, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 628, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 628, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 628, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 628, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 628, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 628, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 628, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 628, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 628, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 628, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 628, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 628, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 628, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 628, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 628, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 628, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 628, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 628, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 628, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 628, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 628, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 628, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 628, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 628, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 628, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 628, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 628, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 628, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 628, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 628, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 628, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 628, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 628, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 628, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 628, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 628, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 628, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 628, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 628, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 628, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 628, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 628, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 628, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 629, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 629, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 629, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 629, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 629, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 629, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 629, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 629, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 629, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 629, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 629, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 629, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 629, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 629, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 629, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 629, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 629, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 629, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 629, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 629, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 629, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 629, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 629, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 629, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 629, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 629, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 629, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 629, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 629, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 629, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 629, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 629, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 629, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 629, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 629, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 629, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 629, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 629, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 629, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 629, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 629, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 629, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 629, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 629, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 629, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 629, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 629, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 629, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 629, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 629, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 629, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 629, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 629, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 629, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 629, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 629, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 629, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 629, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 629, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 629, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 630, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 630, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 630, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 630, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 630, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 630, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 630, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 630, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 630, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 630, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 630, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 630, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 630, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 630, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 630, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 630, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 630, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 630, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 630, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 630, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 630, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 630, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 630, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 630, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 630, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 630, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 630, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 630, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 630, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 630, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 630, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 630, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 630, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 630, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 630, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 630, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 630, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 630, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 630, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 630, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 630, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 630, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 630, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 630, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 630, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 630, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 630, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 630, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 630, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 630, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 630, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 630, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 630, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 630, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 630, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 630, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 630, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 630, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 630, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 630, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 631, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 631, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 631, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 631, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 631, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 631, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 631, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 631, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 631, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 631, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 631, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 631, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 631, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 631, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 631, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 631, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 631, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 631, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 631, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 631, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 631, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 631, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 631, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 631, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 631, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 631, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 631, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 631, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 631, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 631, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 631, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 631, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 631, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 631, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 631, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 631, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 631, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 631, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 631, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 631, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 631, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 631, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 631, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 631, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 631, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 631, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 631, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 631, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 631, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 631, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 631, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 631, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 631, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 631, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 631, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 631, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 631, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 631, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 631, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 631, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 632, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 632, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 632, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 632, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 632, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 632, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 632, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 632, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 632, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 632, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 632, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 632, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 632, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 632, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 632, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 632, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 632, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 632, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 632, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 632, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 632, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 632, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 632, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 632, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 632, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 632, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 632, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 632, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 632, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 632, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 632, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 632, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 632, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 632, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 632, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 632, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 632, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 632, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 632, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 632, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 632, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 632, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 632, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 632, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 632, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 632, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 632, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 632, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 632, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 632, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 632, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 632, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 632, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 632, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 632, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 632, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 632, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 632, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 632, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 632, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 633, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 633, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 633, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 633, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 633, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 633, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 633, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 633, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 633, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 633, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 633, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 633, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 633, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 633, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 633, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 633, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 633, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 633, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 633, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 633, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 633, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 633, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 633, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 633, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 633, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 633, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 633, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 633, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 633, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 633, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 633, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 633, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 633, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 633, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 633, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 633, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 633, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 633, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 633, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 633, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 633, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 633, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 633, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 633, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 633, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 633, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 633, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 633, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 633, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 633, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 633, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 633, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 633, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 633, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 633, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 633, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 633, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 633, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 633, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 633, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 636, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 636, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 636, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 636, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 636, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 636, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 636, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 636, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 636, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 636, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 636, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 636, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 636, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 636, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 636, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 636, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 636, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 636, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 636, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 636, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 636, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 636, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 636, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 636, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 636, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 636, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 636, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 636, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 636, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 636, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 636, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 636, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 636, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 636, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 636, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 636, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 636, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 636, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 636, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 636, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 636, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 636, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 636, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 636, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 636, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 636, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 636, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 636, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 636, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 636, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 636, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 636, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 636, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 636, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 636, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 636, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 636, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 636, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 636, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 636, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 637, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 637, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 637, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 637, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 637, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 637, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 637, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 637, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 637, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 637, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 637, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 637, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 637, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 637, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 637, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 637, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 637, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 637, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 637, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 637, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 637, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 637, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 637, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 637, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 637, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 637, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 637, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 637, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 637, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 637, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 637, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 637, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 637, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 637, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 637, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 637, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 637, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 637, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 637, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 637, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 637, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 637, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 637, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 637, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 637, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 637, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 637, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 637, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 637, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 637, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 637, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 637, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 637, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 637, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 637, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 637, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 637, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 637, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 637, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 637, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 638, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 638, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 638, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 638, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 638, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 638, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 638, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 638, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 638, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 638, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 638, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 638, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 638, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 638, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 638, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 638, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 638, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 638, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 638, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 638, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 638, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 638, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 638, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 638, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 638, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 638, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 638, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 638, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 638, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 638, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 638, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 638, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 638, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 638, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 638, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 638, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 638, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 638, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 638, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 638, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 638, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 638, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 638, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 638, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 638, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 638, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 638, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 638, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 638, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 638, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 638, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 638, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 638, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 638, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 638, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 638, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 638, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 638, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 638, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 638, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 639, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 639, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 639, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 639, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 639, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 639, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 639, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 639, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 639, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 639, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 639, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 639, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 639, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 639, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 639, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 639, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 639, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 639, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 639, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 639, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 639, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 639, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 639, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 639, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 639, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 639, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 639, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 639, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 639, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 639, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 639, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 639, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 639, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 639, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 639, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 639, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 639, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 639, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 639, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 639, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 639, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 639, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 639, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 639, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 639, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 639, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 639, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 639, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 639, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 639, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 639, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 639, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 639, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 639, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 639, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 639, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 639, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 639, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 639, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 639, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 640, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 640, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 640, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 640, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 640, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 640, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 640, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 640, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 640, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 640, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 640, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 640, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 640, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 640, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 640, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 640, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 640, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 640, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 640, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 640, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 640, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 640, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 640, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 640, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 640, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 640, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 640, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 640, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 640, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 640, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 640, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 640, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 640, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 640, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 640, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 640, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 640, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 640, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 640, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 640, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 640, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 640, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 640, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 640, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 640, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 640, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 640, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 640, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 640, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 640, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 640, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 640, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 640, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 640, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 640, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 640, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 640, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 640, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 640, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 640, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 641, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 641, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 641, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 641, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 641, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 641, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 641, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 641, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 641, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 641, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 641, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 641, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 641, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 641, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 641, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 641, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 641, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 641, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 641, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 641, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 641, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 641, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 641, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 641, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 641, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 641, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 641, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 641, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 641, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 641, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 641, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 641, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 641, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 641, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 641, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 641, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 641, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 641, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 641, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 641, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 641, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 641, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 641, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 641, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 641, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 641, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 641, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 641, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 641, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 641, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 641, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 641, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 641, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 641, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 641, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 641, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 641, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 641, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 641, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 641, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 642, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 642, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 642, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 642, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 642, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 642, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 642, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 642, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 642, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 642, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 642, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 642, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 642, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 642, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 642, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 642, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 642, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 642, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 642, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 642, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 642, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 642, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 642, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 642, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 642, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 642, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 642, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 642, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 642, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 642, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 642, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 642, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 642, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 642, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 642, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 642, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 642, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 642, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 642, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 642, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 642, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 642, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 642, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 642, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 642, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 642, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 642, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 642, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 642, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 642, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 642, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 642, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 642, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 642, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 642, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 642, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 642, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 642, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 642, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 642, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 643, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 643, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 643, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 643, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 643, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 643, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 643, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 643, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 643, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 643, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 643, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 643, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 643, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 643, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 643, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 643, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 643, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 643, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 643, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 643, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 643, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 643, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 643, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 643, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 643, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 643, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 643, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 643, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 643, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 643, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 643, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 643, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 643, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 643, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 643, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 643, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 643, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 643, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 643, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 643, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 643, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 643, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 643, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 643, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 643, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 643, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 643, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 643, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 643, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 643, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 643, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 643, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 643, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 643, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 643, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 643, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 643, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 643, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 643, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 643, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 644, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 644, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 644, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 644, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 644, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 644, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 644, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 644, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 644, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 644, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 644, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 644, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 644, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 644, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 644, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 644, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 644, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 644, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 644, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 644, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 644, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 644, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 644, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 644, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 644, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 644, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 644, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 644, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 644, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 644, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 644, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 644, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 644, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 644, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 644, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 644, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 644, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 644, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 644, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 644, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 644, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 644, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 644, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 644, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 644, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 644, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 644, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 644, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 644, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 644, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 644, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 644, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 644, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 644, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 644, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 644, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 644, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 644, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 644, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 644, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 681, token: OPEN_PARENS
  reduce by rule: overloadable-binary-operator -> MINUS
  reduce by rule: overloadable-unary-operator -> MINUS
Conflict at state: 684, token: OPEN_PARENS
  reduce by rule: overloadable-binary-operator -> PLUS
  reduce by rule: overloadable-unary-operator -> PLUS
Conflict at state: 702, token: OPEN_BRACE
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 113)
Conflict at state: 702, token: SEMICOLON
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 174)
Conflict at state: 764, token: ASSIGN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 1031)
Conflict at state: 764, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 509)
Conflict at state: 779, token: DEFAULT
  reduce by rule: labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels
  shift token (then go to state 1040)
Conflict at state: 779, token: CASE
  reduce by rule: labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels
  shift token (then go to state 782)
Conflict at state: 782, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 782, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 782, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 782, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 782, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 782, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 782, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 782, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 783, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> DEFAULT
  shift token (then go to state 1042)
Conflict at state: 786, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 786, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 786, token: DOT
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 786, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 786, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 786, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 787, token: DOT
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
Conflict at state: 787, token: OP_PTR
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
Conflict at state: 787, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
Conflict at state: 787, token: OP_INC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
Conflict at state: 787, token: OP_DEC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
Conflict at state: 787, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
Conflict at state: 789, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 123)
Conflict at state: 789, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 70)
Conflict at state: 789, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 93)
Conflict at state: 789, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 94)
Conflict at state: 789, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 95)
Conflict at state: 789, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 96)
Conflict at state: 789, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 97)
Conflict at state: 789, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 98)
Conflict at state: 789, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 99)
Conflict at state: 789, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 100)
Conflict at state: 789, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 101)
Conflict at state: 789, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 102)
Conflict at state: 789, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 103)
Conflict at state: 789, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 104)
Conflict at state: 789, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 105)
Conflict at state: 789, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 132)
Conflict at state: 789, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 106)
Conflict at state: 789, token: STRING
  reduce by rule: local-variable -> 
  shift token (then go to state 177)
Conflict at state: 789, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 518)
Conflict at state: 789, token: AMP
  reduce by rule: local-variable -> 
  shift token (then go to state 520)
Conflict at state: 789, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 199)
Conflict at state: 795, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 795, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 795, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 795, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 795, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 795, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 795, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 795, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 796, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 796, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 796, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 796, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 796, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 796, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 796, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 796, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 799, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 799, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 799, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 799, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 799, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 364)
Conflict at state: 799, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 799, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 799, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 799, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 799, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 799, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 799, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 799, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 799, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 799, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 799, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 799, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 799, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 799, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 799, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 799, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 799, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 799, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 799, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 799, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 799, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 799, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 799, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 799, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 799, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 799, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 799, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 799, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 799, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 799, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 799, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 799, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 799, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 799, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 799, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 799, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 799, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 799, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 799, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 799, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 799, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 799, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 799, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 799, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 799, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 799, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 799, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 799, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 799, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 799, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 799, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 799, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 799, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 799, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 799, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 799, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 805, token: COMMA
  reduce by rule: local-constant-declaration -> CONST type constant-declarators
  shift token (then go to state 1054)
Conflict at state: 806, token: CLOSE_BRACE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OPEN_BRACE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: SEMICOLON
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: TILDE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: IDENTIFIER
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: ADD
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: REMOVE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: SET
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: PARAMS
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: DEFAULT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: METHOD
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: PARAM
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: ASSEMBLY
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: PROPERTY
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: MODULE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: FIELD
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: TYPE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: THIS
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: ASYNC
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: WHERE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: STRING
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: COMMA
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: ASSIGN
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: INTERR
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: AMP
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: STAR
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: TRUE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: FALSE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: REAL_LITERAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: INTEGER_LITERAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: STRING_LITERAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: CHARACTER_LITERAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: NULL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OPEN_PARENS
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: DOT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: AWAIT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: DELEGATE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: STACKALLOC
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: CONST
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: SBYTE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: BYTE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: SHORT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: USHORT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: INT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: UINT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: LONG
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: ULONG
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: CHAR
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: FLOAT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: DOUBLE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: DECIMAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: BOOL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OBJECT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: VOID
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: AUTO
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_PTR
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OPEN_BRACKET
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: BASE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_INC
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_DEC
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: NEW
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: TYPEOF
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: SIZEOF
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: CHECKED
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: UNCHECKED
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_ADD_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_SUB_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_MULT_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_DIV_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_MOD_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_AND_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_OR_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_XOR_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: PLUS
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OP_COALESCING
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: MINUS
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: BANG
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: IF
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: SWITCH
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: WHILE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: DO
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: FOR
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: FOREACH
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: YIELD
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: BREAK
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: CONTINUE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: GOTO
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: RETURN
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: THROW
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: TRY
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: LOCK
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: USING
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: UNSAFE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: PUBLIC
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: PARTIAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: PROTECTED
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: INTERNAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: PRIVATE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: ABSTRACT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: SEALED
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: STATIC
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: READONLY
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: VOLATILE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: VIRTUAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: OVERRIDE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: EXTERN
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: FIXED
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 806, token: CASE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 808, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 808, token: DOT
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 808, token: OP_PTR
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 808, token: OP_INC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 808, token: OP_DEC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 808, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 809, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: AMP
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: DOUBLE_COLON
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: TEMPLATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 809, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 830, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 830, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 830, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 830, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 830, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1071)
Conflict at state: 830, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 830, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 830, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 830, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 833, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 833, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 833, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 833, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 833, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 451)
Conflict at state: 833, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 450)
Conflict at state: 833, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 833, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 833, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 833, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 835, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 835, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 835, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 835, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 835, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 451)
Conflict at state: 835, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 450)
Conflict at state: 835, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 835, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 835, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 835, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 837, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 837, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 837, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 837, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 837, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1077)
Conflict at state: 837, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 837, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 837, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 837, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 839, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 839, token: OPEN_BRACE
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 839, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 839, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 839, token: DOT
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 839, token: AMP
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 839, token: STAR
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 839, token: TEMPLATE
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 847, token: CLOSE_PARENS
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 847, token: SEMICOLON
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 851, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 851, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 851, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 851, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 851, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1084)
Conflict at state: 851, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 851, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 851, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 851, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 870, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 870, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 870, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 870, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 870, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1095)
Conflict at state: 870, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 870, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 870, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 870, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 872, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 872, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 872, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 872, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 872, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1099)
Conflict at state: 872, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 872, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 872, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 872, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 874, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 874, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 874, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 874, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 874, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 874, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 874, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 874, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 874, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 874, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 874, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 874, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 874, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 874, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 874, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 874, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 874, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 874, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 874, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 874, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 874, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 874, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 874, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 874, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 874, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 874, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 874, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 874, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 874, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 874, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 874, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 874, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 874, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 874, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 874, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 874, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 874, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 874, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 874, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 874, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 874, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 874, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 874, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 874, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 874, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 874, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 874, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 874, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 874, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 874, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 874, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 874, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 874, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 874, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 874, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 874, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 874, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 874, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 874, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 874, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 878, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 878, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 878, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 878, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 878, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 878, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 878, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 878, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 879, token: CLOSE_PARENS
  reduce by rule: type-expression-list -> type expression
  shift token (then go to state 1106)
Conflict at state: 880, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 880, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 880, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 880, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 880, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 880, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 880, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 880, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 881, token: STAR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 325)
Conflict at state: 881, token: TILDE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 249)
Conflict at state: 881, token: ADD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 93)
Conflict at state: 881, token: REMOVE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 94)
Conflict at state: 881, token: SET
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 95)
Conflict at state: 881, token: PARAMS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 96)
Conflict at state: 881, token: DEFAULT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 97)
Conflict at state: 881, token: METHOD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 98)
Conflict at state: 881, token: PARAM
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 99)
Conflict at state: 881, token: ASSEMBLY
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 100)
Conflict at state: 881, token: PROPERTY
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 101)
Conflict at state: 881, token: MODULE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 102)
Conflict at state: 881, token: FIELD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 103)
Conflict at state: 881, token: TYPE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 104)
Conflict at state: 881, token: THIS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 251)
Conflict at state: 881, token: ASYNC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 132)
Conflict at state: 881, token: WHERE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 106)
Conflict at state: 881, token: STRING
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 87)
Conflict at state: 881, token: IDENTIFIER
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 70)
Conflict at state: 881, token: OP_INC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 287)
Conflict at state: 881, token: OP_DEC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 288)
Conflict at state: 881, token: OPEN_PARENS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 332)
Conflict at state: 881, token: OP_PTR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 321)
Conflict at state: 881, token: TRUE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 336)
Conflict at state: 881, token: FALSE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 337)
Conflict at state: 881, token: REAL_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 327)
Conflict at state: 881, token: INTEGER_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 328)
Conflict at state: 881, token: STRING_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 329)
Conflict at state: 881, token: CHARACTER_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 330)
Conflict at state: 881, token: NULL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 331)
Conflict at state: 881, token: AWAIT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 319)
Conflict at state: 881, token: DELEGATE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 316)
Conflict at state: 881, token: STACKALLOC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 318)
Conflict at state: 881, token: CONST
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 53)
Conflict at state: 881, token: SBYTE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 73)
Conflict at state: 881, token: BYTE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 74)
Conflict at state: 881, token: SHORT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 75)
Conflict at state: 881, token: USHORT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 76)
Conflict at state: 881, token: INT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 77)
Conflict at state: 881, token: UINT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 78)
Conflict at state: 881, token: LONG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 79)
Conflict at state: 881, token: ULONG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 80)
Conflict at state: 881, token: CHAR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 81)
Conflict at state: 881, token: FLOAT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 82)
Conflict at state: 881, token: DOUBLE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 83)
Conflict at state: 881, token: DECIMAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 84)
Conflict at state: 881, token: BOOL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 85)
Conflict at state: 881, token: OBJECT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 86)
Conflict at state: 881, token: VOID
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 88)
Conflict at state: 881, token: AUTO
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 89)
Conflict at state: 881, token: BASE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 333)
Conflict at state: 881, token: NEW
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 380)
Conflict at state: 881, token: TYPEOF
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 334)
Conflict at state: 881, token: SIZEOF
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 335)
Conflict at state: 881, token: CHECKED
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 381)
Conflict at state: 881, token: UNCHECKED
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 382)
Conflict at state: 881, token: PLUS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 320)
Conflict at state: 881, token: OP_COALESCING
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 322)
Conflict at state: 881, token: MINUS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 323)
Conflict at state: 881, token: BANG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 324)
Conflict at state: 881, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_XOR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_OR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_AND_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_MOD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_DIV_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_MULT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_SUB_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_ADD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: ASSIGN
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: DOT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 881, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 881, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 881, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 881, token: PERCENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: DIV
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 881, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 881, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 881, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 881, token: RIGHT_SHIFT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_LEFT_SHIFT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_GE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_LE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: GT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: LT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_NE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_EQ
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: AMP
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: CARET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: BITWISE_OR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_AND
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OP_OR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: INTERR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: COMMA
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 881, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 881, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 881, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 881, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 881, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 881, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 881, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 881, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 881, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 881, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 881, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 881, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 881, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 881, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 881, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 881, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 881, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 881, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 881, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 881, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 881, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 881, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 881, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 881, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 881, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 881, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 881, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 881, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 881, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 881, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 881, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 881, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 881, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 881, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 881, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 881, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 881, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 881, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 881, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 881, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 881, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 881, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 881, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 881, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 881, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 881, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 881, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 881, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 881, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 881, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 881, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 881, token: AS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: IS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: DOUBLE_COLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: USING
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: ENUM
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: INTERFACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: STRUCT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: EXTERN
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: READONLY
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: STATIC
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: SEALED
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: COLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: IF
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: SWITCH
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: WHILE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: DO
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: FOR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: FOREACH
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: YIELD
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: BREAK
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: GOTO
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: RETURN
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: THROW
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: TRY
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: LOCK
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: FIXED
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: UNION
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: CLASS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: EOF
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 881, token: CASE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 883, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 883, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 883, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 883, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 883, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 883, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 883, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 883, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 883, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 883, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 883, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 883, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 883, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 883, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 883, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 883, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 883, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 883, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 883, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 883, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 883, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 883, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 883, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 883, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 883, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 883, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 883, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 883, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 883, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 883, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 883, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 883, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 883, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 883, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 883, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 883, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 883, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 883, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 883, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 883, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 883, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 883, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 883, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 883, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 883, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 883, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 883, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 883, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 883, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 883, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 883, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 883, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 883, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 883, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 883, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 883, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 883, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 883, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 883, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 883, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 902, token: COMMA
  reduce by rule: field-variable-declarator -> member-name-with-double-colon
  shift token (then go to state 127)
Conflict at state: 903, token: CONST
  reduce by rule: type-with-interr -> type
  shift token (then go to state 53)
Conflict at state: 903, token: SBYTE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 73)
Conflict at state: 903, token: BYTE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 74)
Conflict at state: 903, token: SHORT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 75)
Conflict at state: 903, token: USHORT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 76)
Conflict at state: 903, token: INT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 77)
Conflict at state: 903, token: UINT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 78)
Conflict at state: 903, token: LONG
  reduce by rule: type-with-interr -> type
  shift token (then go to state 79)
Conflict at state: 903, token: ULONG
  reduce by rule: type-with-interr -> type
  shift token (then go to state 80)
Conflict at state: 903, token: CHAR
  reduce by rule: type-with-interr -> type
  shift token (then go to state 81)
Conflict at state: 903, token: FLOAT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 82)
Conflict at state: 903, token: DOUBLE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 83)
Conflict at state: 903, token: DECIMAL
  reduce by rule: type-with-interr -> type
  shift token (then go to state 84)
Conflict at state: 903, token: BOOL
  reduce by rule: type-with-interr -> type
  shift token (then go to state 85)
Conflict at state: 903, token: OBJECT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 86)
Conflict at state: 903, token: STRING
  reduce by rule: type-with-interr -> type
  shift token (then go to state 87)
Conflict at state: 903, token: VOID
  reduce by rule: type-with-interr -> type
  shift token (then go to state 88)
Conflict at state: 903, token: AUTO
  reduce by rule: type-with-interr -> type
  shift token (then go to state 89)
Conflict at state: 903, token: TILDE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 123)
Conflict at state: 903, token: ADD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 93)
Conflict at state: 903, token: REMOVE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 94)
Conflict at state: 903, token: SET
  reduce by rule: type-with-interr -> type
  shift token (then go to state 95)
Conflict at state: 903, token: PARAMS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 96)
Conflict at state: 903, token: DEFAULT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 97)
Conflict at state: 903, token: METHOD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 98)
Conflict at state: 903, token: PARAM
  reduce by rule: type-with-interr -> type
  shift token (then go to state 99)
Conflict at state: 903, token: ASSEMBLY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 100)
Conflict at state: 903, token: PROPERTY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 101)
Conflict at state: 903, token: MODULE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 102)
Conflict at state: 903, token: FIELD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 103)
Conflict at state: 903, token: TYPE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 104)
Conflict at state: 903, token: THIS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 105)
Conflict at state: 903, token: ASYNC
  reduce by rule: type-with-interr -> type
  shift token (then go to state 132)
Conflict at state: 903, token: WHERE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 106)
Conflict at state: 903, token: IDENTIFIER
  reduce by rule: type-with-interr -> type
  shift token (then go to state 70)
Conflict at state: 903, token: INTERR
  reduce by rule: type-with-interr -> type
  shift token (then go to state 181)
Conflict at state: 903, token: CONST
  reduce by rule: method-type -> type
  shift token (then go to state 53)
Conflict at state: 903, token: SBYTE
  reduce by rule: method-type -> type
  shift token (then go to state 73)
Conflict at state: 903, token: BYTE
  reduce by rule: method-type -> type
  shift token (then go to state 74)
Conflict at state: 903, token: SHORT
  reduce by rule: method-type -> type
  shift token (then go to state 75)
Conflict at state: 903, token: USHORT
  reduce by rule: method-type -> type
  shift token (then go to state 76)
Conflict at state: 903, token: INT
  reduce by rule: method-type -> type
  shift token (then go to state 77)
Conflict at state: 903, token: UINT
  reduce by rule: method-type -> type
  shift token (then go to state 78)
Conflict at state: 903, token: LONG
  reduce by rule: method-type -> type
  shift token (then go to state 79)
Conflict at state: 903, token: ULONG
  reduce by rule: method-type -> type
  shift token (then go to state 80)
Conflict at state: 903, token: CHAR
  reduce by rule: method-type -> type
  shift token (then go to state 81)
Conflict at state: 903, token: FLOAT
  reduce by rule: method-type -> type
  shift token (then go to state 82)
Conflict at state: 903, token: DOUBLE
  reduce by rule: method-type -> type
  shift token (then go to state 83)
Conflict at state: 903, token: DECIMAL
  reduce by rule: method-type -> type
  shift token (then go to state 84)
Conflict at state: 903, token: BOOL
  reduce by rule: method-type -> type
  shift token (then go to state 85)
Conflict at state: 903, token: OBJECT
  reduce by rule: method-type -> type
  shift token (then go to state 86)
Conflict at state: 903, token: STRING
  reduce by rule: method-type -> type
  shift token (then go to state 87)
Conflict at state: 903, token: VOID
  reduce by rule: method-type -> type
  shift token (then go to state 88)
Conflict at state: 903, token: AUTO
  reduce by rule: method-type -> type
  shift token (then go to state 89)
Conflict at state: 903, token: TILDE
  reduce by rule: method-type -> type
  shift token (then go to state 123)
Conflict at state: 903, token: ADD
  reduce by rule: method-type -> type
  shift token (then go to state 93)
Conflict at state: 903, token: REMOVE
  reduce by rule: method-type -> type
  shift token (then go to state 94)
Conflict at state: 903, token: SET
  reduce by rule: method-type -> type
  shift token (then go to state 95)
Conflict at state: 903, token: PARAMS
  reduce by rule: method-type -> type
  shift token (then go to state 96)
Conflict at state: 903, token: DEFAULT
  reduce by rule: method-type -> type
  shift token (then go to state 97)
Conflict at state: 903, token: METHOD
  reduce by rule: method-type -> type
  shift token (then go to state 98)
Conflict at state: 903, token: PARAM
  reduce by rule: method-type -> type
  shift token (then go to state 99)
Conflict at state: 903, token: ASSEMBLY
  reduce by rule: method-type -> type
  shift token (then go to state 100)
Conflict at state: 903, token: PROPERTY
  reduce by rule: method-type -> type
  shift token (then go to state 101)
Conflict at state: 903, token: MODULE
  reduce by rule: method-type -> type
  shift token (then go to state 102)
Conflict at state: 903, token: FIELD
  reduce by rule: method-type -> type
  shift token (then go to state 103)
Conflict at state: 903, token: TYPE
  reduce by rule: method-type -> type
  shift token (then go to state 104)
Conflict at state: 903, token: THIS
  reduce by rule: method-type -> type
  shift token (then go to state 105)
Conflict at state: 903, token: ASYNC
  reduce by rule: method-type -> type
  shift token (then go to state 132)
Conflict at state: 903, token: WHERE
  reduce by rule: method-type -> type
  shift token (then go to state 106)
Conflict at state: 903, token: IDENTIFIER
  reduce by rule: method-type -> type
  shift token (then go to state 70)
Conflict at state: 903, token: NEW
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: EXTERN
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: OVERRIDE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: VIRTUAL
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: VOLATILE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: READONLY
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: STATIC
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: SEALED
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: ABSTRACT
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: PRIVATE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: INTERNAL
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: PROTECTED
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: PARTIAL
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: PUBLIC
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: UNSAFE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: INTERR
  reduce by rule: method-type -> type
  shift token (then go to state 181)
Conflict at state: 903, token: OPEN_PARENS
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: ASSIGN
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: SEMICOLON
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: COMMA
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: CONST
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 53)
Conflict at state: 903, token: SBYTE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 73)
Conflict at state: 903, token: BYTE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 74)
Conflict at state: 903, token: SHORT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 75)
Conflict at state: 903, token: USHORT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 76)
Conflict at state: 903, token: INT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 77)
Conflict at state: 903, token: UINT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 78)
Conflict at state: 903, token: LONG
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 79)
Conflict at state: 903, token: ULONG
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 80)
Conflict at state: 903, token: CHAR
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 81)
Conflict at state: 903, token: FLOAT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 82)
Conflict at state: 903, token: DOUBLE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 83)
Conflict at state: 903, token: DECIMAL
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 84)
Conflict at state: 903, token: BOOL
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 85)
Conflict at state: 903, token: OBJECT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 86)
Conflict at state: 903, token: STRING
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 87)
Conflict at state: 903, token: VOID
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 88)
Conflict at state: 903, token: AUTO
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 89)
Conflict at state: 903, token: TILDE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 123)
Conflict at state: 903, token: ADD
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 93)
Conflict at state: 903, token: REMOVE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 94)
Conflict at state: 903, token: SET
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 95)
Conflict at state: 903, token: PARAMS
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 96)
Conflict at state: 903, token: DEFAULT
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 97)
Conflict at state: 903, token: METHOD
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 98)
Conflict at state: 903, token: PARAM
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 99)
Conflict at state: 903, token: ASSEMBLY
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 100)
Conflict at state: 903, token: PROPERTY
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 101)
Conflict at state: 903, token: MODULE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 102)
Conflict at state: 903, token: FIELD
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 103)
Conflict at state: 903, token: TYPE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 104)
Conflict at state: 903, token: THIS
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 105)
Conflict at state: 903, token: ASYNC
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 132)
Conflict at state: 903, token: WHERE
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 106)
Conflict at state: 903, token: IDENTIFIER
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 70)
Conflict at state: 903, token: NEW
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: EXTERN
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: OVERRIDE
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: VIRTUAL
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: VOLATILE
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: READONLY
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: STATIC
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: SEALED
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: ABSTRACT
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: PRIVATE
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: INTERNAL
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: PROTECTED
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: PARTIAL
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: PUBLIC
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: UNSAFE
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: INTERR
  reduce by rule: member-name-with-double-colon -> type
  shift token (then go to state 181)
Conflict at state: 903, token: OPEN_PARENS
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: ASSIGN
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: SEMICOLON
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 903, token: COMMA
  reduce by rule: member-name-with-double-colon -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 913, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 913, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 913, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 913, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 913, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 913, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 913, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 913, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 917, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: TEMPLATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: TILDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: AUTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: VOID
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: STRING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: OBJECT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: BOOL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: DECIMAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: DOUBLE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: FLOAT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: CHAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: ULONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: LONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: UINT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: INT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: USHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: SHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: BYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: SBYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: CONST
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: OVERRIDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: OPEN_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: UNSAFE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: PUBLIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: PARTIAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: PROTECTED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: INTERNAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: PRIVATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: ABSTRACT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: SEALED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: STATIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: READONLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: VOLATILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: VIRTUAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: EXTERN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: NEW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: STRUCT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: INTERFACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: ENUM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: DELEGATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: USING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: CLOSE_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: EOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: CLASS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 917, token: UNION
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 919, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 919, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 919, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 919, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 919, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1124)
Conflict at state: 919, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 919, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 919, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 919, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 920, token: COLON
  reduce by rule: conditional-expression -> conditional-or-expression INTERR expression
  shift token (then go to state 1126)
Conflict at state: 921, token: OP_AND
  reduce by rule: conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression
  shift token (then go to state 623)
Conflict at state: 923, token: BITWISE_OR
  reduce by rule: conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression
  shift token (then go to state 624)
Conflict at state: 924, token: CARET
  reduce by rule: inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression
  shift token (then go to state 625)
Conflict at state: 925, token: AMP
  reduce by rule: exclusive-or-expression -> exclusive-or-expression CARET and-expression
  shift token (then go to state 626)
Conflict at state: 926, token: OP_EQ
  reduce by rule: and-expression -> and-expression AMP equality-expression
  shift token (then go to state 627)
Conflict at state: 926, token: OP_NE
  reduce by rule: and-expression -> and-expression AMP equality-expression
  shift token (then go to state 628)
Conflict at state: 927, token: OP_COALESCING
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 633)
Conflict at state: 927, token: AS
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 635)
Conflict at state: 927, token: IS
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 634)
Conflict at state: 927, token: OP_GE
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 632)
Conflict at state: 927, token: OP_LE
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 631)
Conflict at state: 927, token: GT
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 630)
Conflict at state: 927, token: LT
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 629)
Conflict at state: 928, token: OP_COALESCING
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 633)
Conflict at state: 928, token: AS
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 635)
Conflict at state: 928, token: IS
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 634)
Conflict at state: 928, token: OP_GE
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 632)
Conflict at state: 928, token: OP_LE
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 631)
Conflict at state: 928, token: GT
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 630)
Conflict at state: 928, token: LT
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 629)
Conflict at state: 929, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression LT shift-expression
  shift token (then go to state 636)
Conflict at state: 929, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression LT shift-expression
  shift token (then go to state 637)
Conflict at state: 930, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression GT shift-expression
  shift token (then go to state 636)
Conflict at state: 930, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression GT shift-expression
  shift token (then go to state 637)
Conflict at state: 931, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_LE shift-expression
  shift token (then go to state 636)
Conflict at state: 931, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_LE shift-expression
  shift token (then go to state 637)
Conflict at state: 932, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_GE shift-expression
  shift token (then go to state 636)
Conflict at state: 932, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_GE shift-expression
  shift token (then go to state 637)
Conflict at state: 933, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_COALESCING shift-expression
  shift token (then go to state 636)
Conflict at state: 933, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_COALESCING shift-expression
  shift token (then go to state 637)
Conflict at state: 934, token: OPEN_BRACKET
  reduce by rule: relational-expression -> relational-expression IS type
  shift token (then go to state 186)
Conflict at state: 935, token: OPEN_BRACKET
  reduce by rule: relational-expression -> relational-expression AS type
  shift token (then go to state 186)
Conflict at state: 936, token: OP_COALESCING
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 640)
Conflict at state: 936, token: OP_PTR
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 639)
Conflict at state: 936, token: MINUS
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 641)
Conflict at state: 936, token: PLUS
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 638)
Conflict at state: 937, token: OP_COALESCING
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 640)
Conflict at state: 937, token: OP_PTR
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 639)
Conflict at state: 937, token: MINUS
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 641)
Conflict at state: 937, token: PLUS
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 638)
Conflict at state: 938, token: STAR
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 642)
Conflict at state: 938, token: DIV
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 643)
Conflict at state: 938, token: PERCENT
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 644)
Conflict at state: 939, token: STAR
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 642)
Conflict at state: 939, token: DIV
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 643)
Conflict at state: 939, token: PERCENT
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 644)
Conflict at state: 940, token: STAR
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 642)
Conflict at state: 940, token: DIV
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 643)
Conflict at state: 940, token: PERCENT
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 644)
Conflict at state: 941, token: STAR
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 642)
Conflict at state: 941, token: DIV
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 643)
Conflict at state: 941, token: PERCENT
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 644)
Conflict at state: 950, token: OPEN_BRACE
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 113)
Conflict at state: 950, token: SEMICOLON
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 174)
Conflict at state: 1021, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1021, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1021, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1021, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1021, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1021, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1021, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1021, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1028, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1028, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1028, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1028, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1028, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1028, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1028, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1028, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1031, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1031, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1031, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1031, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1031, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1031, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1031, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1031, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1046, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1046, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1046, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1046, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1046, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1046, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1046, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1046, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1047, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1047, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1047, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1047, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1047, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1047, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1047, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1047, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1055, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1055, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1055, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1055, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1055, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 1055, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1055, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1055, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1055, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 1055, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 1055, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 1055, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 1055, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 1055, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 1055, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 1055, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 1055, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 1055, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 1055, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 1055, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 1055, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 1055, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 1055, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1055, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 1055, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 1055, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 1055, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 1055, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 1055, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 1055, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 1055, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 1055, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 1055, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 1055, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 1055, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1055, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1055, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 1055, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1055, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1055, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 1055, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 1055, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 1055, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 1055, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 1055, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 1055, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1055, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1055, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 1055, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 1055, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 1055, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 1055, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 1055, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 1055, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 1055, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 1055, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 1055, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1055, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1055, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1055, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 1064, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1064, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1064, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1064, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1064, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1064, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1065, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1065, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1065, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1065, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1065, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1065, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1071, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 545)
Conflict at state: 1071, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1071, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1071, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 1071, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 1071, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 1071, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 1071, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 1071, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 1071, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 1071, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 1071, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 1071, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 1071, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 1071, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 1071, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 1071, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 1071, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1071, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1071, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 1071, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 1071, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 1071, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 1071, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 1071, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 1071, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 1071, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 1071, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 1071, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 1071, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 1071, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 1071, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1071, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1071, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 1071, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1071, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1071, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 1071, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 1071, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 1071, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 1071, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 1071, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 1071, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1071, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1071, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 1071, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 1071, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 1071, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 1071, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 1071, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 1071, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 1071, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 1071, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 1077, token: OPEN_BRACE
  reduce by rule: delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 545)
Conflict at state: 1079, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1079, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1079, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1079, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1079, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1079, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1079, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1079, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1080, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1080, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1080, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1080, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1080, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1080, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1082, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1082, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1082, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1082, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1082, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1082, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1083, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1083, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1083, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1083, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1083, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1083, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1083, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1083, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1084, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1215)
Conflict at state: 1084, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1084, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1084, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1084, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1087, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1087, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1087, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1087, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1087, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1219)
Conflict at state: 1087, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1087, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1087, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1087, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1088, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1088, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1088, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1088, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1099, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 1099, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 1099, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 1099, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 1099, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 1099, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 1100, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1100, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1100, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1100, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1100, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1100, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1100, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1100, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1100, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 1100, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 1100, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 1100, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 1100, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 1100, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 1100, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 1100, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 1100, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 1100, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 1100, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 1100, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 1100, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1100, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1100, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 1100, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 1100, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 1100, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 1100, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 1100, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 1100, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 1100, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 1100, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 1100, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 1100, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 1100, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1100, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1100, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 1100, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 1100, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 1100, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 1100, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 1100, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 1100, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1100, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1100, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 1100, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1100, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1100, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 1100, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 1100, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 1100, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 1100, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1100, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 1100, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 1100, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 1100, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 1100, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 1100, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 1100, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 1100, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 1100, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 1100, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1101, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1101, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1101, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1101, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1101, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1101, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1101, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1101, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1102, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1102, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1102, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1102, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1102, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1102, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1102, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1102, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1102, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 1102, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 1102, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 1102, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 1102, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 1102, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 1102, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 1102, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 1102, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 1102, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 1102, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 1102, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 1102, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1102, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1102, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 1102, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 1102, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 1102, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 1102, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 1102, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 1102, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 1102, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 1102, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 1102, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 1102, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 1102, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1102, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1102, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 1102, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 1102, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 1102, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 1102, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 1102, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 1102, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1102, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1102, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 1102, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1102, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1102, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 1102, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 1102, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 1102, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 1102, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1102, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 1102, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 1102, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 1102, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 1102, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 1102, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 1102, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 1102, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 1102, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 1102, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1103, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1103, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1103, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1103, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1103, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 186)
Conflict at state: 1103, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1103, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1103, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1103, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1104, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1104, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1104, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1104, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1104, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1104, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1104, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1104, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1104, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 1104, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 1104, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 1104, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 1104, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 1104, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 1104, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 1104, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 1104, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 1104, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 1104, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 1104, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 1104, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1104, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1104, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 1104, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 1104, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 1104, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 1104, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 1104, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 1104, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 1104, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 1104, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 1104, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 1104, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 1104, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1104, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1104, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 1104, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 1104, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 1104, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 1104, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 1104, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 1104, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1104, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1104, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 1104, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1104, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1104, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 1104, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 1104, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 1104, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 1104, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1104, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 1104, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 1104, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 1104, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 1104, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 1104, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 1104, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 1104, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 1104, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 1104, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1107, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: DIV
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: PERCENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_LEFT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: RIGHT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_EQ
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_NE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: CARET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_AND
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: BITWISE_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: AMP
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: AS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: IS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_GE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_LE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: GT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: LT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: CLOSE_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: DIV
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: PERCENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_LEFT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: RIGHT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_EQ
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_NE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: CARET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_AND
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: BITWISE_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: AS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: IS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_GE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: OP_LE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: GT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: LT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: TEMPLATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 1107, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 1108, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1108, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1108, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1108, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1108, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1108, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1108, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1108, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1108, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 1108, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 1108, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 1108, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 1108, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 1108, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 1108, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 1108, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 1108, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 1108, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 1108, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 1108, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 1108, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1108, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1108, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 1108, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 1108, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 1108, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 1108, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 1108, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 1108, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 1108, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 1108, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 1108, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 1108, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 1108, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1108, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1108, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 1108, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 1108, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 1108, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 1108, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 1108, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 1108, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1108, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1108, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 1108, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1108, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1108, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 1108, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 1108, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 1108, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 1108, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1108, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 1108, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 1108, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 1108, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 1108, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 1108, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 1108, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 1108, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 1108, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 1117, token: INTERR
  reduce by rule: type-with-interr -> type
  shift token (then go to state 181)
Conflict at state: 1117, token: CONST
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: SBYTE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: BYTE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: SHORT
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: USHORT
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: INT
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: UINT
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: LONG
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: ULONG
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: CHAR
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: FLOAT
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: DOUBLE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: DECIMAL
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: BOOL
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: OBJECT
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: STRING
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: VOID
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: AUTO
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: TILDE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: ADD
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: REMOVE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: SET
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: PARAMS
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: DEFAULT
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: METHOD
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: PARAM
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: ASSEMBLY
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: PROPERTY
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: MODULE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: FIELD
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: TYPE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: THIS
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: ASYNC
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: WHERE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: IDENTIFIER
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: NEW
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: EXTERN
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: OVERRIDE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: VIRTUAL
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: VOLATILE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: READONLY
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: STATIC
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: SEALED
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: ABSTRACT
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: PRIVATE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: INTERNAL
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: PROTECTED
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: PARTIAL
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: PUBLIC
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: UNSAFE
  reduce by rule: method-type -> type
  reduce by rule: type-with-interr -> type
Conflict at state: 1117, token: INTERR
  reduce by rule: method-type -> type
  shift token (then go to state 181)
Conflict at state: 1122, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1122, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1122, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1122, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1122, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1122, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1122, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1122, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1126, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1126, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1126, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1126, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1126, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1126, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1126, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1126, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1126, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 1126, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 1126, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 1126, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 1126, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 1126, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 1126, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 1126, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 1126, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 1126, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 1126, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 1126, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 1126, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1126, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1126, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 1126, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 1126, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 1126, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 1126, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 1126, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 1126, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 1126, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 1126, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 1126, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 1126, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 1126, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1126, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1126, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 1126, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 1126, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 1126, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 1126, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 1126, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 1126, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1126, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1126, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 1126, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1126, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1126, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 1126, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 1126, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 1126, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 1126, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1126, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 1126, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 1126, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 1126, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 1126, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 1126, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 1126, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 1126, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 1126, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 1170, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1170, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1170, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1170, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1170, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1269)
Conflict at state: 1170, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1170, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1170, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1170, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1171, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1171, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1171, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1171, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1171, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1271)
Conflict at state: 1171, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1171, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1171, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1171, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1183, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1183, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1183, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1183, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1183, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1183, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1183, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1183, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1195, token: CLOSE_BRACE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OPEN_BRACE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: SEMICOLON
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: TILDE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: IDENTIFIER
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: ADD
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: REMOVE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: SET
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: PARAMS
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: DEFAULT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: METHOD
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: PARAM
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: ASSEMBLY
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: PROPERTY
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: MODULE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: FIELD
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: TYPE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: THIS
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: ASYNC
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: WHERE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: STRING
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: COMMA
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: ASSIGN
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: INTERR
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: AMP
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: STAR
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: TRUE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: FALSE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: REAL_LITERAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: INTEGER_LITERAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: STRING_LITERAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: CHARACTER_LITERAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: NULL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OPEN_PARENS
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: DOT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: AWAIT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: DELEGATE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: STACKALLOC
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: CONST
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: SBYTE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: BYTE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: SHORT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: USHORT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: INT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: UINT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: LONG
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: ULONG
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: CHAR
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: FLOAT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: DOUBLE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: DECIMAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: BOOL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OBJECT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: VOID
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: AUTO
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_PTR
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OPEN_BRACKET
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: BASE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_INC
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_DEC
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: NEW
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: TYPEOF
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: SIZEOF
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: CHECKED
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: UNCHECKED
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_ADD_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_SUB_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_MULT_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_DIV_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_MOD_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_AND_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_OR_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_XOR_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: PLUS
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OP_COALESCING
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: MINUS
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: BANG
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: IF
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: SWITCH
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: WHILE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: DO
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: FOR
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: FOREACH
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: YIELD
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: BREAK
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: CONTINUE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: GOTO
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: RETURN
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: THROW
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: TRY
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: LOCK
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: USING
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: UNSAFE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: PUBLIC
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: PARTIAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: PROTECTED
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: INTERNAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: PRIVATE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: ABSTRACT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: SEALED
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: STATIC
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: READONLY
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: VOLATILE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: VIRTUAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: OVERRIDE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: EXTERN
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: FIXED
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1195, token: CASE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1196, token: FIXED
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: EXTERN
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OVERRIDE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: VIRTUAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: VOLATILE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: READONLY
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: STATIC
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: SEALED
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: ABSTRACT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: PRIVATE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: INTERNAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: PROTECTED
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: PARTIAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: PUBLIC
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: UNSAFE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: USING
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: LOCK
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: TRY
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: THROW
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: RETURN
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: GOTO
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: CONTINUE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: BREAK
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: YIELD
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: FOREACH
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: FOR
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: DO
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: WHILE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: SWITCH
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: IF
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: SEMICOLON
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: STAR
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: BANG
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: MINUS
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_COALESCING
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_PTR
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: PLUS
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_DEC
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_INC
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_XOR_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_OR_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_AND_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_MOD_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_DIV_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_MULT_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_SUB_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OP_ADD_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: ASSIGN
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OPEN_BRACE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: UNCHECKED
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: CHECKED
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: SIZEOF
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: TYPEOF
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: NEW
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: BASE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OPEN_BRACKET
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: AUTO
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: VOID
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OBJECT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: BOOL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: DECIMAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: DOUBLE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: FLOAT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: CHAR
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: ULONG
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: LONG
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: UINT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: INT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: USHORT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: SHORT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: BYTE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: SBYTE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: CONST
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: STACKALLOC
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: DELEGATE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: DOT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: OPEN_PARENS
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: AWAIT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: NULL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: CHARACTER_LITERAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: STRING_LITERAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: INTEGER_LITERAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: REAL_LITERAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: FALSE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: TRUE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: IDENTIFIER
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: STRING
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: WHERE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: ASYNC
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: THIS
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: TYPE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: FIELD
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: MODULE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: PROPERTY
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: ASSEMBLY
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: PARAM
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: METHOD
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: DEFAULT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: PARAMS
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: SET
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: REMOVE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: ADD
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: TILDE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: AMP
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: INTERR
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: COMMA
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: CLOSE_BRACE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1196, token: CASE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1201, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1201, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1201, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1201, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1201, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1201, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1202, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1202, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1202, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 1202, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 1202, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 1202, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 1202, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 1202, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 1202, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 1202, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 1202, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 1202, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 1202, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 1202, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 1202, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 1202, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 1202, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1202, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1202, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 1202, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 1202, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 1202, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 1202, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 1202, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 1202, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 1202, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 1202, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 1202, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 1202, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 1202, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 53)
Conflict at state: 1202, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1202, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1202, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 1202, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1202, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1202, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 1202, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 1202, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 1202, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 1202, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 1202, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 1202, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1202, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1202, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 1202, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 1202, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 1202, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 1202, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 380)
Conflict at state: 1202, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 1202, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 1202, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 1202, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 1203, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 527)
Conflict at state: 1203, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 1291)
Conflict at state: 1203, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1203, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 527)
Conflict at state: 1203, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 1291)
Conflict at state: 1203, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1203, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1203, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1205, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
  shift token (then go to state 545)
Conflict at state: 1206, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
  shift token (then go to state 545)
Conflict at state: 1207, token: OPEN_BRACE
  reduce by rule: delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS
  shift token (then go to state 545)
Conflict at state: 1210, token: ELSE
  reduce by rule: if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
  shift token (then go to state 1295)
Conflict at state: 1215, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1215, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1215, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1215, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1215, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1215, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1218, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1303)
Conflict at state: 1218, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1218, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1218, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1218, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1219, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1305)
Conflict at state: 1219, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1219, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1219, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1219, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1222, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1222, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1222, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1222, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1222, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1222, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1222, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1222, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1225, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1225, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1225, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1225, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1225, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1310)
Conflict at state: 1225, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1225, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1225, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1225, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1226, token: OPEN_BRACE
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
  shift token (then go to state 364)
Conflict at state: 1226, token: OPEN_BRACKET
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
  shift token (then go to state 186)
Conflict at state: 1227, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1227, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1227, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1227, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1227, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1227, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1228, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1228, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1228, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1228, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1228, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1228, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1237, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1237, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1237, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1237, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1237, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1237, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1237, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1237, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1238, token: OPEN_BRACE
  reduce by rule: cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
  shift token (then go to state 113)
Conflict at state: 1265, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 1327)
Conflict at state: 1267, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 1329)
Conflict at state: 1287, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1287, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1287, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1287, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1287, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1287, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1289, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 527)
Conflict at state: 1289, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 1291)
Conflict at state: 1289, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1289, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 527)
Conflict at state: 1289, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 1291)
Conflict at state: 1289, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1289, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1289, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1290, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
  shift token (then go to state 545)
Conflict at state: 1291, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1295, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1295, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1295, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1295, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1295, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1295, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1299, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1299, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1299, token: CASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 782)
Conflict at state: 1299, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 783)
Conflict at state: 1299, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1299, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 1299, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1299, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1299, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 1299, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 1299, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 1299, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 1299, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 1299, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 1299, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 1299, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 1299, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 1299, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 1299, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 56)
Conflict at state: 1299, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 1299, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 1299, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1299, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1299, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1299, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1299, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1299, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 1299, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 1299, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 1299, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 1299, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 1299, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 1299, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 1299, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 1299, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 1299, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 1299, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 1299, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1299, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1299, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 1299, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1299, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1299, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 1299, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 1299, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 1299, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 1299, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 1299, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 1299, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1299, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1299, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 1299, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 1299, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 1299, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 1299, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 285)
Conflict at state: 1299, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 1299, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 1299, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 1299, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 1299, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1299, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1299, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1299, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 1299, token: IF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 289)
Conflict at state: 1299, token: SWITCH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 290)
Conflict at state: 1299, token: WHILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 291)
Conflict at state: 1299, token: DO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 292)
Conflict at state: 1299, token: FOR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 293)
Conflict at state: 1299, token: FOREACH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 294)
Conflict at state: 1299, token: YIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 295)
Conflict at state: 1299, token: BREAK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 296)
Conflict at state: 1299, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 297)
Conflict at state: 1299, token: GOTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 298)
Conflict at state: 1299, token: RETURN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 299)
Conflict at state: 1299, token: THROW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 300)
Conflict at state: 1299, token: TRY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 274)
Conflict at state: 1299, token: LOCK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 1299, token: USING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 278)
Conflict at state: 1299, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 279)
Conflict at state: 1299, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 1299, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 58)
Conflict at state: 1299, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 1299, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 1299, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 61)
Conflict at state: 1299, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 1299, token: SEALED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 1299, token: STATIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 1299, token: READONLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 1299, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 1299, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 1299, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 1299, token: EXTERN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 1299, token: FIXED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 1302, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1302, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1302, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1302, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1302, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1302, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1303, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1303, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1303, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1303, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1303, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1303, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1305, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1305, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1305, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1305, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1305, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1305, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1307, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1365)
Conflict at state: 1307, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1307, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1307, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1307, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1311, token: OPEN_BRACE
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
  shift token (then go to state 364)
Conflict at state: 1311, token: OPEN_BRACKET
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
  shift token (then go to state 186)
Conflict at state: 1352, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
  shift token (then go to state 545)
Conflict at state: 1354, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: AMP
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: DOUBLE_COLON
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: TEMPLATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 1354, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1358, token: DEFAULT
  reduce by rule: switch-section -> switch-labels statement-list
  shift token (then go to state 97)
Conflict at state: 1358, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1358, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1358, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: switch-section -> switch-labels statement-list
Conflict at state: 1358, token: CASE
  reduce by rule: invocation-expressions -> 
  reduce by rule: switch-section -> switch-labels statement-list
Conflict at state: 1358, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 1358, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 1358, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1358, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1358, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1358, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 1358, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 1358, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 98)
Conflict at state: 1358, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 99)
Conflict at state: 1358, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 100)
Conflict at state: 1358, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 101)
Conflict at state: 1358, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 102)
Conflict at state: 1358, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 103)
Conflict at state: 1358, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 104)
Conflict at state: 1358, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 1358, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 56)
Conflict at state: 1358, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 106)
Conflict at state: 1358, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 1358, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1358, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 336)
Conflict at state: 1358, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 337)
Conflict at state: 1358, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 327)
Conflict at state: 1358, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 328)
Conflict at state: 1358, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 329)
Conflict at state: 1358, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 330)
Conflict at state: 1358, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 331)
Conflict at state: 1358, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1358, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 319)
Conflict at state: 1358, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 316)
Conflict at state: 1358, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 318)
Conflict at state: 1358, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 1358, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1358, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 74)
Conflict at state: 1358, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 1358, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1358, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 77)
Conflict at state: 1358, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 78)
Conflict at state: 1358, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 79)
Conflict at state: 1358, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 80)
Conflict at state: 1358, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 81)
Conflict at state: 1358, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 1358, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 83)
Conflict at state: 1358, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1358, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1358, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 1358, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 1358, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 1358, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1358, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 1358, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1358, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1358, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 285)
Conflict at state: 1358, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 334)
Conflict at state: 1358, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 335)
Conflict at state: 1358, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 275)
Conflict at state: 1358, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 276)
Conflict at state: 1358, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1358, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1358, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1358, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 324)
Conflict at state: 1358, token: IF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 289)
Conflict at state: 1358, token: SWITCH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 290)
Conflict at state: 1358, token: WHILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 291)
Conflict at state: 1358, token: DO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 292)
Conflict at state: 1358, token: FOR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 293)
Conflict at state: 1358, token: FOREACH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 294)
Conflict at state: 1358, token: YIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 295)
Conflict at state: 1358, token: BREAK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 296)
Conflict at state: 1358, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 297)
Conflict at state: 1358, token: GOTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 298)
Conflict at state: 1358, token: RETURN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 299)
Conflict at state: 1358, token: THROW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 300)
Conflict at state: 1358, token: TRY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 274)
Conflict at state: 1358, token: LOCK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 277)
Conflict at state: 1358, token: USING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 278)
Conflict at state: 1358, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 279)
Conflict at state: 1358, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 57)
Conflict at state: 1358, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 58)
Conflict at state: 1358, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 1358, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 60)
Conflict at state: 1358, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 61)
Conflict at state: 1358, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 1358, token: SEALED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 1358, token: STATIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 1358, token: READONLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 1358, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 1358, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 1358, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 1358, token: EXTERN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 1358, token: FIXED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 281)
Conflict at state: 1362, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1362, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1362, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1362, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1362, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1362, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1364, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1364, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1364, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1364, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1364, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1364, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1365, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1365, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1365, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1365, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1365, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1365, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1367, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1367, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1367, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1367, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1367, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1367, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1368, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)
Conflict at state: 1368, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1368, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1368, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1368, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1403)
Conflict at state: 1368, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 325)
Conflict at state: 1368, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 322)
Conflict at state: 1368, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 323)
Conflict at state: 1368, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 320)
Conflict at state: 1401, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1401, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 113)
Conflict at state: 1401, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 1401, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 288)
Conflict at state: 1401, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 1401, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 321)

7990 Conflict(s) found in grammar.
Done.
