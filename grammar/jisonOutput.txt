Processing grammar.
$accept(0)
$end(1)
error(2)
es(3)
e(4)
declaration-statement(5)
COLON_IDENTIFIER(6)
COLON(7)
IDENTIFIER_WITH_TEMPLATE(8)
BOOLEAN_LITERAL(9)
TRUE(10)
FALSE(11)
literal(12)
REAL_LITERAL(13)
INTEGER_LITERAL(14)
STRING_LITERAL(15)
CHARACTER_LITERAL(16)
NULL(17)
namespace-name(18)
namespace-or-type-name(19)
type-name(20)
DOUBLE_COLON(21)
IDENTIFIER_WITH_KEYWORD(22)
DOT(23)
IDENTIFIER(24)
TEMPLATE(25)
EMPTY_TEMPLATE(26)
LT(27)
GT(28)
STARS(29)
STAR(30)
type(31)
non-array-type(32)
array-type(33)
type-with-interr(34)
INTERR(35)
SBYTE(36)
BYTE(37)
SHORT(38)
USHORT(39)
INT(40)
UINT(41)
LONG(42)
ULONG(43)
CHAR(44)
FLOAT(45)
DOUBLE(46)
DECIMAL(47)
BOOL(48)
OBJECT(49)
STRING(50)
VOID(51)
AUTO(52)
rank-specifiers(53)
rank-specifier(54)
OPEN_BRACKET(55)
dim-separators(56)
CLOSE_BRACKET(57)
COMMA(58)
variable-reference(59)
expression(60)
argument-list(61)
argument(62)
REF(63)
OUT(64)
primary-expression(65)
primary-no-array-creation-expression(66)
array-creation-expression(67)
lambda-expression(68)
cast-expression(69)
parenthesized-expression(70)
double-colon-access(71)
member-access(72)
invocation-expressions(73)
element-access(74)
this-access(75)
base-access(76)
post-increment-expression(77)
post-decrement-expression(78)
delegate-creation-expression(79)
object-creation-expression(80)
typeof-expression(81)
sizeof-expression(82)
checked-expression(83)
unchecked-expression(84)
OP_DBLPTR(85)
block(86)
DELEGATE(87)
delegate-expression(88)
type-expression-list(89)
dbl-expression-list(90)
OPEN_PARENS(91)
CLOSE_PARENS(92)
expression-list(93)
formal-parameter-list(94)
invocation-expression(95)
OP_PTR(96)
keyword-invocation(97)
DEFAULT(98)
AWAIT(99)
THIS(100)
BASE(101)
OP_INC(102)
OP_DEC(103)
type-with-identifier(104)
NEW(105)
IDENTIFIER_WITH_DOT(106)
block-expression-with-brace(107)
argument-list-with-braces(108)
argument-list-with-brace(109)
OPEN_BRACE(110)
CLOSE_BRACE(111)
STACKALLOC(112)
array-initializer(113)
TYPEOF(114)
SIZEOF(115)
CHECKED(116)
UNCHECKED(117)
unary-expression(118)
pre-increment-expression(119)
pre-decrement-expression(120)
PLUS(121)
OP_COALESCING(122)
MINUS(123)
BANG(124)
TILDE(125)
expression-with-comma(126)
multiplicative-expression(127)
DIV(128)
PERCENT(129)
additive-expression(130)
shift-expression(131)
OP_LEFT_SHIFT(132)
RIGHT_SHIFT(133)
relational-expression(134)
OP_LE(135)
OP_GE(136)
IS(137)
AS(138)
equality-expression(139)
OP_EQ(140)
OP_NE(141)
and-expression(142)
AMP(143)
exclusive-or-expression(144)
CARET(145)
inclusive-or-expression(146)
BITWISE_OR(147)
conditional-and-expression(148)
OP_AND(149)
conditional-or-expression(150)
OP_OR(151)
conditional-expression(152)
assignment(153)
assignment-operator(154)
block-expression(155)
block-expression-list-unit(156)
block-expression-list(157)
ASSIGN(158)
OP_ADD_ASSIGNMENT(159)
OP_SUB_ASSIGNMENT(160)
OP_MULT_ASSIGNMENT(161)
OP_DIV_ASSIGNMENT(162)
OP_MOD_ASSIGNMENT(163)
OP_AND_ASSIGNMENT(164)
OP_OR_ASSIGNMENT(165)
OP_XOR_ASSIGNMENT(166)
OP_LEFT_SHIFT_ASSIGNMENT(167)
RIGHT_SHIFT_ASSIGNMENT(168)
constant-expression(169)
boolean-expression(170)
statement(171)
labeled-statement(172)
embedded-statement(173)
empty-statement(174)
statement-expression(175)
SEMICOLON(176)
selection-statement(177)
iteration-statement(178)
jump-statement(179)
try-statement(180)
checked-statement(181)
unchecked-statement(182)
lock-statement(183)
using-statement(184)
unsafe-statement(185)
fixed-statement(186)
method-declaration(187)
class-declaration(188)
modifiers(189)
FIXED(190)
local-variable-declarators(191)
UNSAFE(192)
statement-list(193)
switch-labels(194)
local-variable-declaration(195)
local-constant-declaration(196)
local-variable-declarator(197)
local-variable(198)
local-variable-initializer(199)
CONST(200)
constant-declarators(201)
constant-declarator(202)
if-statement(203)
switch-statement(204)
IF(205)
ELSE(206)
SWITCH(207)
switch-block(208)
switch-sections(209)
switch-section(210)
switch-label(211)
CASE(212)
while-statement(213)
do-statement(214)
for-statement(215)
foreach-statement(216)
WHILE(217)
DO(218)
FOR(219)
for-initializer(220)
for-condition(221)
for-iterator(222)
statement-expression-list(223)
FOREACH(224)
IN(225)
break-statement(226)
continue-statement(227)
goto-statement(228)
return-statement(229)
throw-statement(230)
YIELD(231)
BREAK(232)
CONTINUE(233)
GOTO(234)
RETURN(235)
THROW(236)
TRY(237)
catch-clauses(238)
finally-clause(239)
specific-catch-clauses(240)
general-catch-clause(241)
specific-catch-clause(242)
CATCH(243)
FINALLY(244)
LOCK(245)
USING(246)
resource-acquisition(247)
variable-initializer-list(248)
variable-initializer(249)
global-attributes(250)
global-attribute-sections(251)
global-attribute-section(252)
global-attribute-target-specifier(253)
attribute-list(254)
global-attribute-target(255)
ASSEMBLY(256)
MODULE(257)
attributes(258)
attribute-sections(259)
attribute-section(260)
attribute-target-specifier(261)
attribute-target(262)
FIELD(263)
EVENT(264)
METHOD(265)
PARAM(266)
PROPERTY(267)
TYPE(268)
attribute(269)
attribute-name(270)
attribute-arguments(271)
positional-argument-list(272)
named-argument-list(273)
positional-argument(274)
attribute-argument-expression(275)
named-argument(276)
delegate-declaration(277)
where-base(278)
enum-declaration(279)
ENUM(280)
enum-body(281)
enum-base(282)
enum-member-declarations(283)
enum-member-declaration(284)
interface-declaration(285)
INTERFACE(286)
interface-body(287)
interface-base(288)
interface-type-list(289)
interface-member-declarations(290)
interface-member-declaration(291)
interface-method-declaration(292)
interface-property-declaration(293)
interface-event-declaration(294)
interface-indexer-declaration(295)
interface-accessors(296)
GET(297)
SET(298)
struct-declaration(299)
STRUCT(300)
struct-body(301)
struct-interfaces(302)
struct-member-declarations(303)
struct-member-declaration(304)
constant-declaration(305)
field-declaration(306)
property-declaration(307)
event-declaration(308)
indexer-declaration(309)
operator-declaration(310)
constructor-declaration(311)
static-constructor-declaration(312)
type-declaration(313)
compilationUnit(314)
block_or_statement_list(315)
EOF(316)
block_or_statement(317)
namespace-declaration(318)
NAMESPACE(319)
namespace-body(320)
using-directives(321)
namespace-member-declarations(322)
using-directive(323)
using-alias-directive(324)
using-namespace-directive(325)
namespace-member-declaration(326)
modifier(327)
ASYNC(328)
PUBLIC(329)
PARTIAL(330)
PROTECTED(331)
INTERNAL(332)
PRIVATE(333)
ABSTRACT(334)
SEALED(335)
STATIC(336)
READONLY(337)
VOLATILE(338)
VIRTUAL(339)
OVERRIDE(340)
EXTERN(341)
class-key(342)
CLASS(343)
UNION(344)
class-body(345)
class-base(346)
base-list(347)
base-specifier(348)
access-specifier(349)
member-list(350)
class-member-declaration(351)
class-member-declarations(352)
class-method-declaration(353)
destructor-declaration(354)
member-name(355)
variable-declarators(356)
variable-declarator(357)
method-header(358)
member-name-with-double-colon(359)
method-body(360)
fixed-parameters(361)
parameter-array(362)
fixed-parameter(363)
ADD(364)
REMOVE(365)
PARAMS(366)
WHERE(367)
parameter-modifier(368)
accessor-declarations(369)
get-accessor-declaration(370)
set-accessor-declaration(371)
event-accessor-declarations(372)
add-accessor-declaration(373)
remove-accessor-declaration(374)
indexer-declarator(375)
operator-declarator(376)
unary-operator-declarator(377)
binary-operator-declarator(378)
conversion-operator-declarator(379)
OPERATOR(380)
overloadable-operator(381)
overloadable-unary-operator(382)
overloadable-binary-operator(383)
IMPLICIT(384)
EXPLICIT(385)
constructor-declarator(386)
constructor-initializer(387)

Item sets
------

item set 0 
$accept -> .compilationUnit $end #lookaheads= $end
compilationUnit -> .
compilationUnit -> .block_or_statement_list EOF
block_or_statement_list -> .block_or_statement_list block_or_statement
block_or_statement_list -> .block_or_statement
block_or_statement -> .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
declaration-statement -> .local-variable-declaration block
declaration-statement -> .local-constant-declaration block
declaration-statement -> .local-variable-declaration
declaration-statement -> .local-constant-declaration
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
attributes -> .attribute-sections
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"compilationUnit":1,"block_or_statement_list":2,"block_or_statement":3,"statement":4,"labeled-statement":5,"declaration-statement":6,"embedded-statement":7,"IDENTIFIER_WITH_KEYWORD":8,"local-variable-declaration":9,"local-constant-declaration":10,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"TILDE":26,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":41,"WHERE":42,"primary-expression":43,"type":44,"CONST":45,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"IDENTIFIER":76,"primary-no-array-creation-expression":77,"array-creation-expression":78,"non-array-type":79,"array-type":80,"invocation-expression":81,"NEW":82,"unary-expression":83,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"attributes":100,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"STAR":142,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"attribute-sections":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"BASE":165,"TYPEOF":166,"SIZEOF":167,"namespace-or-type-name":168,"INTERR":169,"STARS":170,"attribute-section":171,"TRUE":172,"FALSE":173,"OPEN_BRACKET":174}

item set 1 
$accept -> compilationUnit .$end #lookaheads= $end 
transitions ->  {}

item set 2 
compilationUnit -> block_or_statement_list .EOF
block_or_statement_list -> block_or_statement_list .block_or_statement
block_or_statement -> .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
declaration-statement -> .local-variable-declaration block
declaration-statement -> .local-constant-declaration block
declaration-statement -> .local-variable-declaration
declaration-statement -> .local-constant-declaration
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
attributes -> .attribute-sections
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"EOF":175,"block_or_statement":176,"statement":4,"labeled-statement":5,"declaration-statement":6,"embedded-statement":7,"IDENTIFIER_WITH_KEYWORD":8,"local-variable-declaration":9,"local-constant-declaration":10,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"TILDE":26,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":41,"WHERE":42,"primary-expression":43,"type":44,"CONST":45,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"IDENTIFIER":76,"primary-no-array-creation-expression":77,"array-creation-expression":78,"non-array-type":79,"array-type":80,"invocation-expression":81,"NEW":82,"unary-expression":83,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"attributes":100,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"STAR":142,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"attribute-sections":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"BASE":165,"TYPEOF":166,"SIZEOF":167,"namespace-or-type-name":168,"INTERR":169,"STARS":170,"attribute-section":171,"TRUE":172,"FALSE":173,"OPEN_BRACKET":174}

item set 3 
block_or_statement_list -> block_or_statement . 
transitions ->  {}

item set 4 
block_or_statement -> statement . 
transitions ->  {}

item set 5 
statement -> labeled-statement . 
transitions ->  {}

item set 6 
statement -> declaration-statement . 
transitions ->  {}

item set 7 
statement -> embedded-statement . 
transitions ->  {}

item set 8 
labeled-statement -> IDENTIFIER_WITH_KEYWORD .COLON switch-labels
labeled-statement -> IDENTIFIER_WITH_KEYWORD .COLON statement
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
local-variable -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"COLON":177,"OP_DBLPTR":178}

item set 9 
declaration-statement -> local-variable-declaration .SEMICOLON
declaration-statement -> local-variable-declaration .block
declaration-statement -> local-variable-declaration .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"SEMICOLON":179,"block":180,"OPEN_BRACE":46}

item set 10 
declaration-statement -> local-constant-declaration .SEMICOLON
declaration-statement -> local-constant-declaration .block
declaration-statement -> local-constant-declaration .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"SEMICOLON":181,"block":182,"OPEN_BRACE":46}

item set 11 
embedded-statement -> block . 
transitions ->  {}

item set 12 
embedded-statement -> empty-statement . 
transitions ->  {}

item set 13 
embedded-statement -> statement-expression .block
embedded-statement -> statement-expression .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":183,"SEMICOLON":184,"OPEN_BRACE":46}

item set 14 
embedded-statement -> selection-statement . 
transitions ->  {}

item set 15 
embedded-statement -> iteration-statement . 
transitions ->  {}

item set 16 
embedded-statement -> jump-statement . 
transitions ->  {}

item set 17 
embedded-statement -> try-statement . 
transitions ->  {}

item set 18 
embedded-statement -> checked-statement . 
transitions ->  {}

item set 19 
embedded-statement -> unchecked-statement . 
transitions ->  {}

item set 20 
embedded-statement -> lock-statement . 
transitions ->  {}

item set 21 
embedded-statement -> using-statement . 
transitions ->  {}

item set 22 
embedded-statement -> unsafe-statement . 
transitions ->  {}

item set 23 
embedded-statement -> fixed-statement . 
transitions ->  {}

item set 24 
embedded-statement -> method-declaration . 
transitions ->  {}

item set 25 
embedded-statement -> class-declaration . 
transitions ->  {}

item set 26 
IDENTIFIER_WITH_KEYWORD -> TILDE .IDENTIFIER_WITH_KEYWORD
unary-expression -> TILDE .unary-expression
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":185,"unary-expression":186,"TILDE":26,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":187,"WHERE":42,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"STAR":190,"primary-expression":191,"IDENTIFIER":76,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"type":196,"invocation-expression":81,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"TRUE":172,"FALSE":173,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 27 
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE .
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON member-access
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON invocation-expression 
transitions ->  {"DOUBLE_COLON":200}

item set 28 
IDENTIFIER_WITH_KEYWORD -> ADD . 
transitions ->  {}

item set 29 
IDENTIFIER_WITH_KEYWORD -> REMOVE . 
transitions ->  {}

item set 30 
IDENTIFIER_WITH_KEYWORD -> SET . 
transitions ->  {}

item set 31 
IDENTIFIER_WITH_KEYWORD -> PARAMS . 
transitions ->  {}

item set 32 
IDENTIFIER_WITH_KEYWORD -> DEFAULT . 
transitions ->  {}

item set 33 
IDENTIFIER_WITH_KEYWORD -> METHOD . 
transitions ->  {}

item set 34 
IDENTIFIER_WITH_KEYWORD -> PARAM . 
transitions ->  {}

item set 35 
IDENTIFIER_WITH_KEYWORD -> ASSEMBLY . 
transitions ->  {}

item set 36 
IDENTIFIER_WITH_KEYWORD -> PROPERTY . 
transitions ->  {}

item set 37 
IDENTIFIER_WITH_KEYWORD -> MODULE . 
transitions ->  {}

item set 38 
IDENTIFIER_WITH_KEYWORD -> FIELD . 
transitions ->  {}

item set 39 
IDENTIFIER_WITH_KEYWORD -> TYPE . 
transitions ->  {}

item set 40 
IDENTIFIER_WITH_KEYWORD -> THIS .
this-access -> THIS . 
transitions ->  {}

item set 41 
IDENTIFIER_WITH_KEYWORD -> ASYNC .
modifier -> ASYNC . 
transitions ->  {}

item set 42 
IDENTIFIER_WITH_KEYWORD -> WHERE . 
transitions ->  {}

item set 43 
local-variable-declaration -> primary-expression .local-variable-declarators
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":201,"OP_INC":202,"OP_DEC":203,"OPEN_PARENS":204,"DOT":205,"OP_PTR":206,"local-variable-declarator":207,"local-variable":208,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 44 
local-variable-declaration -> type .local-variable-declarators
method-header -> type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":214,"member-name-with-double-colon":215,"rank-specifiers":216,"DOT":217,"OP_PTR":218,"local-variable-declarator":207,"local-variable":219,"rank-specifier":220,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"OPEN_BRACKET":221,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 45 
local-constant-declaration -> CONST .type constant-declarators
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":222,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 46 
block -> OPEN_BRACE .CLOSE_BRACE
block -> OPEN_BRACE .statement-list CLOSE_BRACE
statement-list -> .statement
statement-list -> .statement-list statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
declaration-statement -> .local-variable-declaration block
declaration-statement -> .local-constant-declaration block
declaration-statement -> .local-variable-declaration
declaration-statement -> .local-constant-declaration
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
attributes -> .attribute-sections
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":224,"statement-list":225,"statement":226,"labeled-statement":5,"declaration-statement":6,"embedded-statement":7,"IDENTIFIER_WITH_KEYWORD":8,"local-variable-declaration":9,"local-constant-declaration":10,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"TILDE":26,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":41,"WHERE":42,"primary-expression":43,"type":44,"CONST":45,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"IDENTIFIER":76,"primary-no-array-creation-expression":77,"array-creation-expression":78,"non-array-type":79,"array-type":80,"invocation-expression":81,"NEW":82,"unary-expression":83,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"attributes":100,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"STAR":142,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"attribute-sections":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"BASE":165,"TYPEOF":166,"SIZEOF":167,"namespace-or-type-name":168,"INTERR":169,"STARS":170,"attribute-section":171,"TRUE":172,"FALSE":173,"OPEN_BRACKET":174}

item set 47 
empty-statement -> SEMICOLON . 
transitions ->  {}

item set 48 
statement-expression -> invocation-expressions .
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOT":227,"OP_PTR":228}

item set 49 
statement-expression -> object-creation-expression .
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 50 
statement-expression -> assignment . 
transitions ->  {}

item set 51 
statement-expression -> post-increment-expression .
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 52 
statement-expression -> post-decrement-expression .
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 53 
statement-expression -> pre-increment-expression .
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 54 
statement-expression -> pre-decrement-expression .
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 55 
selection-statement -> if-statement . 
transitions ->  {}

item set 56 
selection-statement -> switch-statement . 
transitions ->  {}

item set 57 
iteration-statement -> while-statement . 
transitions ->  {}

item set 58 
iteration-statement -> do-statement . 
transitions ->  {}

item set 59 
iteration-statement -> for-statement . 
transitions ->  {}

item set 60 
iteration-statement -> foreach-statement . 
transitions ->  {}

item set 61 
jump-statement -> break-statement . 
transitions ->  {}

item set 62 
jump-statement -> continue-statement . 
transitions ->  {}

item set 63 
jump-statement -> goto-statement . 
transitions ->  {}

item set 64 
jump-statement -> return-statement . 
transitions ->  {}

item set 65 
jump-statement -> throw-statement . 
transitions ->  {}

item set 66 
try-statement -> TRY .block catch-clauses
try-statement -> TRY .block finally-clause
try-statement -> TRY .block catch-clauses finally-clause
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":229,"OPEN_BRACE":46}

item set 67 
checked-statement -> CHECKED .block
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":230,"OPEN_PARENS":231,"OPEN_BRACE":46}

item set 68 
unchecked-statement -> UNCHECKED .block
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":232,"OPEN_PARENS":233,"OPEN_BRACE":46}

item set 69 
lock-statement -> LOCK .OPEN_PARENS expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":234}

item set 70 
using-statement -> USING .OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":235}

item set 71 
unsafe-statement -> UNSAFE .block
modifier -> UNSAFE .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":236,"OPEN_BRACE":46}

item set 72 
fixed-statement -> modifiers .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
modifiers -> modifiers .modifier
method-header -> modifiers .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> modifiers .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"FIXED":237,"modifier":238,"type":239,"UNSAFE":240,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"WHERE":42,"IDENTIFIER":76}

item set 73 
fixed-statement -> FIXED .OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":242}

item set 74 
method-declaration -> method-header .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":243,"OPEN_BRACE":46}

item set 75 
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":244,"IDENTIFIER":76}

item set 76 
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER . 
transitions ->  {"TEMPLATE":245}

item set 77 
primary-expression -> primary-no-array-creation-expression .
element-access -> primary-no-array-creation-expression .OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> primary-no-array-creation-expression .OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> primary-no-array-creation-expression .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":246}

item set 78 
primary-expression -> array-creation-expression . 
transitions ->  {}

item set 79 
type -> non-array-type .STARS
type -> non-array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"STARS":247,"STAR":210}

item set 80 
type -> array-type .STARS
type -> array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"STARS":248,"STAR":210}

item set 81 
invocation-expressions -> invocation-expression . 
transitions ->  {}

item set 82 
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier block-expression-with-brace
object-creation-expression -> NEW .non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .rank-specifiers
object-creation-expression -> NEW .block-expression-with-brace
modifier -> NEW .
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW .type block-expression-with-brace
type-with-identifier -> .IDENTIFIER TEMPLATE
type-with-identifier -> .non-array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type-name -> .namespace-or-type-name
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
array-type -> .type rank-specifiers
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-identifier":249,"non-array-type":250,"rank-specifiers":251,"block-expression-with-brace":252,"type":253,"IDENTIFIER":254,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"rank-specifier":220,"OPEN_BRACE":255,"array-type":80,"namespace-or-type-name":168,"OPEN_BRACKET":221,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42}

item set 83 
assignment -> unary-expression .assignment-operator expression
assignment -> unary-expression .assignment-operator block-expression-with-brace
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":256,"ASSIGN":257,"OP_ADD_ASSIGNMENT":258,"OP_SUB_ASSIGNMENT":259,"OP_MULT_ASSIGNMENT":260,"OP_DIV_ASSIGNMENT":261,"OP_MOD_ASSIGNMENT":262,"OP_AND_ASSIGNMENT":263,"OP_OR_ASSIGNMENT":264,"OP_XOR_ASSIGNMENT":265,"OP_LEFT_SHIFT_ASSIGNMENT":266,"RIGHT_SHIFT_ASSIGNMENT":267}

item set 84 
pre-increment-expression -> OP_INC .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":268,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 85 
pre-decrement-expression -> OP_DEC .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":270,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 86 
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"OPEN_PARENS":271}

item set 87 
switch-statement -> SWITCH .OPEN_PARENS expression CLOSE_PARENS switch-block 
transitions ->  {"OPEN_PARENS":272}

item set 88 
while-statement -> WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":273}

item set 89 
do-statement -> DO .embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":274,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 90 
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":277}

item set 91 
foreach-statement -> FOREACH .OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":278}

item set 92 
break-statement -> YIELD .BREAK SEMICOLON
return-statement -> YIELD .RETURN block-expression-with-brace SEMICOLON
return-statement -> YIELD .RETURN expression SEMICOLON
return-statement -> YIELD .RETURN SEMICOLON 
transitions ->  {"BREAK":279,"RETURN":280}

item set 93 
break-statement -> BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":281}

item set 94 
continue-statement -> CONTINUE .SEMICOLON 
transitions ->  {"SEMICOLON":282}

item set 95 
goto-statement -> GOTO .IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> GOTO .CASE constant-expression SEMICOLON
goto-statement -> GOTO .DEFAULT SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":283,"CASE":284,"DEFAULT":285,"IDENTIFIER":76}

item set 96 
return-statement -> RETURN .block-expression-with-brace SEMICOLON
return-statement -> RETURN .SEMICOLON
return-statement -> RETURN .expression SEMICOLON
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-with-brace":286,"SEMICOLON":287,"expression":288,"OPEN_BRACE":255,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 97 
throw-statement -> THROW .SEMICOLON
throw-statement -> THROW .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":302,"expression":303,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 98 
modifiers -> modifier . 
transitions ->  {}

item set 99 
method-header -> member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":304}

item set 100 
method-header -> attributes .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> attributes .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
modifiers -> .modifier
modifiers -> .modifiers modifier
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":305,"modifiers":306,"non-array-type":79,"array-type":80,"modifier":98,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"UNSAFE":240,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"WHERE":42,"IDENTIFIER":76}

item set 101 
primary-no-array-creation-expression -> literal . 
transitions ->  {}

item set 102 
primary-no-array-creation-expression -> lambda-expression . 
transitions ->  {}

item set 103 
primary-no-array-creation-expression -> cast-expression . 
transitions ->  {}

item set 104 
primary-no-array-creation-expression -> parenthesized-expression . 
transitions ->  {}

item set 105 
primary-no-array-creation-expression -> double-colon-access . 
transitions ->  {}

item set 106 
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 107 
primary-no-array-creation-expression -> element-access . 
transitions ->  {}

item set 108 
primary-no-array-creation-expression -> this-access . 
transitions ->  {}

item set 109 
primary-no-array-creation-expression -> base-access . 
transitions ->  {}

item set 110 
primary-no-array-creation-expression -> delegate-creation-expression . 
transitions ->  {}

item set 111 
primary-no-array-creation-expression -> typeof-expression . 
transitions ->  {}

item set 112 
primary-no-array-creation-expression -> sizeof-expression . 
transitions ->  {}

item set 113 
primary-no-array-creation-expression -> checked-expression . 
transitions ->  {}

item set 114 
primary-no-array-creation-expression -> unchecked-expression . 
transitions ->  {}

item set 115 
primary-no-array-creation-expression -> DELEGATE .block
delegate-expression -> DELEGATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> DELEGATE .OPEN_PARENS CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":307,"OPEN_PARENS":308,"OPEN_BRACE":46}

item set 116 
primary-no-array-creation-expression -> delegate-expression . 
transitions ->  {}

item set 117 
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> STACKALLOC .array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"non-array-type":309,"array-type":310,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"type":311,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 118 
non-array-type -> type-name . 
transitions ->  {}

item set 119 
non-array-type -> SBYTE . 
transitions ->  {}

item set 120 
non-array-type -> BYTE . 
transitions ->  {}

item set 121 
non-array-type -> SHORT . 
transitions ->  {}

item set 122 
non-array-type -> USHORT . 
transitions ->  {}

item set 123 
non-array-type -> INT . 
transitions ->  {}

item set 124 
non-array-type -> UINT . 
transitions ->  {}

item set 125 
non-array-type -> LONG . 
transitions ->  {}

item set 126 
non-array-type -> ULONG . 
transitions ->  {}

item set 127 
non-array-type -> CHAR . 
transitions ->  {}

item set 128 
non-array-type -> FLOAT . 
transitions ->  {}

item set 129 
non-array-type -> DOUBLE . 
transitions ->  {}

item set 130 
non-array-type -> DECIMAL . 
transitions ->  {}

item set 131 
non-array-type -> BOOL . 
transitions ->  {}

item set 132 
non-array-type -> OBJECT . 
transitions ->  {}

item set 133 
non-array-type -> STRING . 
transitions ->  {}

item set 134 
non-array-type -> VOID . 
transitions ->  {}

item set 135 
non-array-type -> AUTO . 
transitions ->  {}

item set 136 
invocation-expression -> AWAIT .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> AWAIT .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> AWAIT .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"primary-expression":312,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 137 
unary-expression -> PLUS .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":313,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 138 
unary-expression -> OP_PTR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":314,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 139 
unary-expression -> OP_COALESCING .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":315,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 140 
unary-expression -> MINUS .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":316,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 141 
unary-expression -> BANG .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":317,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 142 
unary-expression -> STAR .unary-expression
STARS -> STAR .
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":318,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 143 
modifier -> PUBLIC . 
transitions ->  {}

item set 144 
modifier -> PARTIAL . 
transitions ->  {}

item set 145 
modifier -> PROTECTED . 
transitions ->  {}

item set 146 
modifier -> INTERNAL . 
transitions ->  {}

item set 147 
modifier -> PRIVATE . 
transitions ->  {}

item set 148 
modifier -> ABSTRACT . 
transitions ->  {}

item set 149 
modifier -> SEALED . 
transitions ->  {}

item set 150 
modifier -> STATIC . 
transitions ->  {}

item set 151 
modifier -> READONLY . 
transitions ->  {}

item set 152 
modifier -> VOLATILE . 
transitions ->  {}

item set 153 
modifier -> VIRTUAL . 
transitions ->  {}

item set 154 
modifier -> OVERRIDE . 
transitions ->  {}

item set 155 
modifier -> EXTERN . 
transitions ->  {}

item set 156 
member-name-with-double-colon -> local-variable .DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> local-variable .DOUBLE_COLON local-variable
member-name-with-double-colon -> local-variable . 
transitions ->  {"DOUBLE_COLON":319}

item set 157 
attributes -> attribute-sections .
attribute-sections -> attribute-sections .attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attribute-section":320,"OPEN_BRACKET":174}

item set 158 
literal -> BOOLEAN_LITERAL . 
transitions ->  {}

item set 159 
literal -> REAL_LITERAL . 
transitions ->  {}

item set 160 
literal -> INTEGER_LITERAL . 
transitions ->  {}

item set 161 
literal -> STRING_LITERAL . 
transitions ->  {}

item set 162 
literal -> CHARACTER_LITERAL . 
transitions ->  {}

item set 163 
literal -> NULL . 
transitions ->  {}

item set 164 
lambda-expression -> OPEN_PARENS .dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> OPEN_PARENS .type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> OPEN_PARENS .expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> OPEN_PARENS .type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS expression
cast-expression -> OPEN_PARENS .type-with-interr CLOSE_PARENS expression
parenthesized-expression -> OPEN_PARENS .expression CLOSE_PARENS
dbl-expression-list -> .dbl-expression-list COMMA expression expression
dbl-expression-list -> .expression expression
type-expression-list -> .type-expression-list COMMA type expression
type-expression-list -> .type expression
expression-list -> .expression
expression-list -> .expression-list COMMA expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
expression -> .conditional-expression
expression -> .assignment
type-with-interr -> .type INTERR
type-with-interr -> .type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
type-name -> .namespace-or-type-name
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"dbl-expression-list":321,"type-expression-list":322,"expression-list":323,"type":324,"expression":325,"type-with-interr":326,"non-array-type":79,"array-type":80,"conditional-expression":289,"assignment":290,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"conditional-or-expression":291,"unary-expression":292,"namespace-or-type-name":168,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"IDENTIFIER_WITH_KEYWORD":269,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":187,"WHERE":42,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"IDENTIFIER":76,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"invocation-expression":81,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"equality-expression":297,"TRUE":172,"FALSE":173,"AWAIT":136,"relational-expression":298,"shift-expression":299,"additive-expression":300,"multiplicative-expression":301}

item set 165 
base-access -> BASE .DOT IDENTIFIER_WITH_TEMPLATE
base-access -> BASE .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"DOT":327,"OPEN_BRACKET":328}

item set 166 
typeof-expression -> TYPEOF .OPEN_PARENS type-with-interr CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":329}

item set 167 
sizeof-expression -> SIZEOF .OPEN_PARENS type-with-interr CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":330}

item set 168 
type-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOUBLE_COLON":331,"DOT":332}

item set 169 
local-variable -> INTERR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":333,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 170 
local-variable -> STARS .IDENTIFIER_WITH_KEYWORD
STARS -> STARS .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":334,"STAR":335,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 171 
attribute-sections -> attribute-section . 
transitions ->  {}

item set 172 
BOOLEAN_LITERAL -> TRUE . 
transitions ->  {}

item set 173 
BOOLEAN_LITERAL -> FALSE . 
transitions ->  {}

item set 174 
attribute-section -> OPEN_BRACKET .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute-target-specifier -> .attribute-target COLON
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-target -> .FIELD
attribute-target -> .EVENT
attribute-target -> .METHOD
attribute-target -> .PARAM
attribute-target -> .PROPERTY
attribute-target -> .RETURN
attribute-target -> .TYPE
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"attribute-list":336,"attribute-target-specifier":337,"attribute":338,"attribute-target":339,"attribute-name":340,"FIELD":341,"EVENT":342,"METHOD":343,"PARAM":344,"PROPERTY":345,"RETURN":346,"TYPE":347,"type-name":348,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"ASSEMBLY":35,"MODULE":37,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 175 
compilationUnit -> block_or_statement_list EOF . 
transitions ->  {}

item set 176 
block_or_statement_list -> block_or_statement_list block_or_statement . 
transitions ->  {}

item set 177 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON .switch-labels
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON .statement
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
declaration-statement -> .local-variable-declaration block
declaration-statement -> .local-constant-declaration block
declaration-statement -> .local-variable-declaration
declaration-statement -> .local-constant-declaration
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
attributes -> .attribute-sections
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"switch-labels":349,"statement":350,"switch-label":351,"labeled-statement":5,"declaration-statement":6,"embedded-statement":7,"CASE":352,"DEFAULT":353,"IDENTIFIER_WITH_KEYWORD":8,"local-variable-declaration":9,"local-constant-declaration":10,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"TILDE":26,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":41,"WHERE":42,"primary-expression":43,"type":44,"CONST":45,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"IDENTIFIER":76,"primary-no-array-creation-expression":77,"array-creation-expression":78,"non-array-type":79,"array-type":80,"invocation-expression":81,"NEW":82,"unary-expression":83,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"attributes":100,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"STAR":142,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"attribute-sections":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"BASE":165,"TYPEOF":166,"SIZEOF":167,"namespace-or-type-name":168,"INTERR":169,"STARS":170,"attribute-section":171,"TRUE":172,"FALSE":173,"OPEN_BRACKET":174}

item set 178 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR .expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":354,"block":355,"conditional-expression":289,"assignment":290,"OPEN_BRACE":46,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 179 
declaration-statement -> local-variable-declaration SEMICOLON . 
transitions ->  {}

item set 180 
declaration-statement -> local-variable-declaration block . 
transitions ->  {}

item set 181 
declaration-statement -> local-constant-declaration SEMICOLON . 
transitions ->  {}

item set 182 
declaration-statement -> local-constant-declaration block . 
transitions ->  {}

item set 183 
embedded-statement -> statement-expression block . 
transitions ->  {}

item set 184 
embedded-statement -> statement-expression SEMICOLON . 
transitions ->  {}

item set 185 
IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":178}

item set 186 
unary-expression -> TILDE unary-expression . 
transitions ->  {}

item set 187 
IDENTIFIER_WITH_KEYWORD -> ASYNC . 
transitions ->  {}

item set 188 
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 189 
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 190 
unary-expression -> STAR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":318,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 191 
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"DOT":205,"OP_PTR":206,"OP_INC":202,"OP_DEC":203,"OPEN_PARENS":204}

item set 192 
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> invocation-expressions .DOT invocation-expression 
transitions ->  {"DOT":227,"OP_PTR":228}

item set 193 
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 194 
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 195 
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 196 
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"DOT":217,"OP_PTR":218,"rank-specifiers":216,"rank-specifier":220,"OPEN_BRACKET":221}

item set 197 
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW .type block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier block-expression-with-brace
object-creation-expression -> NEW .non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .rank-specifiers
object-creation-expression -> NEW .block-expression-with-brace
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type-with-identifier -> .IDENTIFIER TEMPLATE
type-with-identifier -> .non-array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":253,"type-with-identifier":249,"non-array-type":250,"rank-specifiers":251,"block-expression-with-brace":252,"array-type":80,"IDENTIFIER":254,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"rank-specifier":220,"OPEN_BRACE":255,"namespace-or-type-name":168,"OPEN_BRACKET":221,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42}

item set 198 
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":231}

item set 199 
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":233}

item set 200 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON .member-access
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON .invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"member-access":356,"invocation-expression":357,"invocation-expressions":192,"primary-expression":358,"type":196,"AWAIT":136,"primary-no-array-creation-expression":77,"array-creation-expression":78,"non-array-type":79,"array-type":80,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"namespace-or-type-name":168,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 201 
local-variable-declaration -> primary-expression local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":359}

item set 202 
post-increment-expression -> primary-expression OP_INC . 
transitions ->  {}

item set 203 
post-decrement-expression -> primary-expression OP_DEC . 
transitions ->  {}

item set 204 
invocation-expression -> primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
type-name -> .namespace-or-type-name
expression -> .conditional-expression
expression -> .assignment
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":360,"argument-list":361,"CLOSE_PARENS":362,"non-array-type":79,"array-type":80,"argument":363,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"expression":364,"REF":365,"OUT":366,"namespace-or-type-name":168,"conditional-expression":289,"assignment":290,"IDENTIFIER_WITH_KEYWORD":269,"conditional-or-expression":291,"unary-expression":292,"TILDE":26,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":187,"WHERE":42,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"STAR":190,"primary-expression":191,"IDENTIFIER":76,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"invocation-expression":81,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"equality-expression":297,"TRUE":172,"FALSE":173,"AWAIT":136,"relational-expression":298,"shift-expression":299,"additive-expression":300,"multiplicative-expression":301}

item set 205 
member-access -> primary-expression DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":367,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 206 
member-access -> primary-expression OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":368,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 207 
local-variable-declarators -> local-variable-declarator . 
transitions ->  {}

item set 208 
local-variable-declarator -> local-variable .
local-variable-declarator -> local-variable .ASSIGN local-variable-initializer 
transitions ->  {"ASSIGN":369}

item set 209 
local-variable -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 210 
STARS -> STAR . 
transitions ->  {}

item set 211 
IDENTIFIER_WITH_KEYWORD -> TILDE .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":370,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 212 
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 213 
IDENTIFIER_WITH_KEYWORD -> THIS . 
transitions ->  {}

item set 214 
local-variable-declaration -> type local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":359}

item set 215 
method-header -> type member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
method-header -> type member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":371}

item set 216 
array-type -> type rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifier":372,"OPEN_BRACKET":221}

item set 217 
member-access -> type DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":373,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 218 
member-access -> type OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":374,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 219 
member-name-with-double-colon -> local-variable .DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> local-variable .DOUBLE_COLON local-variable
member-name-with-double-colon -> local-variable .
local-variable-declarator -> local-variable .
local-variable-declarator -> local-variable .ASSIGN local-variable-initializer 
transitions ->  {"DOUBLE_COLON":319,"ASSIGN":369}

item set 220 
rank-specifiers -> rank-specifier . 
transitions ->  {}

item set 221 
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA 
transitions ->  {"dim-separators":375,"CLOSE_BRACKET":376,"COMMA":377}

item set 222 
local-constant-declaration -> CONST type .constant-declarators
array-type -> type .rank-specifiers
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":378,"rank-specifiers":216,"constant-declarator":379,"rank-specifier":220,"IDENTIFIER_WITH_TEMPLATE":380,"OPEN_BRACKET":221,"IDENTIFIER":76}

item set 223 
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 224 
block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 225 
block -> OPEN_BRACE statement-list .CLOSE_BRACE
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
declaration-statement -> .local-variable-declaration block
declaration-statement -> .local-constant-declaration block
declaration-statement -> .local-variable-declaration
declaration-statement -> .local-constant-declaration
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
attributes -> .attribute-sections
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":381,"statement":382,"labeled-statement":5,"declaration-statement":6,"embedded-statement":7,"IDENTIFIER_WITH_KEYWORD":8,"local-variable-declaration":9,"local-constant-declaration":10,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"TILDE":26,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":41,"WHERE":42,"primary-expression":43,"type":44,"CONST":45,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"IDENTIFIER":76,"primary-no-array-creation-expression":77,"array-creation-expression":78,"non-array-type":79,"array-type":80,"invocation-expression":81,"NEW":82,"unary-expression":83,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"attributes":100,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"STAR":142,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"attribute-sections":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"BASE":165,"TYPEOF":166,"SIZEOF":167,"namespace-or-type-name":168,"INTERR":169,"STARS":170,"attribute-section":171,"TRUE":172,"FALSE":173,"OPEN_BRACKET":174}

item set 226 
statement-list -> statement . 
transitions ->  {}

item set 227 
invocation-expressions -> invocation-expressions DOT .invocation-expression
member-access -> invocation-expressions DOT .IDENTIFIER_WITH_KEYWORD
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expression":383,"IDENTIFIER_WITH_KEYWORD":384,"AWAIT":136,"primary-expression":358,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":187,"WHERE":42,"primary-no-array-creation-expression":77,"array-creation-expression":78,"IDENTIFIER":76,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"type":196,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"TRUE":172,"FALSE":173,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 228 
member-access -> invocation-expressions OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":385,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 229 
try-statement -> TRY block .catch-clauses
try-statement -> TRY block .finally-clause
try-statement -> TRY block .catch-clauses finally-clause
catch-clauses -> .specific-catch-clauses
catch-clauses -> .general-catch-clause
catch-clauses -> .specific-catch-clauses general-catch-clause
finally-clause -> .FINALLY block
specific-catch-clauses -> .specific-catch-clause
specific-catch-clauses -> .specific-catch-clauses specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block 
transitions ->  {"catch-clauses":386,"finally-clause":387,"specific-catch-clauses":388,"general-catch-clause":389,"FINALLY":390,"specific-catch-clause":391,"CATCH":392}

item set 230 
checked-statement -> CHECKED block . 
transitions ->  {}

item set 231 
checked-expression -> CHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":393,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 232 
unchecked-statement -> UNCHECKED block . 
transitions ->  {}

item set 233 
unchecked-expression -> UNCHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":394,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 234 
lock-statement -> LOCK OPEN_PARENS .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":395,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 235 
using-statement -> USING OPEN_PARENS .resource-acquisition CLOSE_PARENS embedded-statement
resource-acquisition -> .local-variable-declaration
resource-acquisition -> .expression
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
expression -> .conditional-expression
expression -> .assignment
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"resource-acquisition":396,"local-variable-declaration":397,"expression":398,"primary-expression":43,"type":399,"conditional-expression":289,"assignment":290,"primary-no-array-creation-expression":77,"array-creation-expression":78,"non-array-type":79,"array-type":80,"conditional-or-expression":291,"unary-expression":292,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"namespace-or-type-name":168,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"AWAIT":136,"exclusive-or-expression":295,"and-expression":296,"equality-expression":297,"relational-expression":298,"shift-expression":299,"additive-expression":300,"multiplicative-expression":301}

item set 236 
unsafe-statement -> UNSAFE block . 
transitions ->  {}

item set 237 
fixed-statement -> modifiers FIXED .OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":400}

item set 238 
modifiers -> modifiers modifier . 
transitions ->  {}

item set 239 
method-header -> modifiers type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> modifiers type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
array-type -> type .rank-specifiers
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":401,"rank-specifiers":216,"local-variable":156,"rank-specifier":220,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"OPEN_BRACKET":221,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 240 
modifier -> UNSAFE . 
transitions ->  {}

item set 241 
modifier -> NEW . 
transitions ->  {}

item set 242 
fixed-statement -> FIXED OPEN_PARENS .type local-variable-declarators CLOSE_PARENS embedded-statement
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":402,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 243 
method-declaration -> method-header block . 
transitions ->  {}

item set 244 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .SEMICOLON
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .class-base class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .class-body SEMICOLON
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .class-base class-body SEMICOLON
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE member-list CLOSE_BRACE
class-base -> .COLON base-list
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"SEMICOLON":403,"class-body":404,"class-base":405,"IDENTIFIER_WITH_TEMPLATE":406,"OPEN_BRACE":407,"COLON":408,"IDENTIFIER":76}

item set 245 
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE . 
transitions ->  {}

item set 246 
element-access -> primary-no-array-creation-expression OPEN_BRACKET .expression-list CLOSE_BRACKET
element-access -> primary-no-array-creation-expression OPEN_BRACKET .dim-separators CLOSE_BRACKET
element-access -> primary-no-array-creation-expression OPEN_BRACKET .CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":409,"dim-separators":410,"CLOSE_BRACKET":411,"expression":412,"COMMA":377,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 247 
type -> non-array-type STARS .
STARS -> STARS .STAR 
transitions ->  {"STAR":335}

item set 248 
type -> array-type STARS .
STARS -> STARS .STAR 
transitions ->  {"STAR":335}

item set 249 
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_BRACKET argument-list CLOSE_BRACKET
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_PARENS":413,"block-expression-with-brace":414,"rank-specifiers":415,"OPEN_BRACKET":416,"OPEN_BRACE":255,"rank-specifier":220}

item set 250 
object-creation-expression -> NEW non-array-type .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW non-array-type .OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type .OPEN_BRACKET argument-list CLOSE_BRACKET
type-with-identifier -> non-array-type .
type -> non-array-type .STARS
type -> non-array-type .
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
STARS -> .STARS STAR
STARS -> .STAR
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":417,"OPEN_BRACKET":418,"STARS":247,"rank-specifier":220,"STAR":210}

item set 251 
object-creation-expression -> NEW rank-specifiers .block-expression-with-brace
object-creation-expression -> NEW rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":419,"rank-specifier":372,"OPEN_BRACE":255,"OPEN_BRACKET":221}

item set 252 
object-creation-expression -> NEW block-expression-with-brace . 
transitions ->  {}

item set 253 
delegate-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW type .block-expression-with-brace
array-type -> type .rank-specifiers
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_PARENS":420,"block-expression-with-brace":421,"rank-specifiers":216,"OPEN_BRACE":255,"rank-specifier":220,"OPEN_BRACKET":221}

item set 254 
type-with-identifier -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER . 
transitions ->  {"TEMPLATE":422}

item set 255 
block-expression-with-brace -> OPEN_BRACE .block-expression-list CLOSE_BRACE
block-expression-list -> .block-expression-list COMMA block-expression-list-unit
block-expression-list -> .block-expression-list-unit
block-expression-list-unit -> .block-expression-with-brace
block-expression-list-unit -> .expression
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-list":423,"block-expression-list-unit":424,"block-expression-with-brace":425,"expression":426,"OPEN_BRACE":255,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 256 
assignment -> unary-expression assignment-operator .expression
assignment -> unary-expression assignment-operator .block-expression-with-brace
expression -> .conditional-expression
expression -> .assignment
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":427,"block-expression-with-brace":428,"conditional-expression":289,"assignment":290,"OPEN_BRACE":255,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 257 
assignment-operator -> ASSIGN . 
transitions ->  {}

item set 258 
assignment-operator -> OP_ADD_ASSIGNMENT . 
transitions ->  {}

item set 259 
assignment-operator -> OP_SUB_ASSIGNMENT . 
transitions ->  {}

item set 260 
assignment-operator -> OP_MULT_ASSIGNMENT . 
transitions ->  {}

item set 261 
assignment-operator -> OP_DIV_ASSIGNMENT . 
transitions ->  {}

item set 262 
assignment-operator -> OP_MOD_ASSIGNMENT . 
transitions ->  {}

item set 263 
assignment-operator -> OP_AND_ASSIGNMENT . 
transitions ->  {}

item set 264 
assignment-operator -> OP_OR_ASSIGNMENT . 
transitions ->  {}

item set 265 
assignment-operator -> OP_XOR_ASSIGNMENT . 
transitions ->  {}

item set 266 
assignment-operator -> OP_LEFT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 267 
assignment-operator -> RIGHT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 268 
pre-increment-expression -> OP_INC unary-expression . 
transitions ->  {}

item set 269 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":178}

item set 270 
pre-decrement-expression -> OP_DEC unary-expression . 
transitions ->  {}

item set 271 
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":429,"expression":430,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 272 
switch-statement -> SWITCH OPEN_PARENS .expression CLOSE_PARENS switch-block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":431,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 273 
while-statement -> WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":432,"expression":430,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 274 
do-statement -> DO embedded-statement .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"WHILE":433}

item set 275 
method-header -> type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":215,"rank-specifiers":216,"DOT":217,"OP_PTR":218,"local-variable":156,"rank-specifier":220,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"OPEN_BRACKET":221,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 276 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
local-variable -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":178}

item set 277 
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-initializer -> .local-variable-declaration
for-initializer -> .statement-expression-list
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"SEMICOLON":434,"for-initializer":435,"local-variable-declaration":436,"statement-expression-list":437,"primary-expression":43,"type":399,"statement-expression":438,"primary-no-array-creation-expression":77,"array-creation-expression":78,"non-array-type":79,"array-type":80,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"invocation-expression":81,"NEW":197,"unary-expression":83,"OP_INC":84,"OP_DEC":85,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"TILDE":26,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"namespace-or-type-name":168,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"STAR":190,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 278 
foreach-statement -> FOREACH OPEN_PARENS .type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":439,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 279 
break-statement -> YIELD BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":440}

item set 280 
return-statement -> YIELD RETURN .block-expression-with-brace SEMICOLON
return-statement -> YIELD RETURN .expression SEMICOLON
return-statement -> YIELD RETURN .SEMICOLON
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-with-brace":441,"expression":442,"SEMICOLON":443,"OPEN_BRACE":255,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 281 
break-statement -> BREAK SEMICOLON . 
transitions ->  {}

item set 282 
continue-statement -> CONTINUE SEMICOLON . 
transitions ->  {}

item set 283 
goto-statement -> GOTO IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":444}

item set 284 
goto-statement -> GOTO CASE .constant-expression SEMICOLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":445,"expression":446,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 285 
goto-statement -> GOTO DEFAULT .SEMICOLON 
transitions ->  {"SEMICOLON":447}

item set 286 
return-statement -> RETURN block-expression-with-brace .SEMICOLON 
transitions ->  {"SEMICOLON":448}

item set 287 
return-statement -> RETURN SEMICOLON . 
transitions ->  {}

item set 288 
return-statement -> RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":449}

item set 289 
expression -> conditional-expression . 
transitions ->  {}

item set 290 
expression -> assignment . 
transitions ->  {}

item set 291 
conditional-expression -> conditional-or-expression .
conditional-expression -> conditional-or-expression .INTERR expression
conditional-expression -> conditional-or-expression .INTERR expression COLON expression
conditional-or-expression -> conditional-or-expression .OP_OR conditional-and-expression 
transitions ->  {"INTERR":450,"OP_OR":451}

item set 292 
assignment -> unary-expression .assignment-operator expression
assignment -> unary-expression .assignment-operator block-expression-with-brace
multiplicative-expression -> unary-expression .
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":256,"ASSIGN":257,"OP_ADD_ASSIGNMENT":258,"OP_SUB_ASSIGNMENT":259,"OP_MULT_ASSIGNMENT":260,"OP_DIV_ASSIGNMENT":261,"OP_MOD_ASSIGNMENT":262,"OP_AND_ASSIGNMENT":263,"OP_OR_ASSIGNMENT":264,"OP_XOR_ASSIGNMENT":265,"OP_LEFT_SHIFT_ASSIGNMENT":266,"RIGHT_SHIFT_ASSIGNMENT":267}

item set 293 
conditional-or-expression -> conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":452}

item set 294 
conditional-and-expression -> inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":453}

item set 295 
inclusive-or-expression -> exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":454}

item set 296 
exclusive-or-expression -> and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":455}

item set 297 
and-expression -> equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":456,"OP_NE":457}

item set 298 
equality-expression -> relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":458,"GT":459,"OP_LE":460,"OP_GE":461,"OP_COALESCING":462,"IS":463,"AS":464}

item set 299 
relational-expression -> shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":465,"RIGHT_SHIFT":466}

item set 300 
shift-expression -> additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":467,"OP_PTR":468,"OP_COALESCING":469,"MINUS":470}

item set 301 
additive-expression -> multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":471,"DIV":472,"PERCENT":473}

item set 302 
throw-statement -> THROW SEMICOLON . 
transitions ->  {}

item set 303 
throw-statement -> THROW expression .SEMICOLON 
transitions ->  {"SEMICOLON":474}

item set 304 
method-header -> member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
method-header -> member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":475,"CLOSE_PARENS":476,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 305 
method-header -> attributes type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
array-type -> type .rank-specifiers
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":488,"rank-specifiers":216,"local-variable":156,"rank-specifier":220,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"OPEN_BRACKET":221,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 306 
method-header -> attributes modifiers .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes modifiers .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
modifiers -> modifiers .modifier
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":489,"modifier":238,"non-array-type":79,"array-type":80,"UNSAFE":240,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"WHERE":42,"IDENTIFIER":76}

item set 307 
primary-no-array-creation-expression -> DELEGATE block . 
transitions ->  {}

item set 308 
delegate-expression -> DELEGATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS block
delegate-expression -> DELEGATE OPEN_PARENS .CLOSE_PARENS block
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":490,"CLOSE_PARENS":491,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 309 
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
type -> non-array-type .STARS
type -> non-array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"OPEN_BRACKET":492,"STARS":247,"STAR":210}

item set 310 
array-creation-expression -> STACKALLOC array-type .array-initializer
type -> array-type .STARS
type -> array-type .
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"array-initializer":493,"STARS":248,"OPEN_BRACE":494,"STAR":210}

item set 311 
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":216,"rank-specifier":220,"OPEN_BRACKET":221}

item set 312 
invocation-expression -> AWAIT primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> AWAIT primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> AWAIT primary-expression .OPEN_PARENS CLOSE_PARENS
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":495,"DOT":205,"OP_PTR":206,"OP_INC":202,"OP_DEC":203}

item set 313 
unary-expression -> PLUS unary-expression . 
transitions ->  {}

item set 314 
unary-expression -> OP_PTR unary-expression . 
transitions ->  {}

item set 315 
unary-expression -> OP_COALESCING unary-expression . 
transitions ->  {}

item set 316 
unary-expression -> MINUS unary-expression . 
transitions ->  {}

item set 317 
unary-expression -> BANG unary-expression . 
transitions ->  {}

item set 318 
unary-expression -> STAR unary-expression . 
transitions ->  {}

item set 319 
member-name-with-double-colon -> local-variable DOUBLE_COLON .TILDE local-variable
member-name-with-double-colon -> local-variable DOUBLE_COLON .local-variable
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"TILDE":496,"local-variable":497,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"STAR":210,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 320 
attribute-sections -> attribute-sections attribute-section . 
transitions ->  {}

item set 321 
lambda-expression -> OPEN_PARENS dbl-expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS dbl-expression-list .CLOSE_PARENS OP_DBLPTR block
dbl-expression-list -> dbl-expression-list .COMMA expression expression 
transitions ->  {"CLOSE_PARENS":498,"COMMA":499}

item set 322 
lambda-expression -> OPEN_PARENS type-expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS type-expression-list .CLOSE_PARENS OP_DBLPTR block
type-expression-list -> type-expression-list .COMMA type expression 
transitions ->  {"CLOSE_PARENS":500,"COMMA":501}

item set 323 
lambda-expression -> OPEN_PARENS expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS expression-list .CLOSE_PARENS OP_DBLPTR block
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_PARENS":502,"COMMA":503}

item set 324 
cast-expression -> OPEN_PARENS type .expression CLOSE_PARENS OP_DBLPTR expression block
type-expression-list -> type .expression
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
expression -> .conditional-expression
expression -> .assignment
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":504,"INTERR":505,"rank-specifiers":216,"DOT":217,"OP_PTR":506,"conditional-expression":289,"assignment":290,"rank-specifier":220,"conditional-or-expression":291,"unary-expression":292,"OPEN_BRACKET":221,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 325 
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS OP_DBLPTR expression
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS expression
parenthesized-expression -> OPEN_PARENS expression .CLOSE_PARENS
dbl-expression-list -> expression .expression
expression-list -> expression .
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":507,"expression":508,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 326 
cast-expression -> OPEN_PARENS type-with-interr .CLOSE_PARENS expression 
transitions ->  {"CLOSE_PARENS":509}

item set 327 
base-access -> BASE DOT .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":510,"IDENTIFIER":76}

item set 328 
base-access -> BASE OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":511,"expression":412,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 329 
typeof-expression -> TYPEOF OPEN_PARENS .type-with-interr CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":512,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 330 
sizeof-expression -> SIZEOF OPEN_PARENS .type-with-interr CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":513,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 331 
namespace-or-type-name -> namespace-or-type-name DOUBLE_COLON .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":514,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 332 
namespace-or-type-name -> namespace-or-type-name DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":515,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 333 
local-variable -> INTERR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 334 
local-variable -> STARS IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 335 
STARS -> STARS STAR . 
transitions ->  {}

item set 336 
attribute-section -> OPEN_BRACKET attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":516,"COMMA":517}

item set 337 
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"attribute-list":518,"attribute":338,"attribute-name":340,"type-name":348,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 338 
attribute-list -> attribute . 
transitions ->  {}

item set 339 
attribute-target-specifier -> attribute-target .COLON 
transitions ->  {"COLON":519}

item set 340 
attribute -> attribute-name .
attribute -> attribute-name .attribute-arguments
attribute-arguments -> .OPEN_PARENS CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS named-argument-list CLOSE_PARENS 
transitions ->  {"attribute-arguments":520,"OPEN_PARENS":521}

item set 341 
attribute-target -> FIELD .
IDENTIFIER_WITH_KEYWORD -> FIELD . 
transitions ->  {}

item set 342 
attribute-target -> EVENT . 
transitions ->  {}

item set 343 
attribute-target -> METHOD .
IDENTIFIER_WITH_KEYWORD -> METHOD . 
transitions ->  {}

item set 344 
attribute-target -> PARAM .
IDENTIFIER_WITH_KEYWORD -> PARAM . 
transitions ->  {}

item set 345 
attribute-target -> PROPERTY .
IDENTIFIER_WITH_KEYWORD -> PROPERTY . 
transitions ->  {}

item set 346 
attribute-target -> RETURN . 
transitions ->  {}

item set 347 
attribute-target -> TYPE .
IDENTIFIER_WITH_KEYWORD -> TYPE . 
transitions ->  {}

item set 348 
attribute-name -> type-name . 
transitions ->  {}

item set 349 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels .
switch-labels -> switch-labels .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"switch-label":522,"CASE":352,"DEFAULT":523}

item set 350 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON statement . 
transitions ->  {}

item set 351 
switch-labels -> switch-label . 
transitions ->  {}

item set 352 
switch-label -> CASE .constant-expression COLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":524,"expression":446,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 353 
switch-label -> DEFAULT .COLON
IDENTIFIER_WITH_KEYWORD -> DEFAULT . 
transitions ->  {"COLON":525}

item set 354 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression . 
transitions ->  {}

item set 355 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR block . 
transitions ->  {}

item set 356 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access .
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 357 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression .
invocation-expressions -> invocation-expression . 
transitions ->  {}

item set 358 
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC 
transitions ->  {"DOT":205,"OP_PTR":206,"OPEN_PARENS":204,"OP_INC":202,"OP_DEC":203}

item set 359 
local-variable-declarators -> local-variable-declarators COMMA .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarator":526,"local-variable":208,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 360 
invocation-expression -> primary-expression OPEN_PARENS type .CLOSE_PARENS
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":527,"rank-specifiers":216,"DOT":217,"OP_PTR":218,"rank-specifier":220,"OPEN_BRACKET":221}

item set 361 
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":528,"COLON":529,"COMMA":530}

item set 362 
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 363 
argument-list -> argument . 
transitions ->  {}

item set 364 
argument -> expression . 
transitions ->  {}

item set 365 
argument -> REF .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":531,"expression":532,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 366 
argument -> OUT .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":533,"expression":532,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 367 
member-access -> primary-expression DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 368 
member-access -> primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 369 
local-variable-declarator -> local-variable ASSIGN .local-variable-initializer
local-variable-initializer -> .expression
local-variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"local-variable-initializer":534,"expression":535,"array-initializer":536,"conditional-expression":289,"assignment":290,"OPEN_BRACE":494,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 370 
IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 371 
method-header -> type member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
method-header -> type member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":537,"formal-parameter-list":538,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 372 
rank-specifiers -> rank-specifiers rank-specifier . 
transitions ->  {}

item set 373 
member-access -> type DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 374 
member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 375 
rank-specifier -> OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":539,"COMMA":540}

item set 376 
rank-specifier -> OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 377 
dim-separators -> COMMA . 
transitions ->  {}

item set 378 
local-constant-declaration -> CONST type constant-declarators .
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"COMMA":541}

item set 379 
constant-declarators -> constant-declarator .
constant-declarators -> constant-declarator . 
transitions ->  {}

item set 380 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression
constant-declarator -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":542}

item set 381 
block -> OPEN_BRACE statement-list CLOSE_BRACE . 
transitions ->  {}

item set 382 
statement-list -> statement-list statement . 
transitions ->  {}

item set 383 
invocation-expressions -> invocation-expressions DOT invocation-expression .
invocation-expressions -> invocation-expression . 
transitions ->  {}

item set 384 
member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":178}

item set 385 
member-access -> invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 386 
try-statement -> TRY block catch-clauses .
try-statement -> TRY block catch-clauses .finally-clause
finally-clause -> .FINALLY block 
transitions ->  {"finally-clause":543,"FINALLY":390}

item set 387 
try-statement -> TRY block finally-clause . 
transitions ->  {}

item set 388 
catch-clauses -> specific-catch-clauses .
catch-clauses -> specific-catch-clauses .general-catch-clause
specific-catch-clauses -> specific-catch-clauses .specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block 
transitions ->  {"general-catch-clause":544,"specific-catch-clause":545,"CATCH":392}

item set 389 
catch-clauses -> general-catch-clause . 
transitions ->  {}

item set 390 
finally-clause -> FINALLY .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":546,"OPEN_BRACE":46}

item set 391 
specific-catch-clauses -> specific-catch-clause . 
transitions ->  {}

item set 392 
general-catch-clause -> CATCH .block
specific-catch-clause -> CATCH .OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> CATCH .OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":547,"OPEN_PARENS":548,"OPEN_BRACE":46}

item set 393 
checked-expression -> CHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":549}

item set 394 
unchecked-expression -> UNCHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":550}

item set 395 
lock-statement -> LOCK OPEN_PARENS expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":551}

item set 396 
using-statement -> USING OPEN_PARENS resource-acquisition .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":552}

item set 397 
resource-acquisition -> local-variable-declaration . 
transitions ->  {}

item set 398 
resource-acquisition -> expression . 
transitions ->  {}

item set 399 
local-variable-declaration -> type .local-variable-declarators
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":214,"rank-specifiers":216,"DOT":217,"OP_PTR":218,"local-variable-declarator":207,"rank-specifier":220,"local-variable":208,"OPEN_BRACKET":221,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 400 
fixed-statement -> modifiers FIXED OPEN_PARENS .type local-variable-declarators CLOSE_PARENS embedded-statement
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":553,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 401 
method-header -> modifiers type member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
method-header -> modifiers type member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":554}

item set 402 
fixed-statement -> FIXED OPEN_PARENS type .local-variable-declarators CLOSE_PARENS embedded-statement
array-type -> type .rank-specifiers
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":555,"rank-specifiers":216,"local-variable-declarator":207,"rank-specifier":220,"local-variable":208,"OPEN_BRACKET":221,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 403 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 404 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-body .
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-body .SEMICOLON 
transitions ->  {"SEMICOLON":556}

item set 405 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base .class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE member-list CLOSE_BRACE 
transitions ->  {"class-body":557,"OPEN_BRACE":407}

item set 406 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE .SEMICOLON
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE .class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE .class-base class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE .class-body SEMICOLON
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE .class-base class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE member-list CLOSE_BRACE
class-base -> .COLON base-list 
transitions ->  {"SEMICOLON":558,"class-body":559,"class-base":560,"OPEN_BRACE":407,"COLON":408}

item set 407 
class-body -> OPEN_BRACE .CLOSE_BRACE
class-body -> OPEN_BRACE .member-list CLOSE_BRACE
member-list -> .class-member-declaration member-list
member-list -> .class-member-declaration
member-list -> .access-specifier COLON member-list
member-list -> .access-specifier COLON
class-member-declaration -> .constant-declaration
class-member-declaration -> .class-method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .event-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
access-specifier -> .PRIVATE
access-specifier -> .PROTECTED
access-specifier -> .PUBLIC
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
class-method-declaration -> .method-header block SEMICOLON
class-method-declaration -> .method-header block
class-method-declaration -> .method-header SEMICOLON
class-method-declaration -> .method-header
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_BRACE":561,"member-list":562,"class-member-declaration":563,"access-specifier":564,"constant-declaration":565,"class-method-declaration":566,"field-declaration":567,"property-declaration":568,"event-declaration":569,"indexer-declaration":570,"operator-declaration":571,"constructor-declaration":572,"static-constructor-declaration":573,"destructor-declaration":574,"type-declaration":575,"PRIVATE":576,"PROTECTED":577,"PUBLIC":578,"CONST":579,"attributes":580,"modifiers":581,"method-header":582,"type-with-interr":583,"EVENT":584,"indexer-declarator":585,"constructor-declarator":586,"TILDE":587,"EXTERN":588,"class-declaration":589,"struct-declaration":590,"interface-declaration":591,"enum-declaration":592,"delegate-declaration":593,"attribute-sections":157,"modifier":98,"member-name-with-double-colon":99,"type":594,"IDENTIFIER_WITH_TEMPLATE":595,"CLASS":75,"STRUCT":596,"INTERFACE":597,"ENUM":598,"DELEGATE":599,"attribute-section":171,"UNSAFE":240,"ASYNC":41,"PARTIAL":144,"INTERNAL":146,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"NEW":241,"local-variable":156,"non-array-type":79,"array-type":80,"IDENTIFIER":76,"OPEN_BRACKET":174,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":600,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"STAR":210,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"WHERE":42,"namespace-or-type-name":168}

item set 408 
class-base -> COLON .base-list
base-list -> .base-list COMMA base-specifier
base-list -> .base-specifier
base-specifier -> .type-with-interr
base-specifier -> .VIRTUAL access-specifier type-with-interr
base-specifier -> .VIRTUAL type-with-interr
base-specifier -> .access-specifier VIRTUAL type-with-interr
base-specifier -> .access-specifier type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
access-specifier -> .PRIVATE
access-specifier -> .PROTECTED
access-specifier -> .PUBLIC
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"base-list":601,"base-specifier":602,"type-with-interr":603,"VIRTUAL":604,"access-specifier":605,"type":485,"PRIVATE":606,"PROTECTED":607,"PUBLIC":608,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 409 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":609,"COMMA":503}

item set 410 
element-access -> primary-no-array-creation-expression OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":610,"COMMA":540}

item set 411 
element-access -> primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 412 
expression-list -> expression . 
transitions ->  {}

item set 413 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS block-expression-with-brace
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":611,"CLOSE_PARENS":612,"argument":363,"expression":364,"REF":365,"OUT":366,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 414 
object-creation-expression -> NEW type-with-identifier block-expression-with-brace . 
transitions ->  {}

item set 415 
object-creation-expression -> NEW type-with-identifier rank-specifiers .block-expression-with-brace
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":613,"rank-specifier":372,"OPEN_BRACE":255,"OPEN_BRACKET":221}

item set 416 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET .argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET .argument-list CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":614,"dim-separators":375,"CLOSE_BRACKET":376,"argument":363,"COMMA":377,"expression":364,"REF":365,"OUT":366,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 417 
object-creation-expression -> NEW non-array-type rank-specifiers .block-expression-with-brace
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":615,"rank-specifier":372,"OPEN_BRACE":255,"OPEN_BRACKET":221}

item set 418 
object-creation-expression -> NEW non-array-type OPEN_BRACKET .argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET .argument-list CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":616,"dim-separators":375,"CLOSE_BRACKET":376,"argument":363,"COMMA":377,"expression":364,"REF":365,"OUT":366,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 419 
object-creation-expression -> NEW rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 420 
delegate-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS
delegate-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":617,"CLOSE_PARENS":618,"argument":363,"expression":364,"REF":365,"OUT":366,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 421 
delegate-creation-expression -> NEW type block-expression-with-brace . 
transitions ->  {}

item set 422 
type-with-identifier -> IDENTIFIER TEMPLATE .
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE . 
transitions ->  {}

item set 423 
block-expression-with-brace -> OPEN_BRACE block-expression-list .CLOSE_BRACE
block-expression-list -> block-expression-list .COMMA block-expression-list-unit 
transitions ->  {"CLOSE_BRACE":619,"COMMA":620}

item set 424 
block-expression-list -> block-expression-list-unit . 
transitions ->  {}

item set 425 
block-expression-list-unit -> block-expression-with-brace . 
transitions ->  {}

item set 426 
block-expression-list-unit -> expression . 
transitions ->  {}

item set 427 
assignment -> unary-expression assignment-operator expression . 
transitions ->  {}

item set 428 
assignment -> unary-expression assignment-operator block-expression-with-brace . 
transitions ->  {}

item set 429 
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"CLOSE_PARENS":621}

item set 430 
boolean-expression -> expression .
boolean-expression -> expression . 
transitions ->  {}

item set 431 
switch-statement -> SWITCH OPEN_PARENS expression .CLOSE_PARENS switch-block 
transitions ->  {"CLOSE_PARENS":622}

item set 432 
while-statement -> WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":623}

item set 433 
do-statement -> DO embedded-statement WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":624}

item set 434 
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":625,"for-condition":626,"boolean-expression":627,"expression":430,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 435 
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":628}

item set 436 
for-initializer -> local-variable-declaration . 
transitions ->  {}

item set 437 
for-initializer -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":629}

item set 438 
statement-expression-list -> statement-expression . 
transitions ->  {}

item set 439 
foreach-statement -> FOREACH OPEN_PARENS type .IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
array-type -> type .rank-specifiers
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":630,"rank-specifiers":216,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"rank-specifier":220,"IDENTIFIER":76,"OPEN_BRACKET":221}

item set 440 
break-statement -> YIELD BREAK SEMICOLON . 
transitions ->  {}

item set 441 
return-statement -> YIELD RETURN block-expression-with-brace .SEMICOLON 
transitions ->  {"SEMICOLON":631}

item set 442 
return-statement -> YIELD RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":632}

item set 443 
return-statement -> YIELD RETURN SEMICOLON . 
transitions ->  {}

item set 444 
goto-statement -> GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 445 
goto-statement -> GOTO CASE constant-expression .SEMICOLON 
transitions ->  {"SEMICOLON":633}

item set 446 
constant-expression -> expression . 
transitions ->  {}

item set 447 
goto-statement -> GOTO DEFAULT SEMICOLON . 
transitions ->  {}

item set 448 
return-statement -> RETURN block-expression-with-brace SEMICOLON . 
transitions ->  {}

item set 449 
return-statement -> RETURN expression SEMICOLON . 
transitions ->  {}

item set 450 
conditional-expression -> conditional-or-expression INTERR .expression
conditional-expression -> conditional-or-expression INTERR .expression COLON expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":634,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 451 
conditional-or-expression -> conditional-or-expression OP_OR .conditional-and-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"conditional-and-expression":635,"inclusive-or-expression":294,"exclusive-or-expression":295,"and-expression":296,"equality-expression":297,"relational-expression":298,"shift-expression":299,"additive-expression":300,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 452 
conditional-and-expression -> conditional-and-expression OP_AND .inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"inclusive-or-expression":637,"exclusive-or-expression":295,"and-expression":296,"equality-expression":297,"relational-expression":298,"shift-expression":299,"additive-expression":300,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 453 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR .exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"exclusive-or-expression":638,"and-expression":296,"equality-expression":297,"relational-expression":298,"shift-expression":299,"additive-expression":300,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 454 
exclusive-or-expression -> exclusive-or-expression CARET .and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"and-expression":639,"equality-expression":297,"relational-expression":298,"shift-expression":299,"additive-expression":300,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 455 
and-expression -> and-expression AMP .equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"equality-expression":640,"relational-expression":298,"shift-expression":299,"additive-expression":300,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 456 
equality-expression -> equality-expression OP_EQ .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"relational-expression":641,"shift-expression":299,"additive-expression":300,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 457 
equality-expression -> equality-expression OP_NE .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"relational-expression":642,"shift-expression":299,"additive-expression":300,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 458 
relational-expression -> relational-expression LT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":643,"additive-expression":300,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 459 
relational-expression -> relational-expression GT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":644,"additive-expression":300,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 460 
relational-expression -> relational-expression OP_LE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":645,"additive-expression":300,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 461 
relational-expression -> relational-expression OP_GE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":646,"additive-expression":300,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 462 
relational-expression -> relational-expression OP_COALESCING .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":647,"additive-expression":300,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 463 
relational-expression -> relational-expression IS .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":648,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 464 
relational-expression -> relational-expression AS .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":649,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 465 
shift-expression -> shift-expression OP_LEFT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"additive-expression":650,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 466 
shift-expression -> shift-expression RIGHT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"additive-expression":651,"multiplicative-expression":301,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 467 
additive-expression -> additive-expression PLUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":652,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 468 
additive-expression -> additive-expression OP_PTR .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":653,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 469 
additive-expression -> additive-expression OP_COALESCING .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":654,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 470 
additive-expression -> additive-expression MINUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":655,"unary-expression":636,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 471 
multiplicative-expression -> multiplicative-expression STAR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":656,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 472 
multiplicative-expression -> multiplicative-expression DIV .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":657,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 473 
multiplicative-expression -> multiplicative-expression PERCENT .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":658,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 474 
throw-statement -> THROW expression SEMICOLON . 
transitions ->  {}

item set 475 
method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":659}

item set 476 
method-header -> member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 477 
formal-parameter-list -> fixed-parameters .
formal-parameter-list -> fixed-parameters .COMMA parameter-array
fixed-parameters -> fixed-parameters .COMMA fixed-parameter 
transitions ->  {"COMMA":660}

item set 478 
formal-parameter-list -> parameter-array . 
transitions ->  {}

item set 479 
fixed-parameters -> fixed-parameter . 
transitions ->  {}

item set 480 
parameter-array -> PARAMS .array-type IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> PARAMS .
array-type -> .type rank-specifiers
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"array-type":661,"type":311,"non-array-type":79,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 481 
parameter-array -> attributes .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> attributes .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> attributes .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"PARAMS":662,"type-with-interr":663,"parameter-modifier":664,"type":485,"REF":486,"OUT":487,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 482 
fixed-parameter -> type-with-interr .IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":665,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 483 
fixed-parameter -> THIS .type-with-interr IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> THIS .
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":666,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 484 
fixed-parameter -> parameter-modifier .type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":667,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 485 
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"INTERR":505,"rank-specifiers":216,"rank-specifier":220,"OPEN_BRACKET":221}

item set 486 
parameter-modifier -> REF . 
transitions ->  {}

item set 487 
parameter-modifier -> OUT . 
transitions ->  {}

item set 488 
method-header -> attributes type member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
method-header -> attributes type member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":668}

item set 489 
method-header -> attributes modifiers type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes modifiers type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
array-type -> type .rank-specifiers
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":669,"rank-specifiers":216,"local-variable":156,"rank-specifier":220,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"OPEN_BRACKET":221,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 490 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":670}

item set 491 
delegate-expression -> DELEGATE OPEN_PARENS CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":671,"OPEN_BRACE":46}

item set 492 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACKET":672,"expression-list":673,"expression":412,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 493 
array-creation-expression -> STACKALLOC array-type array-initializer . 
transitions ->  {}

item set 494 
array-initializer -> OPEN_BRACE .CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list COMMA CLOSE_BRACE
variable-initializer-list -> .variable-initializer
variable-initializer-list -> .variable-initializer-list COMMA variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":674,"variable-initializer-list":675,"variable-initializer":676,"expression":677,"array-initializer":678,"conditional-expression":289,"assignment":290,"OPEN_BRACE":494,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 495 
invocation-expression -> AWAIT primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> AWAIT primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> AWAIT primary-expression OPEN_PARENS .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
type-name -> .namespace-or-type-name
expression -> .conditional-expression
expression -> .assignment
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":679,"argument-list":680,"CLOSE_PARENS":681,"non-array-type":79,"array-type":80,"argument":363,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"expression":364,"REF":365,"OUT":366,"namespace-or-type-name":168,"conditional-expression":289,"assignment":290,"IDENTIFIER_WITH_KEYWORD":269,"conditional-or-expression":291,"unary-expression":292,"TILDE":26,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":187,"WHERE":42,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"STAR":190,"primary-expression":191,"IDENTIFIER":76,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"invocation-expression":81,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"equality-expression":297,"TRUE":172,"FALSE":173,"AWAIT":136,"relational-expression":298,"shift-expression":299,"additive-expression":300,"multiplicative-expression":301}

item set 496 
member-name-with-double-colon -> local-variable DOUBLE_COLON TILDE .local-variable
IDENTIFIER_WITH_KEYWORD -> TILDE .IDENTIFIER_WITH_KEYWORD
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable":682,"IDENTIFIER_WITH_KEYWORD":683,"INTERR":169,"STARS":170,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"STAR":210,"IDENTIFIER":76}

item set 497 
member-name-with-double-colon -> local-variable DOUBLE_COLON local-variable . 
transitions ->  {}

item set 498 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":684}

item set 499 
dbl-expression-list -> dbl-expression-list COMMA .expression expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":685,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 500 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":686}

item set 501 
type-expression-list -> type-expression-list COMMA .type expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":687,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 502 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":688}

item set 503 
expression-list -> expression-list COMMA .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":689,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 504 
cast-expression -> OPEN_PARENS type expression .CLOSE_PARENS OP_DBLPTR expression block
type-expression-list -> type expression . 
transitions ->  {"CLOSE_PARENS":690}

item set 505 
type-with-interr -> type INTERR . 
transitions ->  {}

item set 506 
member-access -> type OP_PTR .IDENTIFIER_WITH_KEYWORD
unary-expression -> OP_PTR .unary-expression
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":691,"unary-expression":314,"TILDE":26,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":187,"WHERE":42,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"STAR":190,"primary-expression":191,"IDENTIFIER":76,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"type":196,"invocation-expression":81,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"TRUE":172,"FALSE":173,"non-array-type":79,"array-type":80,"AWAIT":136,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 507 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .OP_DBLPTR expression block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .OP_DBLPTR expression
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .expression
parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS .
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"OP_DBLPTR":692,"expression":693,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 508 
dbl-expression-list -> expression expression . 
transitions ->  {}

item set 509 
cast-expression -> OPEN_PARENS type-with-interr CLOSE_PARENS .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":694,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 510 
base-access -> BASE DOT IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 511 
base-access -> BASE OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":695,"COMMA":503}

item set 512 
typeof-expression -> TYPEOF OPEN_PARENS type-with-interr .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":696}

item set 513 
sizeof-expression -> SIZEOF OPEN_PARENS type-with-interr .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":697}

item set 514 
namespace-or-type-name -> namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 515 
namespace-or-type-name -> namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 516 
attribute-section -> OPEN_BRACKET attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 517 
attribute-section -> OPEN_BRACKET attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":698,"attribute":699,"attribute-name":340,"type-name":348,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 518 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":700,"COMMA":701}

item set 519 
attribute-target-specifier -> attribute-target COLON . 
transitions ->  {}

item set 520 
attribute -> attribute-name attribute-arguments . 
transitions ->  {}

item set 521 
attribute-arguments -> OPEN_PARENS .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .named-argument-list CLOSE_PARENS
positional-argument-list -> .positional-argument
positional-argument-list -> .positional-argument-list COMMA positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":702,"positional-argument-list":703,"named-argument-list":704,"positional-argument":705,"named-argument":706,"attribute-argument-expression":707,"IDENTIFIER_WITH_TEMPLATE":708,"expression":709,"IDENTIFIER":76,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 522 
switch-labels -> switch-labels switch-label . 
transitions ->  {}

item set 523 
switch-label -> DEFAULT .COLON 
transitions ->  {"COLON":525}

item set 524 
switch-label -> CASE constant-expression .COLON 
transitions ->  {"COLON":710}

item set 525 
switch-label -> DEFAULT COLON . 
transitions ->  {}

item set 526 
local-variable-declarators -> local-variable-declarators COMMA local-variable-declarator . 
transitions ->  {}

item set 527 
invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 528 
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 529 
argument-list -> argument-list COLON .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":711,"expression":364,"REF":365,"OUT":366,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 530 
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":712,"expression":364,"REF":365,"OUT":366,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 531 
argument -> REF variable-reference . 
transitions ->  {}

item set 532 
variable-reference -> expression . 
transitions ->  {}

item set 533 
argument -> OUT variable-reference . 
transitions ->  {}

item set 534 
local-variable-declarator -> local-variable ASSIGN local-variable-initializer . 
transitions ->  {}

item set 535 
local-variable-initializer -> expression . 
transitions ->  {}

item set 536 
local-variable-initializer -> array-initializer . 
transitions ->  {}

item set 537 
method-header -> type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 538 
method-header -> type member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":713}

item set 539 
rank-specifier -> OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 540 
dim-separators -> dim-separators COMMA . 
transitions ->  {}

item set 541 
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarator":714,"IDENTIFIER_WITH_TEMPLATE":380,"IDENTIFIER":76}

item set 542 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":715,"expression":446,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 543 
try-statement -> TRY block catch-clauses finally-clause . 
transitions ->  {}

item set 544 
catch-clauses -> specific-catch-clauses general-catch-clause . 
transitions ->  {}

item set 545 
specific-catch-clauses -> specific-catch-clauses specific-catch-clause . 
transitions ->  {}

item set 546 
finally-clause -> FINALLY block . 
transitions ->  {}

item set 547 
general-catch-clause -> CATCH block . 
transitions ->  {}

item set 548 
specific-catch-clause -> CATCH OPEN_PARENS .type CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS .type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":716,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 549 
checked-expression -> CHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 550 
unchecked-expression -> UNCHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 551 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":717,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 552 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":718,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 553 
fixed-statement -> modifiers FIXED OPEN_PARENS type .local-variable-declarators CLOSE_PARENS embedded-statement
array-type -> type .rank-specifiers
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":719,"rank-specifiers":216,"local-variable-declarator":207,"rank-specifier":220,"local-variable":208,"OPEN_BRACKET":221,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 554 
method-header -> modifiers type member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
method-header -> modifiers type member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":720,"formal-parameter-list":721,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 555 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators .CLOSE_PARENS embedded-statement
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"CLOSE_PARENS":722,"COMMA":359}

item set 556 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON . 
transitions ->  {}

item set 557 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body .
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":723}

item set 558 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 559 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body .
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body .SEMICOLON 
transitions ->  {"SEMICOLON":724}

item set 560 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base .class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE member-list CLOSE_BRACE 
transitions ->  {"class-body":725,"OPEN_BRACE":407}

item set 561 
class-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 562 
class-body -> OPEN_BRACE member-list .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":726}

item set 563 
member-list -> class-member-declaration .member-list
member-list -> class-member-declaration .
member-list -> .class-member-declaration member-list
member-list -> .class-member-declaration
member-list -> .access-specifier COLON member-list
member-list -> .access-specifier COLON
class-member-declaration -> .constant-declaration
class-member-declaration -> .class-method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .event-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
access-specifier -> .PRIVATE
access-specifier -> .PROTECTED
access-specifier -> .PUBLIC
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
class-method-declaration -> .method-header block SEMICOLON
class-method-declaration -> .method-header block
class-method-declaration -> .method-header SEMICOLON
class-method-declaration -> .method-header
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"member-list":727,"class-member-declaration":563,"access-specifier":564,"constant-declaration":565,"class-method-declaration":566,"field-declaration":567,"property-declaration":568,"event-declaration":569,"indexer-declaration":570,"operator-declaration":571,"constructor-declaration":572,"static-constructor-declaration":573,"destructor-declaration":574,"type-declaration":575,"PRIVATE":576,"PROTECTED":577,"PUBLIC":578,"CONST":579,"attributes":580,"modifiers":581,"method-header":582,"type-with-interr":583,"EVENT":584,"indexer-declarator":585,"constructor-declarator":586,"TILDE":587,"EXTERN":588,"class-declaration":589,"struct-declaration":590,"interface-declaration":591,"enum-declaration":592,"delegate-declaration":593,"attribute-sections":157,"modifier":98,"member-name-with-double-colon":99,"type":594,"IDENTIFIER_WITH_TEMPLATE":595,"CLASS":75,"STRUCT":596,"INTERFACE":597,"ENUM":598,"DELEGATE":599,"attribute-section":171,"UNSAFE":240,"ASYNC":41,"PARTIAL":144,"INTERNAL":146,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"NEW":241,"local-variable":156,"non-array-type":79,"array-type":80,"IDENTIFIER":76,"OPEN_BRACKET":174,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":600,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"STAR":210,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"WHERE":42,"namespace-or-type-name":168}

item set 564 
member-list -> access-specifier .COLON member-list
member-list -> access-specifier .COLON 
transitions ->  {"COLON":728}

item set 565 
class-member-declaration -> constant-declaration . 
transitions ->  {}

item set 566 
class-member-declaration -> class-method-declaration . 
transitions ->  {}

item set 567 
class-member-declaration -> field-declaration . 
transitions ->  {}

item set 568 
class-member-declaration -> property-declaration . 
transitions ->  {}

item set 569 
class-member-declaration -> event-declaration . 
transitions ->  {}

item set 570 
class-member-declaration -> indexer-declaration . 
transitions ->  {}

item set 571 
class-member-declaration -> operator-declaration . 
transitions ->  {}

item set 572 
class-member-declaration -> constructor-declaration . 
transitions ->  {}

item set 573 
class-member-declaration -> static-constructor-declaration . 
transitions ->  {}

item set 574 
class-member-declaration -> destructor-declaration . 
transitions ->  {}

item set 575 
class-member-declaration -> type-declaration . 
transitions ->  {}

item set 576 
access-specifier -> PRIVATE .
modifier -> PRIVATE . 
transitions ->  {}

item set 577 
access-specifier -> PROTECTED .
modifier -> PROTECTED . 
transitions ->  {}

item set 578 
access-specifier -> PUBLIC .
modifier -> PUBLIC . 
transitions ->  {}

item set 579 
constant-declaration -> CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":729,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 580 
constant-declaration -> attributes .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> attributes .modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> attributes .type-with-interr member-name SEMICOLON
field-declaration -> attributes .modifiers type-with-interr member-name SEMICOLON
property-declaration -> attributes .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> attributes .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> attributes .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> attributes .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes .modifiers operator-declarator method-body
constructor-declaration -> attributes .constructor-declarator method-body
constructor-declaration -> attributes .modifiers constructor-declarator method-body
static-constructor-declaration -> attributes .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> attributes .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> attributes .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> attributes .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":730,"modifiers":731,"type-with-interr":732,"EVENT":733,"indexer-declarator":734,"constructor-declarator":735,"TILDE":736,"EXTERN":737,"type":738,"STRUCT":739,"INTERFACE":740,"ENUM":741,"DELEGATE":742,"modifier":98,"IDENTIFIER_WITH_TEMPLATE":595,"non-array-type":79,"array-type":80,"UNSAFE":240,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"NEW":241,"IDENTIFIER":76,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"WHERE":42}

item set 581 
constant-declaration -> modifiers .CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> modifiers .type-with-interr member-name SEMICOLON
property-declaration -> modifiers .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> modifiers .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> modifiers .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> modifiers .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> modifiers .operator-declarator method-body
constructor-declaration -> modifiers .constructor-declarator method-body
static-constructor-declaration -> modifiers .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifiers -> modifiers .modifier
method-header -> modifiers .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> modifiers .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
operator-declarator -> .unary-operator-declarator
operator-declarator -> .binary-operator-declarator
operator-declarator -> .conversion-operator-declarator
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
unary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":743,"type-with-interr":744,"EVENT":745,"indexer-declarator":746,"operator-declarator":747,"constructor-declarator":748,"IDENTIFIER_WITH_TEMPLATE":749,"modifier":238,"type":750,"STRUCT":751,"INTERFACE":752,"ENUM":753,"DELEGATE":754,"unary-operator-declarator":755,"binary-operator-declarator":756,"conversion-operator-declarator":757,"IDENTIFIER":76,"UNSAFE":240,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"non-array-type":79,"array-type":80,"IMPLICIT":758,"EXPLICIT":759,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"WHERE":42}

item set 582 
class-method-declaration -> method-header .block SEMICOLON
class-method-declaration -> method-header .block
class-method-declaration -> method-header .SEMICOLON
class-method-declaration -> method-header .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":760,"SEMICOLON":761,"OPEN_BRACE":46}

item set 583 
field-declaration -> type-with-interr .member-name SEMICOLON
property-declaration -> type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":762,"THIS":763,"variable-declarators":764,"variable-declarator":765,"type-name":766,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 584 
event-declaration -> EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":767,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 585 
indexer-declaration -> indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":768}

item set 586 
constructor-declaration -> constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":769,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 587 
destructor-declaration -> TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_KEYWORD -> TILDE .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":772,"IDENTIFIER_WITH_KEYWORD":370,"IDENTIFIER":76,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42}

item set 588 
destructor-declaration -> EXTERN .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifier -> EXTERN . 
transitions ->  {"TILDE":773}

item set 589 
type-declaration -> class-declaration . 
transitions ->  {}

item set 590 
type-declaration -> struct-declaration . 
transitions ->  {}

item set 591 
type-declaration -> interface-declaration . 
transitions ->  {}

item set 592 
type-declaration -> enum-declaration . 
transitions ->  {}

item set 593 
type-declaration -> delegate-declaration . 
transitions ->  {}

item set 594 
method-header -> type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":215,"INTERR":774,"rank-specifiers":216,"local-variable":156,"rank-specifier":220,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"OPEN_BRACKET":221,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 595 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":775}

item set 596 
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":776,"IDENTIFIER":76}

item set 597 
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":777,"IDENTIFIER":76}

item set 598 
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":778,"IDENTIFIER":76}

item set 599 
delegate-declaration -> DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":779,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 600 
local-variable -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 601 
class-base -> COLON base-list .
base-list -> base-list .COMMA base-specifier 
transitions ->  {"COMMA":780}

item set 602 
base-list -> base-specifier . 
transitions ->  {}

item set 603 
base-specifier -> type-with-interr . 
transitions ->  {}

item set 604 
base-specifier -> VIRTUAL .access-specifier type-with-interr
base-specifier -> VIRTUAL .type-with-interr
access-specifier -> .PRIVATE
access-specifier -> .PROTECTED
access-specifier -> .PUBLIC
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"access-specifier":781,"type-with-interr":782,"PRIVATE":606,"PROTECTED":607,"PUBLIC":608,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 605 
base-specifier -> access-specifier .VIRTUAL type-with-interr
base-specifier -> access-specifier .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"VIRTUAL":783,"type-with-interr":784,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 606 
access-specifier -> PRIVATE . 
transitions ->  {}

item set 607 
access-specifier -> PROTECTED . 
transitions ->  {}

item set 608 
access-specifier -> PUBLIC . 
transitions ->  {}

item set 609 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 610 
element-access -> primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 611 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":785,"COLON":529,"COMMA":530}

item set 612 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .block-expression-with-brace
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expressions":786,"block-expression-with-brace":787,"invocation-expression":81,"OPEN_BRACE":255,"AWAIT":136,"primary-expression":358,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 613 
object-creation-expression -> NEW type-with-identifier rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 614 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list .CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list .CLOSE_BRACKET
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_BRACKET":788,"COLON":529,"COMMA":530}

item set 615 
object-creation-expression -> NEW non-array-type rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 616 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list .CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list .CLOSE_BRACKET
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_BRACKET":789,"COLON":529,"COMMA":530}

item set 617 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":790,"COLON":529,"COMMA":530}

item set 618 
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS .block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":791,"OPEN_BRACE":255}

item set 619 
block-expression-with-brace -> OPEN_BRACE block-expression-list CLOSE_BRACE . 
transitions ->  {}

item set 620 
block-expression-list -> block-expression-list COMMA .block-expression-list-unit
block-expression-list-unit -> .block-expression-with-brace
block-expression-list-unit -> .expression
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-list-unit":792,"block-expression-with-brace":425,"expression":426,"OPEN_BRACE":255,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 621 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement ELSE embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":793,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 622 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS .switch-block
switch-block -> .OPEN_BRACE CLOSE_BRACE
switch-block -> .OPEN_BRACE switch-sections CLOSE_BRACE 
transitions ->  {"switch-block":794,"OPEN_BRACE":795}

item set 623 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":796,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 624 
do-statement -> DO embedded-statement WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS SEMICOLON
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":797,"expression":430,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 625 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":798,"for-iterator":799,"statement-expression-list":800,"statement-expression":438,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"invocation-expression":81,"NEW":197,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 626 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":801}

item set 627 
for-condition -> boolean-expression . 
transitions ->  {}

item set 628 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":802,"for-condition":803,"boolean-expression":627,"expression":430,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 629 
statement-expression-list -> statement-expression-list COMMA .statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement-expression":804,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"invocation-expression":81,"NEW":197,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 630 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD .IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"IN":805}

item set 631 
return-statement -> YIELD RETURN block-expression-with-brace SEMICOLON . 
transitions ->  {}

item set 632 
return-statement -> YIELD RETURN expression SEMICOLON . 
transitions ->  {}

item set 633 
goto-statement -> GOTO CASE constant-expression SEMICOLON . 
transitions ->  {}

item set 634 
conditional-expression -> conditional-or-expression INTERR expression .
conditional-expression -> conditional-or-expression INTERR expression .COLON expression 
transitions ->  {"COLON":806}

item set 635 
conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":452}

item set 636 
multiplicative-expression -> unary-expression . 
transitions ->  {}

item set 637 
conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":453}

item set 638 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":454}

item set 639 
exclusive-or-expression -> exclusive-or-expression CARET and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":455}

item set 640 
and-expression -> and-expression AMP equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":456,"OP_NE":457}

item set 641 
equality-expression -> equality-expression OP_EQ relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":458,"GT":459,"OP_LE":460,"OP_GE":461,"OP_COALESCING":462,"IS":463,"AS":464}

item set 642 
equality-expression -> equality-expression OP_NE relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":458,"GT":459,"OP_LE":460,"OP_GE":461,"OP_COALESCING":462,"IS":463,"AS":464}

item set 643 
relational-expression -> relational-expression LT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":465,"RIGHT_SHIFT":466}

item set 644 
relational-expression -> relational-expression GT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":465,"RIGHT_SHIFT":466}

item set 645 
relational-expression -> relational-expression OP_LE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":465,"RIGHT_SHIFT":466}

item set 646 
relational-expression -> relational-expression OP_GE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":465,"RIGHT_SHIFT":466}

item set 647 
relational-expression -> relational-expression OP_COALESCING shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":465,"RIGHT_SHIFT":466}

item set 648 
relational-expression -> relational-expression IS type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":216,"rank-specifier":220,"OPEN_BRACKET":221}

item set 649 
relational-expression -> relational-expression AS type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":216,"rank-specifier":220,"OPEN_BRACKET":221}

item set 650 
shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":467,"OP_PTR":468,"OP_COALESCING":469,"MINUS":470}

item set 651 
shift-expression -> shift-expression RIGHT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":467,"OP_PTR":468,"OP_COALESCING":469,"MINUS":470}

item set 652 
additive-expression -> additive-expression PLUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":471,"DIV":472,"PERCENT":473}

item set 653 
additive-expression -> additive-expression OP_PTR multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":471,"DIV":472,"PERCENT":473}

item set 654 
additive-expression -> additive-expression OP_COALESCING multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":471,"DIV":472,"PERCENT":473}

item set 655 
additive-expression -> additive-expression MINUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":471,"DIV":472,"PERCENT":473}

item set 656 
multiplicative-expression -> multiplicative-expression STAR unary-expression . 
transitions ->  {}

item set 657 
multiplicative-expression -> multiplicative-expression DIV unary-expression . 
transitions ->  {}

item set 658 
multiplicative-expression -> multiplicative-expression PERCENT unary-expression . 
transitions ->  {}

item set 659 
method-header -> member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 660 
formal-parameter-list -> fixed-parameters COMMA .parameter-array
fixed-parameters -> fixed-parameters COMMA .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"parameter-array":807,"fixed-parameter":808,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 661 
parameter-array -> PARAMS array-type .IDENTIFIER_WITH_TEMPLATE
type -> array-type .STARS
type -> array-type .
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":809,"STARS":248,"IDENTIFIER":76,"STAR":210}

item set 662 
parameter-array -> attributes PARAMS .array-type IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> PARAMS .
array-type -> .type rank-specifiers
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"array-type":810,"type":311,"non-array-type":79,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 663 
fixed-parameter -> attributes type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":811,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 664 
fixed-parameter -> attributes parameter-modifier .type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":812,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 665 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD .ASSIGN expression
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"ASSIGN":813}

item set 666 
fixed-parameter -> THIS type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":814,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 667 
fixed-parameter -> parameter-modifier type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":815,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 668 
method-header -> attributes type member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
method-header -> attributes type member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":816,"formal-parameter-list":817,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 669 
method-header -> attributes modifiers type member-name-with-double-colon .OPEN_PARENS CLOSE_PARENS
method-header -> attributes modifiers type member-name-with-double-colon .OPEN_PARENS formal-parameter-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":818}

item set 670 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":819,"OPEN_BRACE":46}

item set 671 
delegate-expression -> DELEGATE OPEN_PARENS CLOSE_PARENS block . 
transitions ->  {}

item set 672 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET .argument-list-with-brace
argument-list-with-brace -> .OPEN_BRACE argument-list COMMA CLOSE_BRACE
argument-list-with-brace -> .OPEN_BRACE argument-list CLOSE_BRACE
argument-list-with-brace -> .OPEN_BRACE CLOSE_BRACE 
transitions ->  {"argument-list-with-brace":820,"OPEN_BRACE":821}

item set 673 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":822,"COMMA":503}

item set 674 
array-initializer -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 675 
array-initializer -> OPEN_BRACE variable-initializer-list .CLOSE_BRACE
array-initializer -> OPEN_BRACE variable-initializer-list .COMMA CLOSE_BRACE
variable-initializer-list -> variable-initializer-list .COMMA variable-initializer 
transitions ->  {"CLOSE_BRACE":823,"COMMA":824}

item set 676 
variable-initializer-list -> variable-initializer . 
transitions ->  {}

item set 677 
variable-initializer -> expression .
variable-initializer -> expression . 
transitions ->  {}

item set 678 
variable-initializer -> array-initializer .
variable-initializer -> array-initializer . 
transitions ->  {}

item set 679 
invocation-expression -> AWAIT primary-expression OPEN_PARENS type .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS type .CLOSE_PARENS
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":825,"rank-specifiers":216,"DOT":217,"OP_PTR":218,"rank-specifier":220,"OPEN_BRACKET":221}

item set 680 
invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":826,"COLON":529,"COMMA":530}

item set 681 
invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 682 
member-name-with-double-colon -> local-variable DOUBLE_COLON TILDE local-variable . 
transitions ->  {}

item set 683 
IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD .
local-variable -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 684 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":827,"block":828,"conditional-expression":289,"assignment":290,"OPEN_BRACE":46,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 685 
dbl-expression-list -> dbl-expression-list COMMA expression .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":829,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 686 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":830,"block":831,"conditional-expression":289,"assignment":290,"OPEN_BRACE":46,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 687 
type-expression-list -> type-expression-list COMMA type .expression
array-type -> type .rank-specifiers
expression -> .conditional-expression
expression -> .assignment
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":832,"rank-specifiers":216,"conditional-expression":289,"assignment":290,"rank-specifier":220,"conditional-or-expression":291,"unary-expression":292,"OPEN_BRACKET":221,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 688 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":833,"block":834,"conditional-expression":289,"assignment":290,"OPEN_BRACE":46,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 689 
expression-list -> expression-list COMMA expression . 
transitions ->  {}

item set 690 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS .OP_DBLPTR expression block 
transitions ->  {"OP_DBLPTR":835}

item set 691 
member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":178}

item set 692 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR .expression block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":836,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 693 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS expression . 
transitions ->  {}

item set 694 
cast-expression -> OPEN_PARENS type-with-interr CLOSE_PARENS expression . 
transitions ->  {}

item set 695 
base-access -> BASE OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 696 
typeof-expression -> TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS . 
transitions ->  {}

item set 697 
sizeof-expression -> SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS . 
transitions ->  {}

item set 698 
attribute-section -> OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 699 
attribute-list -> attribute-list COMMA attribute . 
transitions ->  {}

item set 700 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 701 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":837,"attribute":699,"attribute-name":340,"type-name":348,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 702 
attribute-arguments -> OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 703 
attribute-arguments -> OPEN_PARENS positional-argument-list .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS positional-argument-list .COMMA named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list .COMMA positional-argument 
transitions ->  {"CLOSE_PARENS":838,"COMMA":839}

item set 704 
attribute-arguments -> OPEN_PARENS named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":840,"COMMA":841}

item set 705 
positional-argument-list -> positional-argument . 
transitions ->  {}

item set 706 
named-argument-list -> named-argument . 
transitions ->  {}

item set 707 
positional-argument -> attribute-argument-expression . 
transitions ->  {}

item set 708 
named-argument -> IDENTIFIER_WITH_TEMPLATE .ASSIGN attribute-argument-expression
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON member-access
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON invocation-expression
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"ASSIGN":842,"DOUBLE_COLON":200}

item set 709 
attribute-argument-expression -> expression . 
transitions ->  {}

item set 710 
switch-label -> CASE constant-expression COLON . 
transitions ->  {}

item set 711 
argument-list -> argument-list COLON argument . 
transitions ->  {}

item set 712 
argument-list -> argument-list COMMA argument . 
transitions ->  {}

item set 713 
method-header -> type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 714 
constant-declarators -> constant-declarators COMMA constant-declarator .
constant-declarators -> constant-declarators COMMA constant-declarator . 
transitions ->  {}

item set 715 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression .
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 716 
specific-catch-clause -> CATCH OPEN_PARENS type .CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS type .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
array-type -> type .rank-specifiers
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":843,"IDENTIFIER_WITH_TEMPLATE":844,"rank-specifiers":216,"IDENTIFIER":76,"rank-specifier":220,"OPEN_BRACKET":221}

item set 717 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 718 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 719 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators .CLOSE_PARENS embedded-statement
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"CLOSE_PARENS":845,"COMMA":359}

item set 720 
method-header -> modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 721 
method-header -> modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":846}

item set 722 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":847,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 723 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON . 
transitions ->  {}

item set 724 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON . 
transitions ->  {}

item set 725 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body .
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":848}

item set 726 
class-body -> OPEN_BRACE member-list CLOSE_BRACE . 
transitions ->  {}

item set 727 
member-list -> class-member-declaration member-list . 
transitions ->  {}

item set 728 
member-list -> access-specifier COLON .member-list
member-list -> access-specifier COLON .
member-list -> .class-member-declaration member-list
member-list -> .class-member-declaration
member-list -> .access-specifier COLON member-list
member-list -> .access-specifier COLON
class-member-declaration -> .constant-declaration
class-member-declaration -> .class-method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .event-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
access-specifier -> .PRIVATE
access-specifier -> .PROTECTED
access-specifier -> .PUBLIC
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
class-method-declaration -> .method-header block SEMICOLON
class-method-declaration -> .method-header block
class-method-declaration -> .method-header SEMICOLON
class-method-declaration -> .method-header
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"member-list":849,"class-member-declaration":563,"access-specifier":564,"constant-declaration":565,"class-method-declaration":566,"field-declaration":567,"property-declaration":568,"event-declaration":569,"indexer-declaration":570,"operator-declaration":571,"constructor-declaration":572,"static-constructor-declaration":573,"destructor-declaration":574,"type-declaration":575,"PRIVATE":576,"PROTECTED":577,"PUBLIC":578,"CONST":579,"attributes":580,"modifiers":581,"method-header":582,"type-with-interr":583,"EVENT":584,"indexer-declarator":585,"constructor-declarator":586,"TILDE":587,"EXTERN":588,"class-declaration":589,"struct-declaration":590,"interface-declaration":591,"enum-declaration":592,"delegate-declaration":593,"attribute-sections":157,"modifier":98,"member-name-with-double-colon":99,"type":594,"IDENTIFIER_WITH_TEMPLATE":595,"CLASS":75,"STRUCT":596,"INTERFACE":597,"ENUM":598,"DELEGATE":599,"attribute-section":171,"UNSAFE":240,"ASYNC":41,"PARTIAL":144,"INTERNAL":146,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"NEW":241,"local-variable":156,"non-array-type":79,"array-type":80,"IDENTIFIER":76,"OPEN_BRACKET":174,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":600,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"STAR":210,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"WHERE":42,"namespace-or-type-name":168}

item set 729 
constant-declaration -> CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":850,"constant-declarator":379,"IDENTIFIER_WITH_TEMPLATE":380,"IDENTIFIER":76}

item set 730 
constant-declaration -> attributes CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":851,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 731 
constant-declaration -> attributes modifiers .CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> attributes modifiers .type-with-interr member-name SEMICOLON
property-declaration -> attributes modifiers .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> attributes modifiers .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes modifiers .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes modifiers .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes modifiers .operator-declarator method-body
constructor-declaration -> attributes modifiers .constructor-declarator method-body
static-constructor-declaration -> attributes modifiers .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes modifiers .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes modifiers .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> modifiers .modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
operator-declarator -> .unary-operator-declarator
operator-declarator -> .binary-operator-declarator
operator-declarator -> .conversion-operator-declarator
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
unary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":852,"type-with-interr":853,"EVENT":854,"indexer-declarator":855,"operator-declarator":856,"constructor-declarator":857,"IDENTIFIER_WITH_TEMPLATE":858,"type":859,"STRUCT":860,"INTERFACE":861,"ENUM":862,"DELEGATE":863,"modifier":238,"unary-operator-declarator":755,"binary-operator-declarator":756,"conversion-operator-declarator":757,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"UNSAFE":240,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"IMPLICIT":758,"EXPLICIT":759,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"WHERE":42}

item set 732 
field-declaration -> attributes type-with-interr .member-name SEMICOLON
property-declaration -> attributes type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":864,"THIS":763,"variable-declarators":764,"variable-declarator":765,"type-name":766,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 733 
event-declaration -> attributes EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":865,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 734 
indexer-declaration -> attributes indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":866}

item set 735 
constructor-declaration -> attributes constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":867,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 736 
destructor-declaration -> attributes TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_KEYWORD -> TILDE .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":868,"IDENTIFIER_WITH_KEYWORD":370,"IDENTIFIER":76,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42}

item set 737 
destructor-declaration -> attributes EXTERN .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifier -> EXTERN . 
transitions ->  {"TILDE":869}

item set 738 
method-header -> attributes type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":488,"INTERR":774,"rank-specifiers":216,"local-variable":156,"rank-specifier":220,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"OPEN_BRACKET":221,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 739 
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":870,"IDENTIFIER":76}

item set 740 
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":871,"IDENTIFIER":76}

item set 741 
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":872,"IDENTIFIER":76}

item set 742 
delegate-declaration -> attributes DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":873,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 743 
constant-declaration -> modifiers CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":874,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 744 
field-declaration -> modifiers type-with-interr .member-name SEMICOLON
property-declaration -> modifiers type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
unary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":875,"THIS":763,"OPERATOR":876,"variable-declarators":764,"variable-declarator":765,"type-name":766,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 745 
event-declaration -> modifiers EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> modifiers EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":877,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 746 
indexer-declaration -> modifiers indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":878}

item set 747 
operator-declaration -> modifiers operator-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":879,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 748 
constructor-declaration -> modifiers constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":880,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 749 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":881}

item set 750 
method-header -> modifiers type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> modifiers type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":401,"INTERR":774,"rank-specifiers":216,"local-variable":156,"rank-specifier":220,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"OPEN_BRACKET":221,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 751 
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":882,"IDENTIFIER":76}

item set 752 
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":883,"IDENTIFIER":76}

item set 753 
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":884,"IDENTIFIER":76}

item set 754 
delegate-declaration -> modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":885,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 755 
operator-declarator -> unary-operator-declarator . 
transitions ->  {}

item set 756 
operator-declarator -> binary-operator-declarator . 
transitions ->  {}

item set 757 
operator-declarator -> conversion-operator-declarator . 
transitions ->  {}

item set 758 
conversion-operator-declarator -> IMPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPERATOR":886}

item set 759 
conversion-operator-declarator -> EXPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPERATOR":887}

item set 760 
class-method-declaration -> method-header block .SEMICOLON
class-method-declaration -> method-header block . 
transitions ->  {"SEMICOLON":888}

item set 761 
class-method-declaration -> method-header SEMICOLON . 
transitions ->  {}

item set 762 
field-declaration -> type-with-interr member-name .SEMICOLON
property-declaration -> type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":889,"OPEN_BRACE":890,"OPEN_BRACKET":891}

item set 763 
indexer-declarator -> type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
IDENTIFIER_WITH_KEYWORD -> THIS . 
transitions ->  {"OPEN_BRACKET":892}

item set 764 
member-name -> variable-declarators .
variable-declarators -> variable-declarators .COMMA variable-declarator 
transitions ->  {"COMMA":893}

item set 765 
variable-declarators -> variable-declarator . 
transitions ->  {}

item set 766 
variable-declarator -> type-name .ASSIGN variable-initializer
variable-declarator -> type-name . 
transitions ->  {"ASSIGN":894}

item set 767 
event-declaration -> EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":895,"member-name":896,"variable-declarator":765,"type-name":766,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 768 
indexer-declaration -> indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":897,"get-accessor-declaration":898,"set-accessor-declaration":899,"attributes":900,"modifiers":901,"GET":902,"SET":903,"attribute-sections":157,"modifier":98,"attribute-section":171,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"OPEN_BRACKET":174}

item set 769 
constructor-declaration -> constructor-declarator method-body . 
transitions ->  {}

item set 770 
method-body -> block . 
transitions ->  {}

item set 771 
method-body -> SEMICOLON . 
transitions ->  {}

item set 772 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":905}

item set 773 
destructor-declaration -> EXTERN TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":906,"IDENTIFIER":76}

item set 774 
type-with-interr -> type INTERR .
local-variable -> INTERR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":333,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 775 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":907,"formal-parameter-list":908,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 776 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
struct-interfaces -> .COLON interface-type-list 
transitions ->  {"where-base":909,"struct-interfaces":910,"COLON":911}

item set 777 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
interface-base -> .COLON interface-type-list 
transitions ->  {"where-base":912,"interface-base":913,"COLON":914}

item set 778 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":915,"enum-base":916,"OPEN_BRACE":917,"COLON":918}

item set 779 
delegate-declaration -> DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":919,"IDENTIFIER":76}

item set 780 
base-list -> base-list COMMA .base-specifier
base-specifier -> .type-with-interr
base-specifier -> .VIRTUAL access-specifier type-with-interr
base-specifier -> .VIRTUAL type-with-interr
base-specifier -> .access-specifier VIRTUAL type-with-interr
base-specifier -> .access-specifier type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
access-specifier -> .PRIVATE
access-specifier -> .PROTECTED
access-specifier -> .PUBLIC
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"base-specifier":920,"type-with-interr":603,"VIRTUAL":604,"access-specifier":605,"type":485,"PRIVATE":606,"PROTECTED":607,"PUBLIC":608,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 781 
base-specifier -> VIRTUAL access-specifier .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":921,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 782 
base-specifier -> VIRTUAL type-with-interr . 
transitions ->  {}

item set 783 
base-specifier -> access-specifier VIRTUAL .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":922,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 784 
base-specifier -> access-specifier type-with-interr . 
transitions ->  {}

item set 785 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expressions":923,"invocation-expression":81,"AWAIT":136,"primary-expression":358,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 786 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> .DOT IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> . 
transitions ->  {"IDENTIFIER_WITH_DOT":924,"DOT":925,"OP_PTR":228}

item set 787 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 788 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":926,"OPEN_BRACE":255}

item set 789 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET .block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":927,"OPEN_BRACE":255}

item set 790 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS .block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":928,"OPEN_BRACE":255}

item set 791 
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 792 
block-expression-list -> block-expression-list COMMA block-expression-list-unit . 
transitions ->  {}

item set 793 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .ELSE embedded-statement 
transitions ->  {"ELSE":929}

item set 794 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block . 
transitions ->  {}

item set 795 
switch-block -> OPEN_BRACE .CLOSE_BRACE
switch-block -> OPEN_BRACE .switch-sections CLOSE_BRACE
switch-sections -> .switch-sections switch-section
switch-sections -> .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":930,"switch-sections":931,"switch-section":932,"switch-labels":933,"switch-label":351,"CASE":352,"DEFAULT":523}

item set 796 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 797 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":934}

item set 798 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":935,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 799 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":936}

item set 800 
for-iterator -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":629}

item set 801 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":937,"for-iterator":938,"statement-expression-list":800,"statement-expression":438,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"invocation-expression":81,"NEW":197,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 802 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":939,"for-iterator":940,"statement-expression-list":800,"statement-expression":438,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"invocation-expression":81,"NEW":197,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 803 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":941}

item set 804 
statement-expression-list -> statement-expression-list COMMA statement-expression . 
transitions ->  {}

item set 805 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":942,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 806 
conditional-expression -> conditional-or-expression INTERR expression COLON .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":943,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 807 
formal-parameter-list -> fixed-parameters COMMA parameter-array . 
transitions ->  {}

item set 808 
fixed-parameters -> fixed-parameters COMMA fixed-parameter . 
transitions ->  {}

item set 809 
parameter-array -> PARAMS array-type IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 810 
parameter-array -> attributes PARAMS array-type .IDENTIFIER_WITH_TEMPLATE
type -> array-type .STARS
type -> array-type .
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":944,"STARS":248,"IDENTIFIER":76,"STAR":210}

item set 811 
fixed-parameter -> attributes type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 812 
fixed-parameter -> attributes parameter-modifier type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":945,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 813 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":946,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 814 
fixed-parameter -> THIS type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 815 
fixed-parameter -> parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 816 
method-header -> attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 817 
method-header -> attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":947}

item set 818 
method-header -> attributes modifiers type member-name-with-double-colon OPEN_PARENS .CLOSE_PARENS
method-header -> attributes modifiers type member-name-with-double-colon OPEN_PARENS .formal-parameter-list CLOSE_PARENS
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":948,"formal-parameter-list":949,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 819 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block . 
transitions ->  {}

item set 820 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace . 
transitions ->  {}

item set 821 
argument-list-with-brace -> OPEN_BRACE .argument-list COMMA CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE .argument-list CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE .CLOSE_BRACE
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":950,"CLOSE_BRACE":951,"argument":363,"expression":364,"REF":365,"OUT":366,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 822 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers array-initializer
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":952,"array-initializer":953,"rank-specifier":220,"OPEN_BRACE":494,"OPEN_BRACKET":221}

item set 823 
array-initializer -> OPEN_BRACE variable-initializer-list CLOSE_BRACE . 
transitions ->  {}

item set 824 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA .CLOSE_BRACE
variable-initializer-list -> variable-initializer-list COMMA .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":954,"variable-initializer":955,"expression":677,"array-initializer":678,"conditional-expression":289,"assignment":290,"OPEN_BRACE":494,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 825 
invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 826 
invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 827 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 828 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 829 
dbl-expression-list -> dbl-expression-list COMMA expression expression . 
transitions ->  {}

item set 830 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 831 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 832 
type-expression-list -> type-expression-list COMMA type expression . 
transitions ->  {}

item set 833 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 834 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 835 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR .expression block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":956,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 836 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression .block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":957,"OPEN_BRACE":46}

item set 837 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 838 
attribute-arguments -> OPEN_PARENS positional-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 839 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA .named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list COMMA .positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"named-argument-list":958,"positional-argument":959,"named-argument":706,"attribute-argument-expression":707,"IDENTIFIER_WITH_TEMPLATE":708,"expression":709,"IDENTIFIER":76,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 840 
attribute-arguments -> OPEN_PARENS named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 841 
named-argument-list -> named-argument-list COMMA .named-argument
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"named-argument":960,"IDENTIFIER_WITH_TEMPLATE":961,"IDENTIFIER":76}

item set 842 
named-argument -> IDENTIFIER_WITH_TEMPLATE ASSIGN .attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"attribute-argument-expression":962,"expression":709,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 843 
specific-catch-clause -> CATCH OPEN_PARENS type CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":963,"OPEN_BRACE":46}

item set 844 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":964}

item set 845 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":965,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 846 
method-header -> modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 847 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 848 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON . 
transitions ->  {}

item set 849 
member-list -> access-specifier COLON member-list . 
transitions ->  {}

item set 850 
constant-declaration -> CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":966,"COMMA":541}

item set 851 
constant-declaration -> attributes CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":967,"constant-declarator":379,"IDENTIFIER_WITH_TEMPLATE":380,"IDENTIFIER":76}

item set 852 
constant-declaration -> attributes modifiers CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":968,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 853 
field-declaration -> attributes modifiers type-with-interr .member-name SEMICOLON
property-declaration -> attributes modifiers type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
unary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":969,"THIS":763,"OPERATOR":876,"variable-declarators":764,"variable-declarator":765,"type-name":766,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 854 
event-declaration -> attributes modifiers EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes modifiers EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":970,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 855 
indexer-declaration -> attributes modifiers indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":971}

item set 856 
operator-declaration -> attributes modifiers operator-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":972,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 857 
constructor-declaration -> attributes modifiers constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":973,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 858 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":974}

item set 859 
method-header -> attributes modifiers type .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes modifiers type .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name-with-double-colon":669,"INTERR":774,"rank-specifiers":216,"local-variable":156,"rank-specifier":220,"STARS":170,"IDENTIFIER_WITH_KEYWORD":209,"OPEN_BRACKET":221,"STAR":210,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 860 
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":975,"IDENTIFIER":76}

item set 861 
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":976,"IDENTIFIER":76}

item set 862 
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":977,"IDENTIFIER":76}

item set 863 
delegate-declaration -> attributes modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":978,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 864 
field-declaration -> attributes type-with-interr member-name .SEMICOLON
property-declaration -> attributes type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":979,"OPEN_BRACE":980,"OPEN_BRACKET":891}

item set 865 
event-declaration -> attributes EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> attributes EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":981,"member-name":982,"variable-declarator":765,"type-name":766,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 866 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":983,"get-accessor-declaration":898,"set-accessor-declaration":899,"attributes":900,"modifiers":901,"GET":902,"SET":903,"attribute-sections":157,"modifier":98,"attribute-section":171,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"OPEN_BRACKET":174}

item set 867 
constructor-declaration -> attributes constructor-declarator method-body . 
transitions ->  {}

item set 868 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":984}

item set 869 
destructor-declaration -> attributes EXTERN TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":985,"IDENTIFIER":76}

item set 870 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
struct-interfaces -> .COLON interface-type-list 
transitions ->  {"where-base":986,"struct-interfaces":987,"COLON":911}

item set 871 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
interface-base -> .COLON interface-type-list 
transitions ->  {"where-base":988,"interface-base":989,"COLON":914}

item set 872 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":990,"enum-base":991,"OPEN_BRACE":917,"COLON":918}

item set 873 
delegate-declaration -> attributes DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":992,"IDENTIFIER":76}

item set 874 
constant-declaration -> modifiers CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":993,"constant-declarator":379,"IDENTIFIER_WITH_TEMPLATE":380,"IDENTIFIER":76}

item set 875 
field-declaration -> modifiers type-with-interr member-name .SEMICOLON
property-declaration -> modifiers type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":994,"OPEN_BRACE":995,"OPEN_BRACKET":891}

item set 876 
unary-operator-declarator -> type-with-interr OPERATOR .overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR .overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
overloadable-operator -> .overloadable-unary-operator
overloadable-operator -> .overloadable-binary-operator
overloadable-unary-operator -> .OP_INC
overloadable-unary-operator -> .OP_DEC
overloadable-unary-operator -> .MINUS
overloadable-unary-operator -> .BANG
overloadable-unary-operator -> .TILDE
overloadable-unary-operator -> .PLUS
overloadable-unary-operator -> .TRUE
overloadable-unary-operator -> .FALSE
overloadable-binary-operator -> .PLUS
overloadable-binary-operator -> .MINUS
overloadable-binary-operator -> .STAR
overloadable-binary-operator -> .DIV
overloadable-binary-operator -> .PERCENT
overloadable-binary-operator -> .AMP
overloadable-binary-operator -> .BITWISE_OR
overloadable-binary-operator -> .CARET
overloadable-binary-operator -> .OP_LEFT_SHIFT
overloadable-binary-operator -> .RIGHT_SHIFT
overloadable-binary-operator -> .OP_EQ
overloadable-binary-operator -> .OP_NE
overloadable-binary-operator -> .OP_GE
overloadable-binary-operator -> .OP_LE
overloadable-binary-operator -> .GT
overloadable-binary-operator -> .LT 
transitions ->  {"overloadable-operator":996,"overloadable-unary-operator":997,"overloadable-binary-operator":998,"OP_INC":999,"OP_DEC":1000,"MINUS":1001,"BANG":1002,"TILDE":1003,"PLUS":1004,"TRUE":1005,"FALSE":1006,"STAR":1007,"DIV":1008,"PERCENT":1009,"AMP":1010,"BITWISE_OR":1011,"CARET":1012,"OP_LEFT_SHIFT":1013,"RIGHT_SHIFT":1014,"OP_EQ":1015,"OP_NE":1016,"OP_GE":1017,"OP_LE":1018,"GT":1019,"LT":1020}

item set 877 
event-declaration -> modifiers EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> modifiers EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":1021,"member-name":1022,"variable-declarator":765,"type-name":766,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 878 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1023,"get-accessor-declaration":898,"set-accessor-declaration":899,"attributes":900,"modifiers":901,"GET":902,"SET":903,"attribute-sections":157,"modifier":98,"attribute-section":171,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"OPEN_BRACKET":174}

item set 879 
operator-declaration -> modifiers operator-declarator method-body . 
transitions ->  {}

item set 880 
constructor-declaration -> modifiers constructor-declarator method-body . 
transitions ->  {}

item set 881 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1024,"formal-parameter-list":908,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 882 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
struct-interfaces -> .COLON interface-type-list 
transitions ->  {"where-base":1025,"struct-interfaces":1026,"COLON":911}

item set 883 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
interface-base -> .COLON interface-type-list 
transitions ->  {"where-base":1027,"interface-base":1028,"COLON":914}

item set 884 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":1029,"enum-base":1030,"OPEN_BRACE":917,"COLON":918}

item set 885 
delegate-declaration -> modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1031,"IDENTIFIER":76}

item set 886 
conversion-operator-declarator -> IMPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1032,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 887 
conversion-operator-declarator -> EXPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1033,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 888 
class-method-declaration -> method-header block SEMICOLON . 
transitions ->  {}

item set 889 
field-declaration -> type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 890 
property-declaration -> type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1034,"get-accessor-declaration":898,"set-accessor-declaration":899,"attributes":900,"modifiers":901,"GET":902,"SET":903,"attribute-sections":157,"modifier":98,"attribute-section":171,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"OPEN_BRACKET":174}

item set 891 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1035,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 892 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1036,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 893 
variable-declarators -> variable-declarators COMMA .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarator":1037,"type-name":766,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 894 
variable-declarator -> type-name ASSIGN .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-initializer":1038,"expression":677,"array-initializer":678,"conditional-expression":289,"assignment":290,"OPEN_BRACE":494,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 895 
event-declaration -> EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1039,"COMMA":893}

item set 896 
event-declaration -> EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1040}

item set 897 
indexer-declaration -> indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1041}

item set 898 
accessor-declarations -> get-accessor-declaration .
accessor-declarations -> get-accessor-declaration .set-accessor-declaration
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"set-accessor-declaration":1042,"attributes":1043,"modifiers":1044,"SET":903,"attribute-sections":157,"modifier":98,"attribute-section":171,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"OPEN_BRACKET":174}

item set 899 
accessor-declarations -> set-accessor-declaration .
accessor-declarations -> set-accessor-declaration .get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"get-accessor-declaration":1045,"attributes":1046,"modifiers":1047,"GET":902,"attribute-sections":157,"modifier":98,"attribute-section":171,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"OPEN_BRACKET":174}

item set 900 
get-accessor-declaration -> attributes .modifiers GET method-body
get-accessor-declaration -> attributes .GET method-body
set-accessor-declaration -> attributes .modifiers SET method-body
set-accessor-declaration -> attributes .SET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":1048,"GET":1049,"SET":1050,"modifier":98,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241}

item set 901 
get-accessor-declaration -> modifiers .GET method-body
set-accessor-declaration -> modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1051,"SET":1052,"modifier":238,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241}

item set 902 
get-accessor-declaration -> GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1053,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 903 
set-accessor-declaration -> SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1054,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 904 
modifier -> ASYNC . 
transitions ->  {}

item set 905 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1055}

item set 906 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1056}

item set 907 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"constructor-initializer":1057,"COLON":1058}

item set 908 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS constructor-initializer 
transitions ->  {"CLOSE_PARENS":1059}

item set 909 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1060,"OPEN_BRACE":1061}

item set 910 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON 
transitions ->  {"where-base":1062}

item set 911 
struct-interfaces -> COLON .interface-type-list 
transitions ->  {"interface-type-list":1063}

item set 912 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1064,"OPEN_BRACE":1065}

item set 913 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON 
transitions ->  {"where-base":1066}

item set 914 
interface-base -> COLON .interface-type-list 
transitions ->  {"interface-type-list":1067}

item set 915 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1068}

item set 916 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":1069,"OPEN_BRACE":917}

item set 917 
enum-body -> OPEN_BRACE .CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations COMMA CLOSE_BRACE
enum-member-declarations -> .enum-member-declaration
enum-member-declarations -> .enum-member-declarations COMMA enum-member-declaration
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":1070,"enum-member-declarations":1071,"enum-member-declaration":1072,"IDENTIFIER_WITH_TEMPLATE":1073,"attributes":1074,"IDENTIFIER":76,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 918 
enum-base -> COLON .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1075,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 919 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":1076}

item set 920 
base-list -> base-list COMMA base-specifier . 
transitions ->  {}

item set 921 
base-specifier -> VIRTUAL access-specifier type-with-interr . 
transitions ->  {}

item set 922 
base-specifier -> access-specifier VIRTUAL type-with-interr . 
transitions ->  {}

item set 923 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> .DOT IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> . 
transitions ->  {"IDENTIFIER_WITH_DOT":1077,"DOT":925,"OP_PTR":228}

item set 924 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1078,"OPEN_BRACE":255}

item set 925 
invocation-expressions -> invocation-expressions DOT .invocation-expression
member-access -> invocation-expressions DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> DOT .IDENTIFIER_WITH_KEYWORD
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expression":383,"IDENTIFIER_WITH_KEYWORD":1079,"AWAIT":136,"primary-expression":358,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":187,"WHERE":42,"primary-no-array-creation-expression":77,"array-creation-expression":78,"IDENTIFIER":76,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"type":196,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"TRUE":172,"FALSE":173,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 926 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace . 
transitions ->  {}

item set 927 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace . 
transitions ->  {}

item set 928 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 929 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1080,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 930 
switch-block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 931 
switch-block -> OPEN_BRACE switch-sections .CLOSE_BRACE
switch-sections -> switch-sections .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":1081,"switch-section":1082,"switch-labels":933,"switch-label":351,"CASE":352,"DEFAULT":523}

item set 932 
switch-sections -> switch-section . 
transitions ->  {}

item set 933 
switch-section -> switch-labels .statement-list
switch-labels -> switch-labels .switch-label
statement-list -> .statement
statement-list -> .statement-list statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
declaration-statement -> .local-variable-declaration block
declaration-statement -> .local-constant-declaration block
declaration-statement -> .local-variable-declaration
declaration-statement -> .local-constant-declaration
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
attributes -> .attribute-sections
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"statement-list":1083,"switch-label":522,"statement":226,"CASE":352,"DEFAULT":353,"labeled-statement":5,"declaration-statement":6,"embedded-statement":7,"IDENTIFIER_WITH_KEYWORD":8,"local-variable-declaration":9,"local-constant-declaration":10,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"TILDE":26,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":41,"WHERE":42,"primary-expression":43,"type":44,"CONST":45,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"IDENTIFIER":76,"primary-no-array-creation-expression":77,"array-creation-expression":78,"non-array-type":79,"array-type":80,"invocation-expression":81,"NEW":82,"unary-expression":83,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"attributes":100,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"STAR":142,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"attribute-sections":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"BASE":165,"TYPEOF":166,"SIZEOF":167,"namespace-or-type-name":168,"INTERR":169,"STARS":170,"attribute-section":171,"TRUE":172,"FALSE":173,"OPEN_BRACKET":174}

item set 934 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":1084}

item set 935 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 936 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1085,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 937 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1086,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 938 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1087}

item set 939 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1088,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 940 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1089}

item set 941 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1090,"for-iterator":1091,"statement-expression-list":800,"statement-expression":438,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"invocation-expression":81,"NEW":197,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-no-array-creation-expression":77,"array-creation-expression":78,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168}

item set 942 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1092}

item set 943 
conditional-expression -> conditional-or-expression INTERR expression COLON expression . 
transitions ->  {}

item set 944 
parameter-array -> attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 945 
fixed-parameter -> attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 946 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression . 
transitions ->  {}

item set 947 
method-header -> attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 948 
method-header -> attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 949 
method-header -> attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1093}

item set 950 
argument-list-with-brace -> OPEN_BRACE argument-list .COMMA CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE argument-list .CLOSE_BRACE
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"COMMA":1094,"CLOSE_BRACE":1095,"COLON":529}

item set 951 
argument-list-with-brace -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 952 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .array-initializer
rank-specifiers -> rank-specifiers .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"array-initializer":1096,"rank-specifier":372,"OPEN_BRACE":494,"OPEN_BRACKET":221}

item set 953 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer . 
transitions ->  {}

item set 954 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 955 
variable-initializer-list -> variable-initializer-list COMMA variable-initializer . 
transitions ->  {}

item set 956 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1097,"OPEN_BRACE":46}

item set 957 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block . 
transitions ->  {}

item set 958 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":1098,"COMMA":841}

item set 959 
positional-argument-list -> positional-argument-list COMMA positional-argument . 
transitions ->  {}

item set 960 
named-argument-list -> named-argument-list COMMA named-argument . 
transitions ->  {}

item set 961 
named-argument -> IDENTIFIER_WITH_TEMPLATE .ASSIGN attribute-argument-expression 
transitions ->  {"ASSIGN":842}

item set 962 
named-argument -> IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression . 
transitions ->  {}

item set 963 
specific-catch-clause -> CATCH OPEN_PARENS type CLOSE_PARENS block . 
transitions ->  {}

item set 964 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1099,"OPEN_BRACE":46}

item set 965 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 966 
constant-declaration -> CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 967 
constant-declaration -> attributes CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1100,"COMMA":541}

item set 968 
constant-declaration -> attributes modifiers CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":1101,"constant-declarator":379,"IDENTIFIER_WITH_TEMPLATE":380,"IDENTIFIER":76}

item set 969 
field-declaration -> attributes modifiers type-with-interr member-name .SEMICOLON
property-declaration -> attributes modifiers type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":1102,"OPEN_BRACE":1103,"OPEN_BRACKET":891}

item set 970 
event-declaration -> attributes modifiers EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> attributes modifiers EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":1104,"member-name":1105,"variable-declarator":765,"type-name":766,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 971 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1106,"get-accessor-declaration":898,"set-accessor-declaration":899,"attributes":900,"modifiers":901,"GET":902,"SET":903,"attribute-sections":157,"modifier":98,"attribute-section":171,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"OPEN_BRACKET":174}

item set 972 
operator-declaration -> attributes modifiers operator-declarator method-body . 
transitions ->  {}

item set 973 
constructor-declaration -> attributes modifiers constructor-declarator method-body . 
transitions ->  {}

item set 974 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1107,"formal-parameter-list":908,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 975 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
struct-interfaces -> .COLON interface-type-list 
transitions ->  {"where-base":1108,"struct-interfaces":1109,"COLON":911}

item set 976 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
interface-base -> .COLON interface-type-list 
transitions ->  {"where-base":1110,"interface-base":1111,"COLON":914}

item set 977 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":1112,"enum-base":1113,"OPEN_BRACE":917,"COLON":918}

item set 978 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1114,"IDENTIFIER":76}

item set 979 
field-declaration -> attributes type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 980 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1115,"get-accessor-declaration":898,"set-accessor-declaration":899,"attributes":900,"modifiers":901,"GET":902,"SET":903,"attribute-sections":157,"modifier":98,"attribute-section":171,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"OPEN_BRACKET":174}

item set 981 
event-declaration -> attributes EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1116,"COMMA":893}

item set 982 
event-declaration -> attributes EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1117}

item set 983 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1118}

item set 984 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1119}

item set 985 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1120}

item set 986 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1121,"OPEN_BRACE":1061}

item set 987 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON 
transitions ->  {"where-base":1122}

item set 988 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1123,"OPEN_BRACE":1065}

item set 989 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON 
transitions ->  {"where-base":1124}

item set 990 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1125}

item set 991 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":1126,"OPEN_BRACE":917}

item set 992 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":1127}

item set 993 
constant-declaration -> modifiers CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1128,"COMMA":541}

item set 994 
field-declaration -> modifiers type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 995 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1129,"get-accessor-declaration":898,"set-accessor-declaration":899,"attributes":900,"modifiers":901,"GET":902,"SET":903,"attribute-sections":157,"modifier":98,"attribute-section":171,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"OPEN_BRACKET":174}

item set 996 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1130}

item set 997 
overloadable-operator -> overloadable-unary-operator . 
transitions ->  {}

item set 998 
overloadable-operator -> overloadable-binary-operator . 
transitions ->  {}

item set 999 
overloadable-unary-operator -> OP_INC . 
transitions ->  {}

item set 1000 
overloadable-unary-operator -> OP_DEC . 
transitions ->  {}

item set 1001 
overloadable-unary-operator -> MINUS .
overloadable-binary-operator -> MINUS . 
transitions ->  {}

item set 1002 
overloadable-unary-operator -> BANG . 
transitions ->  {}

item set 1003 
overloadable-unary-operator -> TILDE . 
transitions ->  {}

item set 1004 
overloadable-unary-operator -> PLUS .
overloadable-binary-operator -> PLUS . 
transitions ->  {}

item set 1005 
overloadable-unary-operator -> TRUE . 
transitions ->  {}

item set 1006 
overloadable-unary-operator -> FALSE . 
transitions ->  {}

item set 1007 
overloadable-binary-operator -> STAR . 
transitions ->  {}

item set 1008 
overloadable-binary-operator -> DIV . 
transitions ->  {}

item set 1009 
overloadable-binary-operator -> PERCENT . 
transitions ->  {}

item set 1010 
overloadable-binary-operator -> AMP . 
transitions ->  {}

item set 1011 
overloadable-binary-operator -> BITWISE_OR . 
transitions ->  {}

item set 1012 
overloadable-binary-operator -> CARET . 
transitions ->  {}

item set 1013 
overloadable-binary-operator -> OP_LEFT_SHIFT . 
transitions ->  {}

item set 1014 
overloadable-binary-operator -> RIGHT_SHIFT . 
transitions ->  {}

item set 1015 
overloadable-binary-operator -> OP_EQ . 
transitions ->  {}

item set 1016 
overloadable-binary-operator -> OP_NE . 
transitions ->  {}

item set 1017 
overloadable-binary-operator -> OP_GE . 
transitions ->  {}

item set 1018 
overloadable-binary-operator -> OP_LE . 
transitions ->  {}

item set 1019 
overloadable-binary-operator -> GT . 
transitions ->  {}

item set 1020 
overloadable-binary-operator -> LT . 
transitions ->  {}

item set 1021 
event-declaration -> modifiers EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1131,"COMMA":893}

item set 1022 
event-declaration -> modifiers EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1132}

item set 1023 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1133}

item set 1024 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
method-body -> .block
method-body -> .SEMICOLON
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1134,"constructor-initializer":1057,"block":770,"SEMICOLON":771,"COLON":1058,"OPEN_BRACE":46}

item set 1025 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1135,"OPEN_BRACE":1061}

item set 1026 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON 
transitions ->  {"where-base":1136}

item set 1027 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1137,"OPEN_BRACE":1065}

item set 1028 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON 
transitions ->  {"where-base":1138}

item set 1029 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1139}

item set 1030 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":1140,"OPEN_BRACE":917}

item set 1031 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":1141}

item set 1032 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1142}

item set 1033 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1143}

item set 1034 
property-declaration -> type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1144}

item set 1035 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACKET":1145}

item set 1036 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACKET":1146}

item set 1037 
variable-declarators -> variable-declarators COMMA variable-declarator . 
transitions ->  {}

item set 1038 
variable-declarator -> type-name ASSIGN variable-initializer . 
transitions ->  {}

item set 1039 
event-declaration -> EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1040 
event-declaration -> EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1147,"add-accessor-declaration":1148,"remove-accessor-declaration":1149,"ADD":1150,"attributes":1151,"REMOVE":1152,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1041 
indexer-declaration -> indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1042 
accessor-declarations -> get-accessor-declaration set-accessor-declaration . 
transitions ->  {}

item set 1043 
set-accessor-declaration -> attributes .modifiers SET method-body
set-accessor-declaration -> attributes .SET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":1153,"SET":1050,"modifier":98,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241}

item set 1044 
set-accessor-declaration -> modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"SET":1052,"modifier":238,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241}

item set 1045 
accessor-declarations -> set-accessor-declaration get-accessor-declaration . 
transitions ->  {}

item set 1046 
get-accessor-declaration -> attributes .modifiers GET method-body
get-accessor-declaration -> attributes .GET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":1154,"GET":1049,"modifier":98,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241}

item set 1047 
get-accessor-declaration -> modifiers .GET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1051,"modifier":238,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241}

item set 1048 
get-accessor-declaration -> attributes modifiers .GET method-body
set-accessor-declaration -> attributes modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1155,"SET":1156,"modifier":238,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241}

item set 1049 
get-accessor-declaration -> attributes GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1157,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 1050 
set-accessor-declaration -> attributes SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1158,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 1051 
get-accessor-declaration -> modifiers GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1159,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 1052 
set-accessor-declaration -> modifiers SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1160,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 1053 
get-accessor-declaration -> GET method-body . 
transitions ->  {}

item set 1054 
set-accessor-declaration -> SET method-body . 
transitions ->  {}

item set 1055 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1161,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 1056 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1162}

item set 1057 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer . 
transitions ->  {}

item set 1058 
constructor-initializer -> COLON .BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON .BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> COLON .THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON .THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"BASE":1163,"THIS":1164}

item set 1059 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .constructor-initializer
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"constructor-initializer":1165,"COLON":1058}

item set 1060 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1166}

item set 1061 
struct-body -> OPEN_BRACE .CLOSE_BRACE
struct-body -> OPEN_BRACE .struct-member-declarations CLOSE_BRACE
struct-member-declarations -> .struct-member-declaration
struct-member-declarations -> .struct-member-declarations struct-member-declaration
struct-member-declaration -> .constant-declaration
struct-member-declaration -> .field-declaration
struct-member-declaration -> .method-declaration
struct-member-declaration -> .property-declaration
struct-member-declaration -> .event-declaration
struct-member-declaration -> .indexer-declaration
struct-member-declaration -> .operator-declaration
struct-member-declaration -> .constructor-declaration
struct-member-declaration -> .static-constructor-declaration
struct-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
method-declaration -> .method-header block
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
type-name -> .namespace-or-type-name
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_BRACE":1167,"struct-member-declarations":1168,"struct-member-declaration":1169,"constant-declaration":1170,"field-declaration":1171,"method-declaration":1172,"property-declaration":1173,"event-declaration":1174,"indexer-declaration":1175,"operator-declaration":1176,"constructor-declaration":1177,"static-constructor-declaration":1178,"type-declaration":1179,"CONST":579,"attributes":1180,"modifiers":581,"type-with-interr":583,"method-header":74,"EVENT":584,"indexer-declarator":585,"constructor-declarator":586,"class-declaration":589,"struct-declaration":590,"interface-declaration":591,"enum-declaration":592,"delegate-declaration":593,"attribute-sections":157,"modifier":98,"type":594,"member-name-with-double-colon":99,"IDENTIFIER_WITH_TEMPLATE":595,"CLASS":75,"STRUCT":596,"INTERFACE":597,"ENUM":598,"DELEGATE":599,"attribute-section":171,"UNSAFE":240,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"non-array-type":79,"array-type":80,"local-variable":156,"IDENTIFIER":76,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":600,"namespace-or-type-name":168,"STAR":210,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"WHERE":42}

item set 1062 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1181,"OPEN_BRACE":1061}

item set 1063 
struct-interfaces -> COLON interface-type-list . 
transitions ->  {}

item set 1064 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1182}

item set 1065 
interface-body -> OPEN_BRACE .CLOSE_BRACE
interface-body -> OPEN_BRACE .interface-member-declarations CLOSE_BRACE
interface-member-declarations -> .interface-member-declaration
interface-member-declarations -> .interface-member-declarations interface-member-declaration
interface-member-declaration -> .interface-method-declaration
interface-member-declaration -> .interface-property-declaration
interface-member-declaration -> .interface-event-declaration
interface-member-declaration -> .interface-indexer-declaration
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
attributes -> .attribute-sections
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACE":1183,"interface-member-declarations":1184,"interface-member-declaration":1185,"interface-method-declaration":1186,"interface-property-declaration":1187,"interface-event-declaration":1188,"interface-indexer-declaration":1189,"type-with-interr":1190,"attributes":1191,"NEW":1192,"EVENT":1193,"type":485,"attribute-sections":157,"non-array-type":79,"array-type":80,"attribute-section":171,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"OPEN_BRACKET":174,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1066 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1194,"OPEN_BRACE":1065}

item set 1067 
interface-base -> COLON interface-type-list . 
transitions ->  {}

item set 1068 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 1069 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1195}

item set 1070 
enum-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 1071 
enum-body -> OPEN_BRACE enum-member-declarations .CLOSE_BRACE
enum-body -> OPEN_BRACE enum-member-declarations .COMMA CLOSE_BRACE
enum-member-declarations -> enum-member-declarations .COMMA enum-member-declaration 
transitions ->  {"CLOSE_BRACE":1196,"COMMA":1197}

item set 1072 
enum-member-declarations -> enum-member-declaration . 
transitions ->  {}

item set 1073 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE .
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":1198}

item set 1074 
enum-member-declaration -> attributes .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> attributes .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1199,"IDENTIFIER":76}

item set 1075 
enum-base -> COLON type-with-interr . 
transitions ->  {}

item set 1076 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1200,"formal-parameter-list":1201,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1077 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1202,"OPEN_BRACE":255}

item set 1078 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace . 
transitions ->  {}

item set 1079 
member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD .
IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":178}

item set 1080 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement . 
transitions ->  {}

item set 1081 
switch-block -> OPEN_BRACE switch-sections CLOSE_BRACE . 
transitions ->  {}

item set 1082 
switch-sections -> switch-sections switch-section . 
transitions ->  {}

item set 1083 
switch-section -> switch-labels statement-list .
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
declaration-statement -> .local-variable-declaration block
declaration-statement -> .local-constant-declaration block
declaration-statement -> .local-variable-declaration
declaration-statement -> .local-constant-declaration
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
attributes -> .attribute-sections
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"statement":382,"labeled-statement":5,"declaration-statement":6,"embedded-statement":7,"IDENTIFIER_WITH_KEYWORD":8,"local-variable-declaration":9,"local-constant-declaration":10,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"TILDE":26,"IDENTIFIER_WITH_TEMPLATE":27,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":40,"ASYNC":41,"WHERE":42,"primary-expression":43,"type":44,"CONST":45,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"IDENTIFIER":76,"primary-no-array-creation-expression":77,"array-creation-expression":78,"non-array-type":79,"array-type":80,"invocation-expression":81,"NEW":82,"unary-expression":83,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"attributes":100,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"STAR":142,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"attribute-sections":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"BASE":165,"TYPEOF":166,"SIZEOF":167,"namespace-or-type-name":168,"INTERR":169,"STARS":170,"attribute-section":171,"TRUE":172,"FALSE":173,"OPEN_BRACKET":174}

item set 1084 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 1085 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1086 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1087 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1203,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 1088 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1089 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1204,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 1090 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1205,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 1091 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1206}

item set 1092 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1207,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 1093 
method-header -> attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS . 
transitions ->  {}

item set 1094 
argument-list-with-brace -> OPEN_BRACE argument-list COMMA .CLOSE_BRACE
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":1208,"argument":712,"expression":364,"REF":365,"OUT":366,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 1095 
argument-list-with-brace -> OPEN_BRACE argument-list CLOSE_BRACE . 
transitions ->  {}

item set 1096 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer . 
transitions ->  {}

item set 1097 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block . 
transitions ->  {}

item set 1098 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1099 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block . 
transitions ->  {}

item set 1100 
constant-declaration -> attributes CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1101 
constant-declaration -> attributes modifiers CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1209,"COMMA":541}

item set 1102 
field-declaration -> attributes modifiers type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 1103 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1210,"get-accessor-declaration":898,"set-accessor-declaration":899,"attributes":900,"modifiers":901,"GET":902,"SET":903,"attribute-sections":157,"modifier":98,"attribute-section":171,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"OPEN_BRACKET":174}

item set 1104 
event-declaration -> attributes modifiers EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1211,"COMMA":893}

item set 1105 
event-declaration -> attributes modifiers EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1212}

item set 1106 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1213}

item set 1107 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
method-body -> .block
method-body -> .SEMICOLON
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1214,"constructor-initializer":1057,"block":770,"SEMICOLON":771,"COLON":1058,"OPEN_BRACE":46}

item set 1108 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1215,"OPEN_BRACE":1061}

item set 1109 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON 
transitions ->  {"where-base":1216}

item set 1110 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1217,"OPEN_BRACE":1065}

item set 1111 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON 
transitions ->  {"where-base":1218}

item set 1112 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1219}

item set 1113 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":1220,"OPEN_BRACE":917}

item set 1114 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":1221}

item set 1115 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1222}

item set 1116 
event-declaration -> attributes EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1117 
event-declaration -> attributes EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1223,"add-accessor-declaration":1148,"remove-accessor-declaration":1149,"ADD":1150,"attributes":1151,"REMOVE":1152,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1118 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1119 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1224,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 1120 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1225}

item set 1121 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1226}

item set 1122 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1227,"OPEN_BRACE":1061}

item set 1123 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1228}

item set 1124 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1229,"OPEN_BRACE":1065}

item set 1125 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 1126 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1230}

item set 1127 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1231,"formal-parameter-list":1232,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1128 
constant-declaration -> modifiers CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1129 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1233}

item set 1130 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1234,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1131 
event-declaration -> modifiers EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1132 
event-declaration -> modifiers EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1235,"add-accessor-declaration":1148,"remove-accessor-declaration":1149,"ADD":1150,"attributes":1151,"REMOVE":1152,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1133 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1134 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1135 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1236}

item set 1136 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1237,"OPEN_BRACE":1061}

item set 1137 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1238}

item set 1138 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1239,"OPEN_BRACE":1065}

item set 1139 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 1140 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1240}

item set 1141 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1241,"formal-parameter-list":1242,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1142 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1243,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1143 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1244,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1144 
property-declaration -> type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1145 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET . 
transitions ->  {}

item set 1146 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET . 
transitions ->  {}

item set 1147 
event-declaration -> EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1245}

item set 1148 
event-accessor-declarations -> add-accessor-declaration .remove-accessor-declaration
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"remove-accessor-declaration":1246,"REMOVE":1152,"attributes":1247,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1149 
event-accessor-declarations -> remove-accessor-declaration .add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"add-accessor-declaration":1248,"ADD":1150,"attributes":1249,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1150 
add-accessor-declaration -> ADD .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1250,"OPEN_BRACE":46}

item set 1151 
add-accessor-declaration -> attributes .ADD block
remove-accessor-declaration -> attributes .REMOVE block 
transitions ->  {"ADD":1251,"REMOVE":1252}

item set 1152 
remove-accessor-declaration -> REMOVE .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1253,"OPEN_BRACE":46}

item set 1153 
set-accessor-declaration -> attributes modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"SET":1156,"modifier":238,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241}

item set 1154 
get-accessor-declaration -> attributes modifiers .GET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1155,"modifier":238,"UNSAFE":240,"ASYNC":904,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241}

item set 1155 
get-accessor-declaration -> attributes modifiers GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1254,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 1156 
set-accessor-declaration -> attributes modifiers SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1255,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 1157 
get-accessor-declaration -> attributes GET method-body . 
transitions ->  {}

item set 1158 
set-accessor-declaration -> attributes SET method-body . 
transitions ->  {}

item set 1159 
get-accessor-declaration -> modifiers GET method-body . 
transitions ->  {}

item set 1160 
set-accessor-declaration -> modifiers SET method-body . 
transitions ->  {}

item set 1161 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1162 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1256,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 1163 
constructor-initializer -> COLON BASE .OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON BASE .OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1257}

item set 1164 
constructor-initializer -> COLON THIS .OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON THIS .OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1258}

item set 1165 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer . 
transitions ->  {}

item set 1166 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1167 
struct-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 1168 
struct-body -> OPEN_BRACE struct-member-declarations .CLOSE_BRACE
struct-member-declarations -> struct-member-declarations .struct-member-declaration
struct-member-declaration -> .constant-declaration
struct-member-declaration -> .field-declaration
struct-member-declaration -> .method-declaration
struct-member-declaration -> .property-declaration
struct-member-declaration -> .event-declaration
struct-member-declaration -> .indexer-declaration
struct-member-declaration -> .operator-declaration
struct-member-declaration -> .constructor-declaration
struct-member-declaration -> .static-constructor-declaration
struct-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
method-declaration -> .method-header block
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
type-name -> .namespace-or-type-name
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_BRACE":1259,"struct-member-declaration":1260,"constant-declaration":1170,"field-declaration":1171,"method-declaration":1172,"property-declaration":1173,"event-declaration":1174,"indexer-declaration":1175,"operator-declaration":1176,"constructor-declaration":1177,"static-constructor-declaration":1178,"type-declaration":1179,"CONST":579,"attributes":1180,"modifiers":581,"type-with-interr":583,"method-header":74,"EVENT":584,"indexer-declarator":585,"constructor-declarator":586,"class-declaration":589,"struct-declaration":590,"interface-declaration":591,"enum-declaration":592,"delegate-declaration":593,"attribute-sections":157,"modifier":98,"type":594,"member-name-with-double-colon":99,"IDENTIFIER_WITH_TEMPLATE":595,"CLASS":75,"STRUCT":596,"INTERFACE":597,"ENUM":598,"DELEGATE":599,"attribute-section":171,"UNSAFE":240,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"non-array-type":79,"array-type":80,"local-variable":156,"IDENTIFIER":76,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"INTERR":169,"STARS":170,"IDENTIFIER_WITH_KEYWORD":600,"namespace-or-type-name":168,"STAR":210,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"WHERE":42}

item set 1169 
struct-member-declarations -> struct-member-declaration . 
transitions ->  {}

item set 1170 
struct-member-declaration -> constant-declaration . 
transitions ->  {}

item set 1171 
struct-member-declaration -> field-declaration . 
transitions ->  {}

item set 1172 
struct-member-declaration -> method-declaration . 
transitions ->  {}

item set 1173 
struct-member-declaration -> property-declaration . 
transitions ->  {}

item set 1174 
struct-member-declaration -> event-declaration . 
transitions ->  {}

item set 1175 
struct-member-declaration -> indexer-declaration . 
transitions ->  {}

item set 1176 
struct-member-declaration -> operator-declaration . 
transitions ->  {}

item set 1177 
struct-member-declaration -> constructor-declaration . 
transitions ->  {}

item set 1178 
struct-member-declaration -> static-constructor-declaration . 
transitions ->  {}

item set 1179 
struct-member-declaration -> type-declaration . 
transitions ->  {}

item set 1180 
constant-declaration -> attributes .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> attributes .modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> attributes .type-with-interr member-name SEMICOLON
field-declaration -> attributes .modifiers type-with-interr member-name SEMICOLON
property-declaration -> attributes .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> attributes .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> attributes .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> attributes .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes .modifiers operator-declarator method-body
constructor-declaration -> attributes .constructor-declarator method-body
constructor-declaration -> attributes .modifiers constructor-declarator method-body
static-constructor-declaration -> attributes .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> attributes .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> attributes .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":730,"modifiers":731,"type-with-interr":732,"EVENT":733,"indexer-declarator":734,"constructor-declarator":735,"type":738,"STRUCT":739,"INTERFACE":740,"ENUM":741,"DELEGATE":742,"modifier":98,"IDENTIFIER_WITH_TEMPLATE":595,"non-array-type":79,"array-type":80,"UNSAFE":240,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"NEW":241,"IDENTIFIER":76,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"WHERE":42}

item set 1181 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1261}

item set 1182 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1183 
interface-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 1184 
interface-body -> OPEN_BRACE interface-member-declarations .CLOSE_BRACE
interface-member-declarations -> interface-member-declarations .interface-member-declaration
interface-member-declaration -> .interface-method-declaration
interface-member-declaration -> .interface-property-declaration
interface-member-declaration -> .interface-event-declaration
interface-member-declaration -> .interface-indexer-declaration
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
attributes -> .attribute-sections
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACE":1262,"interface-member-declaration":1263,"interface-method-declaration":1186,"interface-property-declaration":1187,"interface-event-declaration":1188,"interface-indexer-declaration":1189,"type-with-interr":1190,"attributes":1191,"NEW":1192,"EVENT":1193,"type":485,"attribute-sections":157,"non-array-type":79,"array-type":80,"attribute-section":171,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"OPEN_BRACKET":174,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1185 
interface-member-declarations -> interface-member-declaration . 
transitions ->  {}

item set 1186 
interface-member-declaration -> interface-method-declaration . 
transitions ->  {}

item set 1187 
interface-member-declaration -> interface-property-declaration . 
transitions ->  {}

item set 1188 
interface-member-declaration -> interface-event-declaration . 
transitions ->  {}

item set 1189 
interface-member-declaration -> interface-indexer-declaration . 
transitions ->  {}

item set 1190 
interface-method-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1264,"THIS":1265,"IDENTIFIER":76}

item set 1191 
interface-method-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> attributes .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> attributes .NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> attributes .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1266,"NEW":1267,"EVENT":1268,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1192 
interface-method-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> NEW .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> NEW .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1269,"EVENT":1270,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1193 
interface-event-declaration -> EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1271,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1194 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1272}

item set 1195 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 1196 
enum-body -> OPEN_BRACE enum-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1197 
enum-body -> OPEN_BRACE enum-member-declarations COMMA .CLOSE_BRACE
enum-member-declarations -> enum-member-declarations COMMA .enum-member-declaration
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":1273,"enum-member-declaration":1274,"IDENTIFIER_WITH_TEMPLATE":1073,"attributes":1074,"IDENTIFIER":76,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1198 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1275,"expression":446,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 1199 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE .
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":1276}

item set 1200 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1277}

item set 1201 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1278}

item set 1202 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace . 
transitions ->  {}

item set 1203 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1204 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1205 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1206 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression block
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
embedded-statement -> .method-declaration
embedded-statement -> .class-declaration
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
method-declaration -> .method-header block
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body SEMICOLON
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS CLOSE_PARENS
method-header -> .attributes modifiers type member-name-with-double-colon OPEN_PARENS formal-parameter-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
member-name-with-double-colon -> .local-variable DOUBLE_COLON TILDE local-variable
member-name-with-double-colon -> .local-variable DOUBLE_COLON local-variable
member-name-with-double-colon -> .local-variable
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attributes -> .attribute-sections
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
STARS -> .STARS STAR
STARS -> .STAR
type-name -> .namespace-or-type-name
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1279,"block":11,"empty-statement":12,"statement-expression":13,"selection-statement":14,"iteration-statement":15,"jump-statement":16,"try-statement":17,"checked-statement":18,"unchecked-statement":19,"lock-statement":20,"using-statement":21,"unsafe-statement":22,"fixed-statement":23,"method-declaration":24,"class-declaration":25,"OPEN_BRACE":46,"SEMICOLON":47,"invocation-expressions":48,"object-creation-expression":49,"assignment":50,"post-increment-expression":51,"post-decrement-expression":52,"pre-increment-expression":53,"pre-decrement-expression":54,"if-statement":55,"switch-statement":56,"while-statement":57,"do-statement":58,"for-statement":59,"foreach-statement":60,"break-statement":61,"continue-statement":62,"goto-statement":63,"return-statement":64,"throw-statement":65,"TRY":66,"CHECKED":67,"UNCHECKED":68,"LOCK":69,"USING":70,"UNSAFE":71,"modifiers":72,"FIXED":73,"method-header":74,"CLASS":75,"invocation-expression":81,"NEW":82,"unary-expression":83,"primary-expression":191,"OP_INC":84,"OP_DEC":85,"IF":86,"SWITCH":87,"WHILE":88,"DO":89,"FOR":90,"FOREACH":91,"YIELD":92,"BREAK":93,"CONTINUE":94,"GOTO":95,"RETURN":96,"THROW":97,"modifier":98,"member-name-with-double-colon":99,"type":275,"attributes":100,"AWAIT":136,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":142,"primary-no-array-creation-expression":77,"array-creation-expression":78,"ASYNC":41,"PUBLIC":143,"PARTIAL":144,"PROTECTED":145,"INTERNAL":146,"PRIVATE":147,"ABSTRACT":148,"SEALED":149,"STATIC":150,"READONLY":151,"VOLATILE":152,"VIRTUAL":153,"OVERRIDE":154,"EXTERN":155,"local-variable":156,"non-array-type":79,"array-type":80,"attribute-sections":157,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"element-access":107,"this-access":108,"base-access":109,"delegate-creation-expression":110,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":276,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"INTERR":169,"STARS":170,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"attribute-section":171,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"THIS":40,"BASE":165,"TYPEOF":166,"SIZEOF":167,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"WHERE":42,"namespace-or-type-name":168,"OPEN_BRACKET":174,"TRUE":172,"FALSE":173,"IDENTIFIER":76}

item set 1207 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1208 
argument-list-with-brace -> OPEN_BRACE argument-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 1209 
constant-declaration -> attributes modifiers CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1210 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1280}

item set 1211 
event-declaration -> attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1212 
event-declaration -> attributes modifiers EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1281,"add-accessor-declaration":1148,"remove-accessor-declaration":1149,"ADD":1150,"attributes":1151,"REMOVE":1152,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1213 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1214 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1215 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1282}

item set 1216 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":1283,"OPEN_BRACE":1061}

item set 1217 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1284}

item set 1218 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":1285,"OPEN_BRACE":1065}

item set 1219 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 1220 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":1286}

item set 1221 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1287,"formal-parameter-list":1288,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1222 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1223 
event-declaration -> attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1289}

item set 1224 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1225 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1290,"block":770,"SEMICOLON":771,"OPEN_BRACE":46}

item set 1226 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1227 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1291}

item set 1228 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1229 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1292}

item set 1230 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 1231 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1293}

item set 1232 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1294}

item set 1233 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1234 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1295,"IDENTIFIER":76}

item set 1235 
event-declaration -> modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1296}

item set 1236 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1237 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1297}

item set 1238 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1239 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1298}

item set 1240 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 1241 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1299}

item set 1242 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1300}

item set 1243 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1301,"IDENTIFIER_WITH_KEYWORD":1302,"IDENTIFIER":76,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42}

item set 1244 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1303,"IDENTIFIER_WITH_KEYWORD":1304,"IDENTIFIER":76,"TILDE":211,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42}

item set 1245 
event-declaration -> EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1246 
event-accessor-declarations -> add-accessor-declaration remove-accessor-declaration . 
transitions ->  {}

item set 1247 
remove-accessor-declaration -> attributes .REMOVE block 
transitions ->  {"REMOVE":1252}

item set 1248 
event-accessor-declarations -> remove-accessor-declaration add-accessor-declaration . 
transitions ->  {}

item set 1249 
add-accessor-declaration -> attributes .ADD block 
transitions ->  {"ADD":1251}

item set 1250 
add-accessor-declaration -> ADD block . 
transitions ->  {}

item set 1251 
add-accessor-declaration -> attributes ADD .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1305,"OPEN_BRACE":46}

item set 1252 
remove-accessor-declaration -> attributes REMOVE .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1306,"OPEN_BRACE":46}

item set 1253 
remove-accessor-declaration -> REMOVE block . 
transitions ->  {}

item set 1254 
get-accessor-declaration -> attributes modifiers GET method-body . 
transitions ->  {}

item set 1255 
set-accessor-declaration -> attributes modifiers SET method-body . 
transitions ->  {}

item set 1256 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1257 
constructor-initializer -> COLON BASE OPEN_PARENS .CLOSE_PARENS
constructor-initializer -> COLON BASE OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":1307,"argument-list":1308,"argument":363,"expression":364,"REF":365,"OUT":366,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 1258 
constructor-initializer -> COLON THIS OPEN_PARENS .CLOSE_PARENS
constructor-initializer -> COLON THIS OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":1309,"argument-list":1310,"argument":363,"expression":364,"REF":365,"OUT":366,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 1259 
struct-body -> OPEN_BRACE struct-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1260 
struct-member-declarations -> struct-member-declarations struct-member-declaration . 
transitions ->  {}

item set 1261 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1262 
interface-body -> OPEN_BRACE interface-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1263 
interface-member-declarations -> interface-member-declarations interface-member-declaration . 
transitions ->  {}

item set 1264 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1311,"OPEN_BRACE":1312}

item set 1265 
interface-indexer-declaration -> type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1313}

item set 1266 
interface-method-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1314,"THIS":1315,"IDENTIFIER":76}

item set 1267 
interface-method-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> attributes NEW .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> attributes NEW .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1316,"EVENT":1317,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1268 
interface-event-declaration -> attributes EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1318,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1269 
interface-method-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> NEW type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1319,"THIS":1320,"IDENTIFIER":76}

item set 1270 
interface-event-declaration -> NEW EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1321,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1271 
interface-event-declaration -> EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1322,"IDENTIFIER":76}

item set 1272 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1273 
enum-body -> OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE . 
transitions ->  {}

item set 1274 
enum-member-declarations -> enum-member-declarations COMMA enum-member-declaration . 
transitions ->  {}

item set 1275 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 1276 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1323,"expression":446,"conditional-expression":289,"assignment":290,"conditional-or-expression":291,"unary-expression":292,"conditional-and-expression":293,"pre-increment-expression":188,"pre-decrement-expression":189,"PLUS":137,"OP_PTR":138,"OP_COALESCING":139,"MINUS":140,"BANG":141,"TILDE":26,"STAR":190,"primary-expression":191,"inclusive-or-expression":294,"OP_INC":84,"OP_DEC":85,"primary-no-array-creation-expression":77,"array-creation-expression":78,"exclusive-or-expression":295,"literal":101,"lambda-expression":102,"cast-expression":103,"parenthesized-expression":104,"double-colon-access":105,"member-access":106,"invocation-expressions":192,"element-access":107,"this-access":108,"base-access":109,"post-increment-expression":193,"post-decrement-expression":194,"delegate-creation-expression":110,"object-creation-expression":195,"typeof-expression":111,"sizeof-expression":112,"checked-expression":113,"unchecked-expression":114,"IDENTIFIER_WITH_KEYWORD":269,"DELEGATE":115,"delegate-expression":116,"STACKALLOC":117,"and-expression":296,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"OPEN_PARENS":164,"IDENTIFIER_WITH_TEMPLATE":27,"type":196,"invocation-expression":81,"THIS":40,"BASE":165,"NEW":197,"TYPEOF":166,"SIZEOF":167,"CHECKED":198,"UNCHECKED":199,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"equality-expression":297,"TRUE":172,"FALSE":173,"IDENTIFIER":76,"non-array-type":79,"array-type":80,"AWAIT":136,"relational-expression":298,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"shift-expression":299,"namespace-or-type-name":168,"additive-expression":300,"multiplicative-expression":301}

item set 1277 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1324}

item set 1278 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1325}

item set 1279 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1280 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1281 
event-declaration -> attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1326}

item set 1282 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1283 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1327}

item set 1284 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1285 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1328}

item set 1286 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 1287 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1329}

item set 1288 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1330}

item set 1289 
event-declaration -> attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1290 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1291 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1292 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1293 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1331}

item set 1294 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1332}

item set 1295 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1333,"COMMA":1334}

item set 1296 
event-declaration -> modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1297 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1298 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1299 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1335}

item set 1300 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1336}

item set 1301 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"CLOSE_PARENS":1337}

item set 1302 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1338}

item set 1303 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"CLOSE_PARENS":1339}

item set 1304 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1340}

item set 1305 
add-accessor-declaration -> attributes ADD block . 
transitions ->  {}

item set 1306 
remove-accessor-declaration -> attributes REMOVE block . 
transitions ->  {}

item set 1307 
constructor-initializer -> COLON BASE OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1308 
constructor-initializer -> COLON BASE OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1341,"COLON":529,"COMMA":530}

item set 1309 
constructor-initializer -> COLON THIS OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1310 
constructor-initializer -> COLON THIS OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1342,"COLON":529,"COMMA":530}

item set 1311 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1343,"formal-parameter-list":1344,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1312 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1345,"attributes":1346,"SET":1347,"GET":1348,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1313 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1349,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1314 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1350,"OPEN_BRACE":1351}

item set 1315 
interface-indexer-declaration -> attributes type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1352}

item set 1316 
interface-method-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes NEW type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1353,"THIS":1354,"IDENTIFIER":76}

item set 1317 
interface-event-declaration -> attributes NEW EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1355,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1318 
interface-event-declaration -> attributes EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1356,"IDENTIFIER":76}

item set 1319 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1357,"OPEN_BRACE":1358}

item set 1320 
interface-indexer-declaration -> NEW type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1359}

item set 1321 
interface-event-declaration -> NEW EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1360,"IDENTIFIER":76}

item set 1322 
interface-event-declaration -> EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1361}

item set 1323 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 1324 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1325 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1362}

item set 1326 
event-declaration -> attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1327 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1328 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1329 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1363}

item set 1330 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1364}

item set 1331 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1332 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1365}

item set 1333 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1334 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1366,"type":485,"non-array-type":79,"array-type":80,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"PARAMS":31,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"THIS":213,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1335 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1336 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1367}

item set 1337 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1338 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS . 
transitions ->  {}

item set 1339 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1340 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS . 
transitions ->  {}

item set 1341 
constructor-initializer -> COLON BASE OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1342 
constructor-initializer -> COLON THIS OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1343 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1368}

item set 1344 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1369}

item set 1345 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1370}

item set 1346 
interface-accessors -> attributes .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> attributes .GET SEMICOLON SET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON GET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON
interface-accessors -> attributes .GET SEMICOLON 
transitions ->  {"GET":1371,"SET":1372}

item set 1347 
interface-accessors -> SET .SEMICOLON attributes GET SEMICOLON
interface-accessors -> SET .SEMICOLON GET SEMICOLON
interface-accessors -> SET .SEMICOLON 
transitions ->  {"SEMICOLON":1373}

item set 1348 
interface-accessors -> GET .SEMICOLON attributes SET SEMICOLON
interface-accessors -> GET .SEMICOLON SET SEMICOLON
interface-accessors -> GET .SEMICOLON 
transitions ->  {"SEMICOLON":1374}

item set 1349 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1375}

item set 1350 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1376,"formal-parameter-list":1377,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1351 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1378,"attributes":1346,"SET":1347,"GET":1348,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1352 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1379,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1353 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1380,"OPEN_BRACE":1381}

item set 1354 
interface-indexer-declaration -> attributes NEW type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1382}

item set 1355 
interface-event-declaration -> attributes NEW EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1383,"IDENTIFIER":76}

item set 1356 
interface-event-declaration -> attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1384}

item set 1357 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1385,"formal-parameter-list":1386,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1358 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1387,"attributes":1346,"SET":1347,"GET":1348,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1359 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1388,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1360 
interface-event-declaration -> NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1389}

item set 1361 
interface-event-declaration -> EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1362 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1363 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1364 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1390}

item set 1365 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1366 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1391,"IDENTIFIER":76}

item set 1367 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1368 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1392}

item set 1369 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1393}

item set 1370 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1371 
interface-accessors -> attributes GET .SEMICOLON attributes SET SEMICOLON
interface-accessors -> attributes GET .SEMICOLON SET SEMICOLON
interface-accessors -> attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1394}

item set 1372 
interface-accessors -> attributes SET .SEMICOLON attributes GET SEMICOLON
interface-accessors -> attributes SET .SEMICOLON GET SEMICOLON
interface-accessors -> attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1395}

item set 1373 
interface-accessors -> SET SEMICOLON .attributes GET SEMICOLON
interface-accessors -> SET SEMICOLON .GET SEMICOLON
interface-accessors -> SET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1396,"GET":1397,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1374 
interface-accessors -> GET SEMICOLON .attributes SET SEMICOLON
interface-accessors -> GET SEMICOLON .SET SEMICOLON
interface-accessors -> GET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1398,"SET":1399,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1375 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1400}

item set 1376 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1401}

item set 1377 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1402}

item set 1378 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1403}

item set 1379 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1404}

item set 1380 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1405,"formal-parameter-list":1406,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1381 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1407,"attributes":1346,"SET":1347,"GET":1348,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1382 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
fixed-parameters -> .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
non-array-type -> .AUTO
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .TILDE IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1408,"fixed-parameters":477,"parameter-array":478,"fixed-parameter":479,"PARAMS":480,"attributes":481,"type-with-interr":482,"THIS":483,"parameter-modifier":484,"attribute-sections":157,"type":485,"REF":486,"OUT":487,"attribute-section":171,"non-array-type":79,"array-type":80,"OPEN_BRACKET":174,"type-name":118,"SBYTE":119,"BYTE":120,"SHORT":121,"USHORT":122,"INT":123,"UINT":124,"LONG":125,"ULONG":126,"CHAR":127,"FLOAT":128,"DOUBLE":129,"DECIMAL":130,"BOOL":131,"OBJECT":132,"STRING":133,"VOID":134,"AUTO":135,"namespace-or-type-name":168,"IDENTIFIER_WITH_KEYWORD":223,"TILDE":211,"IDENTIFIER_WITH_TEMPLATE":212,"ADD":28,"REMOVE":29,"SET":30,"DEFAULT":32,"METHOD":33,"PARAM":34,"ASSEMBLY":35,"PROPERTY":36,"MODULE":37,"FIELD":38,"TYPE":39,"ASYNC":187,"WHERE":42,"IDENTIFIER":76}

item set 1383 
interface-event-declaration -> attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1409}

item set 1384 
interface-event-declaration -> attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1385 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1410}

item set 1386 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1411}

item set 1387 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1412}

item set 1388 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1413}

item set 1389 
interface-event-declaration -> NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1390 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1391 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1414}

item set 1392 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1393 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1415}

item set 1394 
interface-accessors -> attributes GET SEMICOLON .attributes SET SEMICOLON
interface-accessors -> attributes GET SEMICOLON .SET SEMICOLON
interface-accessors -> attributes GET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1416,"SET":1417,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1395 
interface-accessors -> attributes SET SEMICOLON .attributes GET SEMICOLON
interface-accessors -> attributes SET SEMICOLON .GET SEMICOLON
interface-accessors -> attributes SET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1418,"GET":1419,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1396 
interface-accessors -> SET SEMICOLON attributes .GET SEMICOLON 
transitions ->  {"GET":1420}

item set 1397 
interface-accessors -> SET SEMICOLON GET .SEMICOLON 
transitions ->  {"SEMICOLON":1421}

item set 1398 
interface-accessors -> GET SEMICOLON attributes .SET SEMICOLON 
transitions ->  {"SET":1422}

item set 1399 
interface-accessors -> GET SEMICOLON SET .SEMICOLON 
transitions ->  {"SEMICOLON":1423}

item set 1400 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1424,"attributes":1346,"SET":1347,"GET":1348,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1401 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1425}

item set 1402 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1426}

item set 1403 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1404 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1427}

item set 1405 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1428}

item set 1406 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1429}

item set 1407 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1430}

item set 1408 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1431}

item set 1409 
interface-event-declaration -> attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1410 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1432}

item set 1411 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1433}

item set 1412 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1413 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1434}

item set 1414 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1415 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1416 
interface-accessors -> attributes GET SEMICOLON attributes .SET SEMICOLON 
transitions ->  {"SET":1435}

item set 1417 
interface-accessors -> attributes GET SEMICOLON SET .SEMICOLON 
transitions ->  {"SEMICOLON":1436}

item set 1418 
interface-accessors -> attributes SET SEMICOLON attributes .GET SEMICOLON 
transitions ->  {"GET":1437}

item set 1419 
interface-accessors -> attributes SET SEMICOLON GET .SEMICOLON 
transitions ->  {"SEMICOLON":1438}

item set 1420 
interface-accessors -> SET SEMICOLON attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1439}

item set 1421 
interface-accessors -> SET SEMICOLON GET SEMICOLON . 
transitions ->  {}

item set 1422 
interface-accessors -> GET SEMICOLON attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1440}

item set 1423 
interface-accessors -> GET SEMICOLON SET SEMICOLON . 
transitions ->  {}

item set 1424 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1441}

item set 1425 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1426 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1442}

item set 1427 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1443,"attributes":1346,"SET":1347,"GET":1348,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1428 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1444}

item set 1429 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON 
transitions ->  {"where-base":1445}

item set 1430 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1431 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1446}

item set 1432 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1433 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1447}

item set 1434 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1448,"attributes":1346,"SET":1347,"GET":1348,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1435 
interface-accessors -> attributes GET SEMICOLON attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1449}

item set 1436 
interface-accessors -> attributes GET SEMICOLON SET SEMICOLON . 
transitions ->  {}

item set 1437 
interface-accessors -> attributes SET SEMICOLON attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1450}

item set 1438 
interface-accessors -> attributes SET SEMICOLON GET SEMICOLON . 
transitions ->  {}

item set 1439 
interface-accessors -> SET SEMICOLON attributes GET SEMICOLON . 
transitions ->  {}

item set 1440 
interface-accessors -> GET SEMICOLON attributes SET SEMICOLON . 
transitions ->  {}

item set 1441 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1442 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1443 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1451}

item set 1444 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1445 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1452}

item set 1446 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1453,"attributes":1346,"SET":1347,"GET":1348,"attribute-sections":157,"attribute-section":171,"OPEN_BRACKET":174}

item set 1447 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1448 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1454}

item set 1449 
interface-accessors -> attributes GET SEMICOLON attributes SET SEMICOLON . 
transitions ->  {}

item set 1450 
interface-accessors -> attributes SET SEMICOLON attributes GET SEMICOLON . 
transitions ->  {}

item set 1451 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1452 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1453 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1455}

item set 1454 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1455 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}
1456 states.
Building lookahead grammar.
Computing lookaheads.
Building parse table.
Conflict at state: 0, token: SEMICOLON
  reduce by rule: compilationUnit -> 
  shift token (then go to state 47)
Conflict at state: 0, token: OPEN_BRACE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 46)
Conflict at state: 0, token: CLASS
  reduce by rule: compilationUnit -> 
  shift token (then go to state 75)
Conflict at state: 0, token: OPEN_BRACKET
  reduce by rule: compilationUnit -> 
  shift token (then go to state 174)
Conflict at state: 0, token: INTERR
  reduce by rule: compilationUnit -> 
  shift token (then go to state 169)
Conflict at state: 0, token: OPEN_PARENS
  reduce by rule: compilationUnit -> 
  shift token (then go to state 164)
Conflict at state: 0, token: FIXED
  reduce by rule: compilationUnit -> 
  shift token (then go to state 73)
Conflict at state: 0, token: EXTERN
  reduce by rule: compilationUnit -> 
  shift token (then go to state 155)
Conflict at state: 0, token: OVERRIDE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 154)
Conflict at state: 0, token: VIRTUAL
  reduce by rule: compilationUnit -> 
  shift token (then go to state 153)
Conflict at state: 0, token: VOLATILE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 152)
Conflict at state: 0, token: READONLY
  reduce by rule: compilationUnit -> 
  shift token (then go to state 151)
Conflict at state: 0, token: STATIC
  reduce by rule: compilationUnit -> 
  shift token (then go to state 150)
Conflict at state: 0, token: SEALED
  reduce by rule: compilationUnit -> 
  shift token (then go to state 149)
Conflict at state: 0, token: ABSTRACT
  reduce by rule: compilationUnit -> 
  shift token (then go to state 148)
Conflict at state: 0, token: PRIVATE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 147)
Conflict at state: 0, token: INTERNAL
  reduce by rule: compilationUnit -> 
  shift token (then go to state 146)
Conflict at state: 0, token: PROTECTED
  reduce by rule: compilationUnit -> 
  shift token (then go to state 145)
Conflict at state: 0, token: PARTIAL
  reduce by rule: compilationUnit -> 
  shift token (then go to state 144)
Conflict at state: 0, token: PUBLIC
  reduce by rule: compilationUnit -> 
  shift token (then go to state 143)
Conflict at state: 0, token: UNSAFE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 71)
Conflict at state: 0, token: USING
  reduce by rule: compilationUnit -> 
  shift token (then go to state 70)
Conflict at state: 0, token: LOCK
  reduce by rule: compilationUnit -> 
  shift token (then go to state 69)
Conflict at state: 0, token: TRY
  reduce by rule: compilationUnit -> 
  shift token (then go to state 66)
Conflict at state: 0, token: THROW
  reduce by rule: compilationUnit -> 
  shift token (then go to state 97)
Conflict at state: 0, token: RETURN
  reduce by rule: compilationUnit -> 
  shift token (then go to state 96)
Conflict at state: 0, token: GOTO
  reduce by rule: compilationUnit -> 
  shift token (then go to state 95)
Conflict at state: 0, token: CONTINUE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 94)
Conflict at state: 0, token: BREAK
  reduce by rule: compilationUnit -> 
  shift token (then go to state 93)
Conflict at state: 0, token: YIELD
  reduce by rule: compilationUnit -> 
  shift token (then go to state 92)
Conflict at state: 0, token: FOREACH
  reduce by rule: compilationUnit -> 
  shift token (then go to state 91)
Conflict at state: 0, token: FOR
  reduce by rule: compilationUnit -> 
  shift token (then go to state 90)
Conflict at state: 0, token: DO
  reduce by rule: compilationUnit -> 
  shift token (then go to state 89)
Conflict at state: 0, token: WHILE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 88)
Conflict at state: 0, token: SWITCH
  reduce by rule: compilationUnit -> 
  shift token (then go to state 87)
Conflict at state: 0, token: IF
  reduce by rule: compilationUnit -> 
  shift token (then go to state 86)
Conflict at state: 0, token: STAR
  reduce by rule: compilationUnit -> 
  shift token (then go to state 142)
Conflict at state: 0, token: BANG
  reduce by rule: compilationUnit -> 
  shift token (then go to state 141)
Conflict at state: 0, token: MINUS
  reduce by rule: compilationUnit -> 
  shift token (then go to state 140)
Conflict at state: 0, token: OP_COALESCING
  reduce by rule: compilationUnit -> 
  shift token (then go to state 139)
Conflict at state: 0, token: OP_PTR
  reduce by rule: compilationUnit -> 
  shift token (then go to state 138)
Conflict at state: 0, token: PLUS
  reduce by rule: compilationUnit -> 
  shift token (then go to state 137)
Conflict at state: 0, token: OP_DEC
  reduce by rule: compilationUnit -> 
  shift token (then go to state 85)
Conflict at state: 0, token: OP_INC
  reduce by rule: compilationUnit -> 
  shift token (then go to state 84)
Conflict at state: 0, token: CONST
  reduce by rule: compilationUnit -> 
  shift token (then go to state 45)
Conflict at state: 0, token: UNCHECKED
  reduce by rule: compilationUnit -> 
  shift token (then go to state 68)
Conflict at state: 0, token: CHECKED
  reduce by rule: compilationUnit -> 
  shift token (then go to state 67)
Conflict at state: 0, token: SIZEOF
  reduce by rule: compilationUnit -> 
  shift token (then go to state 167)
Conflict at state: 0, token: TYPEOF
  reduce by rule: compilationUnit -> 
  shift token (then go to state 166)
Conflict at state: 0, token: NEW
  reduce by rule: compilationUnit -> 
  shift token (then go to state 82)
Conflict at state: 0, token: BASE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 165)
Conflict at state: 0, token: AUTO
  reduce by rule: compilationUnit -> 
  shift token (then go to state 135)
Conflict at state: 0, token: VOID
  reduce by rule: compilationUnit -> 
  shift token (then go to state 134)
Conflict at state: 0, token: STRING
  reduce by rule: compilationUnit -> 
  shift token (then go to state 133)
Conflict at state: 0, token: OBJECT
  reduce by rule: compilationUnit -> 
  shift token (then go to state 132)
Conflict at state: 0, token: BOOL
  reduce by rule: compilationUnit -> 
  shift token (then go to state 131)
Conflict at state: 0, token: DECIMAL
  reduce by rule: compilationUnit -> 
  shift token (then go to state 130)
Conflict at state: 0, token: DOUBLE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 129)
Conflict at state: 0, token: FLOAT
  reduce by rule: compilationUnit -> 
  shift token (then go to state 128)
Conflict at state: 0, token: CHAR
  reduce by rule: compilationUnit -> 
  shift token (then go to state 127)
Conflict at state: 0, token: ULONG
  reduce by rule: compilationUnit -> 
  shift token (then go to state 126)
Conflict at state: 0, token: LONG
  reduce by rule: compilationUnit -> 
  shift token (then go to state 125)
Conflict at state: 0, token: UINT
  reduce by rule: compilationUnit -> 
  shift token (then go to state 124)
Conflict at state: 0, token: INT
  reduce by rule: compilationUnit -> 
  shift token (then go to state 123)
Conflict at state: 0, token: USHORT
  reduce by rule: compilationUnit -> 
  shift token (then go to state 122)
Conflict at state: 0, token: SHORT
  reduce by rule: compilationUnit -> 
  shift token (then go to state 121)
Conflict at state: 0, token: BYTE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 120)
Conflict at state: 0, token: SBYTE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 119)
Conflict at state: 0, token: STACKALLOC
  reduce by rule: compilationUnit -> 
  shift token (then go to state 117)
Conflict at state: 0, token: DELEGATE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 115)
Conflict at state: 0, token: AWAIT
  reduce by rule: compilationUnit -> 
  shift token (then go to state 136)
Conflict at state: 0, token: NULL
  reduce by rule: compilationUnit -> 
  shift token (then go to state 163)
Conflict at state: 0, token: CHARACTER_LITERAL
  reduce by rule: compilationUnit -> 
  shift token (then go to state 162)
Conflict at state: 0, token: STRING_LITERAL
  reduce by rule: compilationUnit -> 
  shift token (then go to state 161)
Conflict at state: 0, token: INTEGER_LITERAL
  reduce by rule: compilationUnit -> 
  shift token (then go to state 160)
Conflict at state: 0, token: REAL_LITERAL
  reduce by rule: compilationUnit -> 
  shift token (then go to state 159)
Conflict at state: 0, token: FALSE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 173)
Conflict at state: 0, token: TRUE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 172)
Conflict at state: 0, token: IDENTIFIER
  reduce by rule: compilationUnit -> 
  shift token (then go to state 76)
Conflict at state: 0, token: WHERE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 42)
Conflict at state: 0, token: ASYNC
  reduce by rule: compilationUnit -> 
  shift token (then go to state 41)
Conflict at state: 0, token: THIS
  reduce by rule: compilationUnit -> 
  shift token (then go to state 40)
Conflict at state: 0, token: TYPE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 39)
Conflict at state: 0, token: FIELD
  reduce by rule: compilationUnit -> 
  shift token (then go to state 38)
Conflict at state: 0, token: MODULE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 37)
Conflict at state: 0, token: PROPERTY
  reduce by rule: compilationUnit -> 
  shift token (then go to state 36)
Conflict at state: 0, token: ASSEMBLY
  reduce by rule: compilationUnit -> 
  shift token (then go to state 35)
Conflict at state: 0, token: PARAM
  reduce by rule: compilationUnit -> 
  shift token (then go to state 34)
Conflict at state: 0, token: METHOD
  reduce by rule: compilationUnit -> 
  shift token (then go to state 33)
Conflict at state: 0, token: DEFAULT
  reduce by rule: compilationUnit -> 
  shift token (then go to state 32)
Conflict at state: 0, token: PARAMS
  reduce by rule: compilationUnit -> 
  shift token (then go to state 31)
Conflict at state: 0, token: SET
  reduce by rule: compilationUnit -> 
  shift token (then go to state 30)
Conflict at state: 0, token: REMOVE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 29)
Conflict at state: 0, token: ADD
  reduce by rule: compilationUnit -> 
  shift token (then go to state 28)
Conflict at state: 0, token: TILDE
  reduce by rule: compilationUnit -> 
  shift token (then go to state 26)
Conflict at state: 0, token: $end
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 0, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 0, token: DOT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: CLASS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 0, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 0, token: INTERR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 0, token: DOUBLE_COLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 0, token: FIXED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 0, token: EXTERN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 0, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 0, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 0, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 0, token: READONLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 0, token: STATIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 0, token: SEALED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 0, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 0, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 0, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 0, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 0, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 0, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 0, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 0, token: USING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 0, token: LOCK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 0, token: TRY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 0, token: THROW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 0, token: RETURN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 0, token: GOTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 0, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 0, token: BREAK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 0, token: YIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 92)
Conflict at state: 0, token: FOREACH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 91)
Conflict at state: 0, token: FOR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 90)
Conflict at state: 0, token: DO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 0, token: WHILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 0, token: SWITCH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 0, token: IF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 0, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 0, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 0, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 0, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 0, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 0, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 0, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 0, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 0, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_XOR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_OR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_AND_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_MOD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_DIV_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_MULT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_SUB_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_ADD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: ASSIGN
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 0, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 0, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 0, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 0, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 0, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 0, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 0, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 0, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 0, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 0, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 0, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 0, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 0, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 0, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 0, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 0, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 0, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 0, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 0, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 0, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 0, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 0, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 0, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 0, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 0, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 0, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 0, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 0, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 0, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 0, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 0, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 0, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 0, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 0, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 0, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 0, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 0, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 0, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 0, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 0, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 0, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 0, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 0, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 0, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 0, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 0, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 0, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 0, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 0, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 0, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 0, token: COMMA
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: EOF
  reduce by rule: invocation-expressions -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: $end
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 0, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 0, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: CLASS
  reduce by rule: local-variable -> 
  shift token (then go to state 75)
Conflict at state: 0, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 0, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 169)
Conflict at state: 0, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 0, token: FIXED
  reduce by rule: local-variable -> 
  shift token (then go to state 73)
Conflict at state: 0, token: EXTERN
  reduce by rule: local-variable -> 
  shift token (then go to state 155)
Conflict at state: 0, token: OVERRIDE
  reduce by rule: local-variable -> 
  shift token (then go to state 154)
Conflict at state: 0, token: VIRTUAL
  reduce by rule: local-variable -> 
  shift token (then go to state 153)
Conflict at state: 0, token: VOLATILE
  reduce by rule: local-variable -> 
  shift token (then go to state 152)
Conflict at state: 0, token: READONLY
  reduce by rule: local-variable -> 
  shift token (then go to state 151)
Conflict at state: 0, token: STATIC
  reduce by rule: local-variable -> 
  shift token (then go to state 150)
Conflict at state: 0, token: SEALED
  reduce by rule: local-variable -> 
  shift token (then go to state 149)
Conflict at state: 0, token: ABSTRACT
  reduce by rule: local-variable -> 
  shift token (then go to state 148)
Conflict at state: 0, token: PRIVATE
  reduce by rule: local-variable -> 
  shift token (then go to state 147)
Conflict at state: 0, token: INTERNAL
  reduce by rule: local-variable -> 
  shift token (then go to state 146)
Conflict at state: 0, token: PROTECTED
  reduce by rule: local-variable -> 
  shift token (then go to state 145)
Conflict at state: 0, token: PARTIAL
  reduce by rule: local-variable -> 
  shift token (then go to state 144)
Conflict at state: 0, token: PUBLIC
  reduce by rule: local-variable -> 
  shift token (then go to state 143)
Conflict at state: 0, token: UNSAFE
  reduce by rule: local-variable -> 
  shift token (then go to state 71)
Conflict at state: 0, token: USING
  reduce by rule: local-variable -> 
  shift token (then go to state 70)
Conflict at state: 0, token: LOCK
  reduce by rule: local-variable -> 
  shift token (then go to state 69)
Conflict at state: 0, token: TRY
  reduce by rule: local-variable -> 
  shift token (then go to state 66)
Conflict at state: 0, token: THROW
  reduce by rule: local-variable -> 
  shift token (then go to state 97)
Conflict at state: 0, token: RETURN
  reduce by rule: local-variable -> 
  shift token (then go to state 96)
Conflict at state: 0, token: GOTO
  reduce by rule: local-variable -> 
  shift token (then go to state 95)
Conflict at state: 0, token: CONTINUE
  reduce by rule: local-variable -> 
  shift token (then go to state 94)
Conflict at state: 0, token: BREAK
  reduce by rule: local-variable -> 
  shift token (then go to state 93)
Conflict at state: 0, token: YIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 92)
Conflict at state: 0, token: FOREACH
  reduce by rule: local-variable -> 
  shift token (then go to state 91)
Conflict at state: 0, token: FOR
  reduce by rule: local-variable -> 
  shift token (then go to state 90)
Conflict at state: 0, token: DO
  reduce by rule: local-variable -> 
  shift token (then go to state 89)
Conflict at state: 0, token: WHILE
  reduce by rule: local-variable -> 
  shift token (then go to state 88)
Conflict at state: 0, token: SWITCH
  reduce by rule: local-variable -> 
  shift token (then go to state 87)
Conflict at state: 0, token: IF
  reduce by rule: local-variable -> 
  shift token (then go to state 86)
Conflict at state: 0, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 142)
Conflict at state: 0, token: BANG
  reduce by rule: local-variable -> 
  shift token (then go to state 141)
Conflict at state: 0, token: MINUS
  reduce by rule: local-variable -> 
  shift token (then go to state 140)
Conflict at state: 0, token: OP_COALESCING
  reduce by rule: local-variable -> 
  shift token (then go to state 139)
Conflict at state: 0, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 0, token: PLUS
  reduce by rule: local-variable -> 
  shift token (then go to state 137)
Conflict at state: 0, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 0, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 0, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: CONST
  reduce by rule: local-variable -> 
  shift token (then go to state 45)
Conflict at state: 0, token: UNCHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 68)
Conflict at state: 0, token: CHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 67)
Conflict at state: 0, token: SIZEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 167)
Conflict at state: 0, token: TYPEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 166)
Conflict at state: 0, token: NEW
  reduce by rule: local-variable -> 
  shift token (then go to state 82)
Conflict at state: 0, token: BASE
  reduce by rule: local-variable -> 
  shift token (then go to state 165)
Conflict at state: 0, token: AUTO
  reduce by rule: local-variable -> 
  shift token (then go to state 135)
Conflict at state: 0, token: VOID
  reduce by rule: local-variable -> 
  shift token (then go to state 134)
Conflict at state: 0, token: STRING
  reduce by rule: local-variable -> 
  shift token (then go to state 133)
Conflict at state: 0, token: OBJECT
  reduce by rule: local-variable -> 
  shift token (then go to state 132)
Conflict at state: 0, token: BOOL
  reduce by rule: local-variable -> 
  shift token (then go to state 131)
Conflict at state: 0, token: DECIMAL
  reduce by rule: local-variable -> 
  shift token (then go to state 130)
Conflict at state: 0, token: DOUBLE
  reduce by rule: local-variable -> 
  shift token (then go to state 129)
Conflict at state: 0, token: FLOAT
  reduce by rule: local-variable -> 
  shift token (then go to state 128)
Conflict at state: 0, token: CHAR
  reduce by rule: local-variable -> 
  shift token (then go to state 127)
Conflict at state: 0, token: ULONG
  reduce by rule: local-variable -> 
  shift token (then go to state 126)
Conflict at state: 0, token: LONG
  reduce by rule: local-variable -> 
  shift token (then go to state 125)
Conflict at state: 0, token: UINT
  reduce by rule: local-variable -> 
  shift token (then go to state 124)
Conflict at state: 0, token: INT
  reduce by rule: local-variable -> 
  shift token (then go to state 123)
Conflict at state: 0, token: USHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 122)
Conflict at state: 0, token: SHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 121)
Conflict at state: 0, token: BYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 120)
Conflict at state: 0, token: SBYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 119)
Conflict at state: 0, token: STACKALLOC
  reduce by rule: local-variable -> 
  shift token (then go to state 117)
Conflict at state: 0, token: DELEGATE
  reduce by rule: local-variable -> 
  shift token (then go to state 115)
Conflict at state: 0, token: AWAIT
  reduce by rule: local-variable -> 
  shift token (then go to state 136)
Conflict at state: 0, token: NULL
  reduce by rule: local-variable -> 
  shift token (then go to state 163)
Conflict at state: 0, token: CHARACTER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 162)
Conflict at state: 0, token: STRING_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 161)
Conflict at state: 0, token: INTEGER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 160)
Conflict at state: 0, token: REAL_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 159)
Conflict at state: 0, token: FALSE
  reduce by rule: local-variable -> 
  shift token (then go to state 173)
Conflict at state: 0, token: TRUE
  reduce by rule: local-variable -> 
  shift token (then go to state 172)
Conflict at state: 0, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 76)
Conflict at state: 0, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 42)
Conflict at state: 0, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 41)
Conflict at state: 0, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 40)
Conflict at state: 0, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 39)
Conflict at state: 0, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 38)
Conflict at state: 0, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 37)
Conflict at state: 0, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 36)
Conflict at state: 0, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 35)
Conflict at state: 0, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 34)
Conflict at state: 0, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 33)
Conflict at state: 0, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 32)
Conflict at state: 0, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 31)
Conflict at state: 0, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 30)
Conflict at state: 0, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 29)
Conflict at state: 0, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 28)
Conflict at state: 0, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 26)
Conflict at state: 0, token: COMMA
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 0, token: EOF
  reduce by rule: local-variable -> 
  reduce by rule: compilationUnit -> 
Conflict at state: 2, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 2, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 2, token: CLASS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 2, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 2, token: INTERR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 2, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 2, token: FIXED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 2, token: EXTERN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 2, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 2, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 2, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 2, token: READONLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 2, token: STATIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 2, token: SEALED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 2, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 2, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 2, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 2, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 2, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 2, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 2, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 2, token: USING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 2, token: LOCK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 2, token: TRY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 2, token: THROW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 2, token: RETURN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 2, token: GOTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 2, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 2, token: BREAK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 2, token: YIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 92)
Conflict at state: 2, token: FOREACH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 91)
Conflict at state: 2, token: FOR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 90)
Conflict at state: 2, token: DO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 2, token: WHILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 2, token: SWITCH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 2, token: IF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 2, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 2, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 2, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 2, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 2, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 2, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 2, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 2, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 2, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 2, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 2, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 2, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 2, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 2, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 2, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 2, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 2, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 2, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 2, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 2, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 2, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 2, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 2, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 2, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 2, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 2, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 2, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 2, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 2, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 2, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 2, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 2, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 2, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 2, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 2, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 2, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 2, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 2, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 2, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 2, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 2, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 2, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 2, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 2, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 2, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 2, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 2, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 2, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 2, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 2, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 2, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 2, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 2, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 2, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 2, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 2, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 2, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 2, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 2, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 2, token: EOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 175)
Conflict at state: 2, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 2, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 2, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: CLASS
  reduce by rule: local-variable -> 
  shift token (then go to state 75)
Conflict at state: 2, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 2, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 169)
Conflict at state: 2, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 2, token: FIXED
  reduce by rule: local-variable -> 
  shift token (then go to state 73)
Conflict at state: 2, token: EXTERN
  reduce by rule: local-variable -> 
  shift token (then go to state 155)
Conflict at state: 2, token: OVERRIDE
  reduce by rule: local-variable -> 
  shift token (then go to state 154)
Conflict at state: 2, token: VIRTUAL
  reduce by rule: local-variable -> 
  shift token (then go to state 153)
Conflict at state: 2, token: VOLATILE
  reduce by rule: local-variable -> 
  shift token (then go to state 152)
Conflict at state: 2, token: READONLY
  reduce by rule: local-variable -> 
  shift token (then go to state 151)
Conflict at state: 2, token: STATIC
  reduce by rule: local-variable -> 
  shift token (then go to state 150)
Conflict at state: 2, token: SEALED
  reduce by rule: local-variable -> 
  shift token (then go to state 149)
Conflict at state: 2, token: ABSTRACT
  reduce by rule: local-variable -> 
  shift token (then go to state 148)
Conflict at state: 2, token: PRIVATE
  reduce by rule: local-variable -> 
  shift token (then go to state 147)
Conflict at state: 2, token: INTERNAL
  reduce by rule: local-variable -> 
  shift token (then go to state 146)
Conflict at state: 2, token: PROTECTED
  reduce by rule: local-variable -> 
  shift token (then go to state 145)
Conflict at state: 2, token: PARTIAL
  reduce by rule: local-variable -> 
  shift token (then go to state 144)
Conflict at state: 2, token: PUBLIC
  reduce by rule: local-variable -> 
  shift token (then go to state 143)
Conflict at state: 2, token: UNSAFE
  reduce by rule: local-variable -> 
  shift token (then go to state 71)
Conflict at state: 2, token: USING
  reduce by rule: local-variable -> 
  shift token (then go to state 70)
Conflict at state: 2, token: LOCK
  reduce by rule: local-variable -> 
  shift token (then go to state 69)
Conflict at state: 2, token: TRY
  reduce by rule: local-variable -> 
  shift token (then go to state 66)
Conflict at state: 2, token: THROW
  reduce by rule: local-variable -> 
  shift token (then go to state 97)
Conflict at state: 2, token: RETURN
  reduce by rule: local-variable -> 
  shift token (then go to state 96)
Conflict at state: 2, token: GOTO
  reduce by rule: local-variable -> 
  shift token (then go to state 95)
Conflict at state: 2, token: CONTINUE
  reduce by rule: local-variable -> 
  shift token (then go to state 94)
Conflict at state: 2, token: BREAK
  reduce by rule: local-variable -> 
  shift token (then go to state 93)
Conflict at state: 2, token: YIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 92)
Conflict at state: 2, token: FOREACH
  reduce by rule: local-variable -> 
  shift token (then go to state 91)
Conflict at state: 2, token: FOR
  reduce by rule: local-variable -> 
  shift token (then go to state 90)
Conflict at state: 2, token: DO
  reduce by rule: local-variable -> 
  shift token (then go to state 89)
Conflict at state: 2, token: WHILE
  reduce by rule: local-variable -> 
  shift token (then go to state 88)
Conflict at state: 2, token: SWITCH
  reduce by rule: local-variable -> 
  shift token (then go to state 87)
Conflict at state: 2, token: IF
  reduce by rule: local-variable -> 
  shift token (then go to state 86)
Conflict at state: 2, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 142)
Conflict at state: 2, token: BANG
  reduce by rule: local-variable -> 
  shift token (then go to state 141)
Conflict at state: 2, token: MINUS
  reduce by rule: local-variable -> 
  shift token (then go to state 140)
Conflict at state: 2, token: OP_COALESCING
  reduce by rule: local-variable -> 
  shift token (then go to state 139)
Conflict at state: 2, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 2, token: PLUS
  reduce by rule: local-variable -> 
  shift token (then go to state 137)
Conflict at state: 2, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 2, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 2, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: CONST
  reduce by rule: local-variable -> 
  shift token (then go to state 45)
Conflict at state: 2, token: UNCHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 68)
Conflict at state: 2, token: CHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 67)
Conflict at state: 2, token: SIZEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 167)
Conflict at state: 2, token: TYPEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 166)
Conflict at state: 2, token: NEW
  reduce by rule: local-variable -> 
  shift token (then go to state 82)
Conflict at state: 2, token: BASE
  reduce by rule: local-variable -> 
  shift token (then go to state 165)
Conflict at state: 2, token: AUTO
  reduce by rule: local-variable -> 
  shift token (then go to state 135)
Conflict at state: 2, token: VOID
  reduce by rule: local-variable -> 
  shift token (then go to state 134)
Conflict at state: 2, token: STRING
  reduce by rule: local-variable -> 
  shift token (then go to state 133)
Conflict at state: 2, token: OBJECT
  reduce by rule: local-variable -> 
  shift token (then go to state 132)
Conflict at state: 2, token: BOOL
  reduce by rule: local-variable -> 
  shift token (then go to state 131)
Conflict at state: 2, token: DECIMAL
  reduce by rule: local-variable -> 
  shift token (then go to state 130)
Conflict at state: 2, token: DOUBLE
  reduce by rule: local-variable -> 
  shift token (then go to state 129)
Conflict at state: 2, token: FLOAT
  reduce by rule: local-variable -> 
  shift token (then go to state 128)
Conflict at state: 2, token: CHAR
  reduce by rule: local-variable -> 
  shift token (then go to state 127)
Conflict at state: 2, token: ULONG
  reduce by rule: local-variable -> 
  shift token (then go to state 126)
Conflict at state: 2, token: LONG
  reduce by rule: local-variable -> 
  shift token (then go to state 125)
Conflict at state: 2, token: UINT
  reduce by rule: local-variable -> 
  shift token (then go to state 124)
Conflict at state: 2, token: INT
  reduce by rule: local-variable -> 
  shift token (then go to state 123)
Conflict at state: 2, token: USHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 122)
Conflict at state: 2, token: SHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 121)
Conflict at state: 2, token: BYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 120)
Conflict at state: 2, token: SBYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 119)
Conflict at state: 2, token: STACKALLOC
  reduce by rule: local-variable -> 
  shift token (then go to state 117)
Conflict at state: 2, token: DELEGATE
  reduce by rule: local-variable -> 
  shift token (then go to state 115)
Conflict at state: 2, token: AWAIT
  reduce by rule: local-variable -> 
  shift token (then go to state 136)
Conflict at state: 2, token: NULL
  reduce by rule: local-variable -> 
  shift token (then go to state 163)
Conflict at state: 2, token: CHARACTER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 162)
Conflict at state: 2, token: STRING_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 161)
Conflict at state: 2, token: INTEGER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 160)
Conflict at state: 2, token: REAL_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 159)
Conflict at state: 2, token: FALSE
  reduce by rule: local-variable -> 
  shift token (then go to state 173)
Conflict at state: 2, token: TRUE
  reduce by rule: local-variable -> 
  shift token (then go to state 172)
Conflict at state: 2, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 76)
Conflict at state: 2, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 42)
Conflict at state: 2, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 41)
Conflict at state: 2, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 40)
Conflict at state: 2, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 39)
Conflict at state: 2, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 38)
Conflict at state: 2, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 37)
Conflict at state: 2, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 36)
Conflict at state: 2, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 35)
Conflict at state: 2, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 34)
Conflict at state: 2, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 33)
Conflict at state: 2, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 32)
Conflict at state: 2, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 31)
Conflict at state: 2, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 30)
Conflict at state: 2, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 29)
Conflict at state: 2, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 28)
Conflict at state: 2, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 26)
Conflict at state: 2, token: COMMA
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 2, token: EOF
  reduce by rule: local-variable -> 
  shift token (then go to state 175)
Conflict at state: 8, token: IDENTIFIER
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: WHERE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: ASYNC
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: THIS
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: TYPE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: FIELD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: MODULE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PROPERTY
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: ASSEMBLY
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PARAM
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: METHOD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DEFAULT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PARAMS
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SET
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: REMOVE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: ADD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: TILDE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: STAR
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: INTERR
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: ASSIGN
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: COMMA
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SEMICOLON
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OPEN_BRACE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: EOF
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: TRUE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: FALSE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: REAL_LITERAL
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: INTEGER_LITERAL
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: STRING_LITERAL
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CHARACTER_LITERAL
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: NULL
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OPEN_PARENS
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DOT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: AWAIT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DELEGATE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: STACKALLOC
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SBYTE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: BYTE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SHORT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: USHORT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: INT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: UINT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: LONG
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: ULONG
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CHAR
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: FLOAT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DOUBLE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DECIMAL
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: BOOL
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OBJECT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: STRING
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: VOID
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: AUTO
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_PTR
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OPEN_BRACKET
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: BASE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_INC
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_DEC
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: NEW
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: TYPEOF
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SIZEOF
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CHECKED
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: UNCHECKED
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CONST
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PLUS
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_COALESCING
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: MINUS
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: BANG
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: IF
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SWITCH
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: WHILE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DO
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: FOR
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: FOREACH
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: YIELD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: BREAK
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CONTINUE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: GOTO
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: RETURN
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: THROW
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: TRY
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: LOCK
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: USING
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: UNSAFE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PUBLIC
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PARTIAL
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PROTECTED
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: INTERNAL
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PRIVATE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: ABSTRACT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SEALED
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: STATIC
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: READONLY
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: VOLATILE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: VIRTUAL
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OVERRIDE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: EXTERN
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: FIXED
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DOUBLE_COLON
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CLASS
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CLOSE_BRACE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CASE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: TILDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OPEN_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: EOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: TRUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: FALSE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: REAL_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: INTEGER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: STRING_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CHARACTER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: NULL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: AWAIT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DELEGATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: STACKALLOC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SBYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: BYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: USHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: INT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: UINT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: LONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: ULONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CHAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: FLOAT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DOUBLE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DECIMAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: BOOL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OBJECT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: STRING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: VOID
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: AUTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: BASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: NEW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: TYPEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SIZEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: UNCHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CONST
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: BANG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: IF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SWITCH
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: WHILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: FOR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: FOREACH
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: YIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: BREAK
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CONTINUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: GOTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: RETURN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: THROW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: TRY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: LOCK
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: USING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: UNSAFE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PUBLIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PARTIAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PROTECTED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: INTERNAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: PRIVATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: ABSTRACT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: SEALED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: STATIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: READONLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: VOLATILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: VIRTUAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: OVERRIDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: EXTERN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: FIXED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CLASS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CLOSE_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 8, token: CASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 9, token: SEMICOLON
  reduce by rule: declaration-statement -> local-variable-declaration
  shift token (then go to state 179)
Conflict at state: 9, token: OPEN_BRACE
  reduce by rule: declaration-statement -> local-variable-declaration
  shift token (then go to state 46)
Conflict at state: 10, token: SEMICOLON
  reduce by rule: declaration-statement -> local-constant-declaration
  shift token (then go to state 181)
Conflict at state: 10, token: OPEN_BRACE
  reduce by rule: declaration-statement -> local-constant-declaration
  shift token (then go to state 46)
Conflict at state: 26, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 26, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 26, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 26, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 26, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 26, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 26, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 26, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 26, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 26, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 26, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 26, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 26, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 26, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 26, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 26, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 26, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 26, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 26, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 26, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 26, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 26, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 26, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 26, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 26, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 26, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 26, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 26, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 26, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 26, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 26, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 26, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 26, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 26, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 26, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 26, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 26, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 26, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 26, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 26, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 26, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 26, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 26, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 26, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 26, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 26, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 26, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 26, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 26, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 26, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 26, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 26, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 26, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 26, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 26, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 26, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 26, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 26, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 26, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 27, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 200)
Conflict at state: 40, token: COLON
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_DBLPTR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: CLASS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OPEN_BRACKET
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: INTERR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: DOUBLE_COLON
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OPEN_PARENS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: FIXED
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: EXTERN
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OVERRIDE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: VIRTUAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: VOLATILE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: READONLY
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: STATIC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: SEALED
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: ABSTRACT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: PRIVATE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: INTERNAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: PROTECTED
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: PARTIAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: PUBLIC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: UNSAFE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: USING
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: LOCK
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: TRY
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: THROW
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: RETURN
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: GOTO
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: CONTINUE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: BREAK
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: YIELD
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: FOREACH
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: FOR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: DO
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: WHILE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: SWITCH
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: IF
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: SEMICOLON
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: STAR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: BANG
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: MINUS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_COALESCING
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_PTR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: PLUS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_DEC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_INC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_XOR_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_OR_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_AND_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_MOD_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_DIV_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_MULT_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_SUB_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_ADD_ASSIGNMENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: ASSIGN
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OPEN_BRACE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: CONST
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: UNCHECKED
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: CHECKED
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: SIZEOF
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: TYPEOF
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: NEW
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: BASE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: AUTO
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: VOID
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: STRING
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OBJECT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: BOOL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: DECIMAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: DOUBLE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: FLOAT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: CHAR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: ULONG
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: LONG
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: UINT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: INT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: USHORT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: SHORT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: BYTE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: SBYTE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: STACKALLOC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: DELEGATE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: DOT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: AWAIT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: NULL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: CHARACTER_LITERAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: STRING_LITERAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: INTEGER_LITERAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: REAL_LITERAL
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: FALSE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: TRUE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: IDENTIFIER
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: WHERE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: ASYNC
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: THIS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: TYPE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: FIELD
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: MODULE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: PROPERTY
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: ASSEMBLY
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: PARAM
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: METHOD
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: DEFAULT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: PARAMS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: SET
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: REMOVE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: ADD
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: TILDE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: COMMA
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: EOF
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: CLOSE_PARENS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_OR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_AND
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: BITWISE_OR
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: CARET
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: AMP
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_NE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_EQ
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: AS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: IS
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_GE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_LE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: GT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: LT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: RIGHT_SHIFT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: OP_LEFT_SHIFT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: PERCENT
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: DIV
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: CLOSE_BRACKET
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: CLOSE_BRACE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 40, token: CASE
  reduce by rule: this-access -> THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
Conflict at state: 41, token: COLON
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_DBLPTR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: CLASS
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OPEN_BRACKET
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: INTERR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: DOUBLE_COLON
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OPEN_PARENS
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: FIXED
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: EXTERN
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OVERRIDE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: VIRTUAL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: VOLATILE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: READONLY
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: STATIC
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: SEALED
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: ABSTRACT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: PRIVATE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: INTERNAL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: PROTECTED
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: PARTIAL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: PUBLIC
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: UNSAFE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: USING
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: LOCK
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: TRY
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: THROW
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: RETURN
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: GOTO
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: CONTINUE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: BREAK
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: YIELD
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: FOREACH
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: FOR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: DO
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: WHILE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: SWITCH
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: IF
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: SEMICOLON
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: STAR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: BANG
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: MINUS
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_COALESCING
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_PTR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: PLUS
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_DEC
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_INC
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_XOR_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_OR_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_AND_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_MOD_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_DIV_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_MULT_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_SUB_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OP_ADD_ASSIGNMENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: ASSIGN
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OPEN_BRACE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: CONST
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: UNCHECKED
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: CHECKED
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: SIZEOF
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: TYPEOF
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: NEW
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: BASE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: AUTO
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: VOID
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: STRING
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OBJECT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: BOOL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: DECIMAL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: DOUBLE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: FLOAT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: CHAR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: ULONG
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: LONG
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: UINT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: INT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: USHORT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: SHORT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: BYTE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: SBYTE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: STACKALLOC
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: DELEGATE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: DOT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: AWAIT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: NULL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: CHARACTER_LITERAL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: STRING_LITERAL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: INTEGER_LITERAL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: REAL_LITERAL
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: FALSE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: TRUE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: IDENTIFIER
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: WHERE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: ASYNC
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: THIS
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: TYPE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: FIELD
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: MODULE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: PROPERTY
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: ASSEMBLY
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: PARAM
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: METHOD
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: DEFAULT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: PARAMS
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: SET
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: REMOVE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: ADD
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: TILDE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: COMMA
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: EOF
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: CLOSE_BRACE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: CASE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: EXPLICIT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: IMPLICIT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: EVENT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: ENUM
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: INTERFACE
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: STRUCT
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 41, token: OPERATOR
  reduce by rule: modifier -> ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
Conflict at state: 43, token: INTERR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 169)
Conflict at state: 43, token: OP_PTR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 206)
Conflict at state: 43, token: STAR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 210)
Conflict at state: 43, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 169)
Conflict at state: 43, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 204)
Conflict at state: 43, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 210)
Conflict at state: 43, token: MINUS
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: OP_COALESCING
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 206)
Conflict at state: 43, token: PLUS
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 203)
Conflict at state: 43, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 202)
Conflict at state: 43, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 43, token: DOT
  reduce by rule: local-variable -> 
  shift token (then go to state 205)
Conflict at state: 43, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 76)
Conflict at state: 43, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 42)
Conflict at state: 43, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 187)
Conflict at state: 43, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 213)
Conflict at state: 43, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 39)
Conflict at state: 43, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 38)
Conflict at state: 43, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 37)
Conflict at state: 43, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 36)
Conflict at state: 43, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 35)
Conflict at state: 43, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 34)
Conflict at state: 43, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 33)
Conflict at state: 43, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 32)
Conflict at state: 43, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 31)
Conflict at state: 43, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 30)
Conflict at state: 43, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 29)
Conflict at state: 43, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 28)
Conflict at state: 43, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 211)
Conflict at state: 43, token: CLOSE_PARENS
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 44, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 221)
Conflict at state: 44, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 169)
Conflict at state: 44, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 210)
Conflict at state: 44, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 218)
Conflict at state: 44, token: DOT
  reduce by rule: local-variable -> 
  shift token (then go to state 217)
Conflict at state: 44, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 76)
Conflict at state: 44, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 42)
Conflict at state: 44, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 187)
Conflict at state: 44, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 213)
Conflict at state: 44, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 39)
Conflict at state: 44, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 38)
Conflict at state: 44, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 37)
Conflict at state: 44, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 36)
Conflict at state: 44, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 35)
Conflict at state: 44, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 34)
Conflict at state: 44, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 33)
Conflict at state: 44, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 32)
Conflict at state: 44, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 31)
Conflict at state: 44, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 30)
Conflict at state: 44, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 29)
Conflict at state: 44, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 28)
Conflict at state: 44, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 211)
Conflict at state: 46, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 46, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 46, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 224)
Conflict at state: 46, token: INTERR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 46, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 46, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 46, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 46, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 46, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 46, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 46, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 46, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 46, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 46, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 46, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 46, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 46, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 46, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 46, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 46, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 46, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 46, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 46, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 46, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 46, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 46, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 46, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 46, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 46, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 46, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 46, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 46, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 46, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 46, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 46, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 46, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 46, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 46, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 46, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 46, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 46, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 46, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 46, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 46, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 46, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 46, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 46, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 46, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 46, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 46, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 46, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 46, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 46, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 46, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 46, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 46, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 46, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 46, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 46, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 46, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 46, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 46, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 46, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 46, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 46, token: IF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 46, token: SWITCH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 46, token: WHILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 46, token: DO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 46, token: FOR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 90)
Conflict at state: 46, token: FOREACH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 91)
Conflict at state: 46, token: YIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 92)
Conflict at state: 46, token: BREAK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 46, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 46, token: GOTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 46, token: RETURN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 46, token: THROW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 46, token: TRY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 46, token: LOCK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 46, token: USING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 46, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 46, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 46, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 46, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 46, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 46, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 46, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 46, token: SEALED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 46, token: STATIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 46, token: READONLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 46, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 46, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 46, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 46, token: EXTERN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 46, token: FIXED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 46, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 46, token: CLASS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 46, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 46, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 46, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: CLOSE_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 224)
Conflict at state: 46, token: COMMA
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 169)
Conflict at state: 46, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 142)
Conflict at state: 46, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 26)
Conflict at state: 46, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 28)
Conflict at state: 46, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 29)
Conflict at state: 46, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 30)
Conflict at state: 46, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 31)
Conflict at state: 46, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 32)
Conflict at state: 46, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 33)
Conflict at state: 46, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 34)
Conflict at state: 46, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 35)
Conflict at state: 46, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 36)
Conflict at state: 46, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 37)
Conflict at state: 46, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 38)
Conflict at state: 46, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 39)
Conflict at state: 46, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 40)
Conflict at state: 46, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 41)
Conflict at state: 46, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 42)
Conflict at state: 46, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 76)
Conflict at state: 46, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 46, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 46, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 46, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 46, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: TRUE
  reduce by rule: local-variable -> 
  shift token (then go to state 172)
Conflict at state: 46, token: FALSE
  reduce by rule: local-variable -> 
  shift token (then go to state 173)
Conflict at state: 46, token: REAL_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 159)
Conflict at state: 46, token: INTEGER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 160)
Conflict at state: 46, token: STRING_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 161)
Conflict at state: 46, token: CHARACTER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 162)
Conflict at state: 46, token: NULL
  reduce by rule: local-variable -> 
  shift token (then go to state 163)
Conflict at state: 46, token: AWAIT
  reduce by rule: local-variable -> 
  shift token (then go to state 136)
Conflict at state: 46, token: DELEGATE
  reduce by rule: local-variable -> 
  shift token (then go to state 115)
Conflict at state: 46, token: STACKALLOC
  reduce by rule: local-variable -> 
  shift token (then go to state 117)
Conflict at state: 46, token: SBYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 119)
Conflict at state: 46, token: BYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 120)
Conflict at state: 46, token: SHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 121)
Conflict at state: 46, token: USHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 122)
Conflict at state: 46, token: INT
  reduce by rule: local-variable -> 
  shift token (then go to state 123)
Conflict at state: 46, token: UINT
  reduce by rule: local-variable -> 
  shift token (then go to state 124)
Conflict at state: 46, token: LONG
  reduce by rule: local-variable -> 
  shift token (then go to state 125)
Conflict at state: 46, token: ULONG
  reduce by rule: local-variable -> 
  shift token (then go to state 126)
Conflict at state: 46, token: CHAR
  reduce by rule: local-variable -> 
  shift token (then go to state 127)
Conflict at state: 46, token: FLOAT
  reduce by rule: local-variable -> 
  shift token (then go to state 128)
Conflict at state: 46, token: DOUBLE
  reduce by rule: local-variable -> 
  shift token (then go to state 129)
Conflict at state: 46, token: DECIMAL
  reduce by rule: local-variable -> 
  shift token (then go to state 130)
Conflict at state: 46, token: BOOL
  reduce by rule: local-variable -> 
  shift token (then go to state 131)
Conflict at state: 46, token: OBJECT
  reduce by rule: local-variable -> 
  shift token (then go to state 132)
Conflict at state: 46, token: STRING
  reduce by rule: local-variable -> 
  shift token (then go to state 133)
Conflict at state: 46, token: VOID
  reduce by rule: local-variable -> 
  shift token (then go to state 134)
Conflict at state: 46, token: AUTO
  reduce by rule: local-variable -> 
  shift token (then go to state 135)
Conflict at state: 46, token: BASE
  reduce by rule: local-variable -> 
  shift token (then go to state 165)
Conflict at state: 46, token: NEW
  reduce by rule: local-variable -> 
  shift token (then go to state 82)
Conflict at state: 46, token: TYPEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 166)
Conflict at state: 46, token: SIZEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 167)
Conflict at state: 46, token: CHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 67)
Conflict at state: 46, token: UNCHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 68)
Conflict at state: 46, token: CONST
  reduce by rule: local-variable -> 
  shift token (then go to state 45)
Conflict at state: 46, token: PLUS
  reduce by rule: local-variable -> 
  shift token (then go to state 137)
Conflict at state: 46, token: OP_COALESCING
  reduce by rule: local-variable -> 
  shift token (then go to state 139)
Conflict at state: 46, token: MINUS
  reduce by rule: local-variable -> 
  shift token (then go to state 140)
Conflict at state: 46, token: BANG
  reduce by rule: local-variable -> 
  shift token (then go to state 141)
Conflict at state: 46, token: IF
  reduce by rule: local-variable -> 
  shift token (then go to state 86)
Conflict at state: 46, token: SWITCH
  reduce by rule: local-variable -> 
  shift token (then go to state 87)
Conflict at state: 46, token: WHILE
  reduce by rule: local-variable -> 
  shift token (then go to state 88)
Conflict at state: 46, token: DO
  reduce by rule: local-variable -> 
  shift token (then go to state 89)
Conflict at state: 46, token: FOR
  reduce by rule: local-variable -> 
  shift token (then go to state 90)
Conflict at state: 46, token: FOREACH
  reduce by rule: local-variable -> 
  shift token (then go to state 91)
Conflict at state: 46, token: YIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 92)
Conflict at state: 46, token: BREAK
  reduce by rule: local-variable -> 
  shift token (then go to state 93)
Conflict at state: 46, token: CONTINUE
  reduce by rule: local-variable -> 
  shift token (then go to state 94)
Conflict at state: 46, token: GOTO
  reduce by rule: local-variable -> 
  shift token (then go to state 95)
Conflict at state: 46, token: RETURN
  reduce by rule: local-variable -> 
  shift token (then go to state 96)
Conflict at state: 46, token: THROW
  reduce by rule: local-variable -> 
  shift token (then go to state 97)
Conflict at state: 46, token: TRY
  reduce by rule: local-variable -> 
  shift token (then go to state 66)
Conflict at state: 46, token: LOCK
  reduce by rule: local-variable -> 
  shift token (then go to state 69)
Conflict at state: 46, token: USING
  reduce by rule: local-variable -> 
  shift token (then go to state 70)
Conflict at state: 46, token: UNSAFE
  reduce by rule: local-variable -> 
  shift token (then go to state 71)
Conflict at state: 46, token: PUBLIC
  reduce by rule: local-variable -> 
  shift token (then go to state 143)
Conflict at state: 46, token: PARTIAL
  reduce by rule: local-variable -> 
  shift token (then go to state 144)
Conflict at state: 46, token: PROTECTED
  reduce by rule: local-variable -> 
  shift token (then go to state 145)
Conflict at state: 46, token: INTERNAL
  reduce by rule: local-variable -> 
  shift token (then go to state 146)
Conflict at state: 46, token: PRIVATE
  reduce by rule: local-variable -> 
  shift token (then go to state 147)
Conflict at state: 46, token: ABSTRACT
  reduce by rule: local-variable -> 
  shift token (then go to state 148)
Conflict at state: 46, token: SEALED
  reduce by rule: local-variable -> 
  shift token (then go to state 149)
Conflict at state: 46, token: STATIC
  reduce by rule: local-variable -> 
  shift token (then go to state 150)
Conflict at state: 46, token: READONLY
  reduce by rule: local-variable -> 
  shift token (then go to state 151)
Conflict at state: 46, token: VOLATILE
  reduce by rule: local-variable -> 
  shift token (then go to state 152)
Conflict at state: 46, token: VIRTUAL
  reduce by rule: local-variable -> 
  shift token (then go to state 153)
Conflict at state: 46, token: OVERRIDE
  reduce by rule: local-variable -> 
  shift token (then go to state 154)
Conflict at state: 46, token: EXTERN
  reduce by rule: local-variable -> 
  shift token (then go to state 155)
Conflict at state: 46, token: FIXED
  reduce by rule: local-variable -> 
  shift token (then go to state 73)
Conflict at state: 46, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 46, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 46, token: CLASS
  reduce by rule: local-variable -> 
  shift token (then go to state 75)
Conflict at state: 48, token: DOT
  reduce by rule: statement-expression -> invocation-expressions
  shift token (then go to state 227)
Conflict at state: 48, token: OP_PTR
  reduce by rule: statement-expression -> invocation-expressions
  shift token (then go to state 228)
Conflict at state: 48, token: OPEN_BRACE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: THIS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: SET
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: ADD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: TILDE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: STAR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: EOF
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: TRUE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: FALSE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: REAL_LITERAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: INTEGER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: STRING_LITERAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: CHARACTER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: NULL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 227)
Conflict at state: 48, token: AWAIT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: DELEGATE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: STACKALLOC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: SBYTE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: BYTE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: SHORT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: USHORT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: INT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: UINT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: LONG
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: ULONG
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: CHAR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: FLOAT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: DOUBLE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: DECIMAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: BOOL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OBJECT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: STRING
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: VOID
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: AUTO
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 228)
Conflict at state: 48, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: BASE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: NEW
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: TYPEOF
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: SIZEOF
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: CHECKED
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: UNCHECKED
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: CONST
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: BANG
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: IF
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: SWITCH
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: WHILE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: DO
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: FOR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: FOREACH
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: YIELD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: BREAK
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: CONTINUE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: GOTO
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: RETURN
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: THROW
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: TRY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: LOCK
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: USING
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: UNSAFE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: PUBLIC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: PARTIAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: PROTECTED
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: INTERNAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: PRIVATE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: ABSTRACT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: SEALED
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: STATIC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: READONLY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: VOLATILE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: VIRTUAL
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: OVERRIDE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: EXTERN
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: FIXED
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: DOUBLE_COLON
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: CLASS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: CLOSE_BRACE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: CASE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 48, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 49, token: OPEN_BRACE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: THIS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: SET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: ADD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: TILDE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: STAR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: EOF
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: TRUE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: FALSE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: REAL_LITERAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: INTEGER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: STRING_LITERAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: CHARACTER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: NULL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: DOT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: AWAIT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: DELEGATE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: STACKALLOC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: SBYTE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: BYTE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: SHORT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: USHORT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: INT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: UINT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: LONG
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: ULONG
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: CHAR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: FLOAT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: DOUBLE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: DECIMAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: BOOL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OBJECT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: STRING
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: VOID
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: AUTO
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: BASE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: NEW
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: TYPEOF
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: SIZEOF
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: CHECKED
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: UNCHECKED
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: CONST
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: BANG
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: IF
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: SWITCH
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: WHILE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: DO
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: FOR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: FOREACH
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: YIELD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: BREAK
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: CONTINUE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: GOTO
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: RETURN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: THROW
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: TRY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: LOCK
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: USING
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: UNSAFE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: PUBLIC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: PARTIAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: PROTECTED
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: INTERNAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: PRIVATE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: ABSTRACT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: SEALED
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: STATIC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: READONLY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: VOLATILE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: VIRTUAL
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: OVERRIDE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: EXTERN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: FIXED
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: DOUBLE_COLON
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: CLASS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: CLOSE_BRACE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: CASE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 49, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OPEN_BRACE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: THIS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: SET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: ADD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: TILDE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: STAR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: EOF
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: TRUE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: FALSE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: REAL_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: INTEGER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: STRING_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: CHARACTER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: NULL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: AWAIT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: DELEGATE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: STACKALLOC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: SBYTE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: BYTE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: SHORT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: USHORT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: INT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: UINT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: LONG
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: ULONG
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: CHAR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: FLOAT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: DOUBLE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: DECIMAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: BOOL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OBJECT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: STRING
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: VOID
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: AUTO
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: BASE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: NEW
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: TYPEOF
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: SIZEOF
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: CHECKED
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: UNCHECKED
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: CONST
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: BANG
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: IF
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: SWITCH
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: WHILE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: DO
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: FOR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: FOREACH
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: YIELD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: BREAK
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: CONTINUE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: GOTO
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: RETURN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: THROW
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: TRY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: LOCK
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: USING
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: UNSAFE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: PUBLIC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: PARTIAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: PROTECTED
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: INTERNAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: PRIVATE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: ABSTRACT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: SEALED
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: STATIC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: READONLY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: VOLATILE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: VIRTUAL
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: OVERRIDE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: EXTERN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: FIXED
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: DOUBLE_COLON
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: CLASS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: CLOSE_BRACE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: CASE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 51, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 52, token: OPEN_BRACE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: THIS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: SET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: ADD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: TILDE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: STAR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: EOF
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: TRUE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: FALSE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: REAL_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: INTEGER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: STRING_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: CHARACTER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: NULL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: AWAIT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: DELEGATE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: STACKALLOC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: SBYTE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: BYTE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: SHORT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: USHORT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: INT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: UINT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: LONG
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: ULONG
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: CHAR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: FLOAT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: DOUBLE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: DECIMAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: BOOL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OBJECT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: STRING
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: VOID
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: AUTO
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: BASE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: NEW
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: TYPEOF
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: SIZEOF
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: CHECKED
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: UNCHECKED
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: CONST
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: BANG
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: IF
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: SWITCH
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: WHILE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: DO
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: FOR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: FOREACH
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: YIELD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: BREAK
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: CONTINUE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: GOTO
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: RETURN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: THROW
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: TRY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: LOCK
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: USING
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: UNSAFE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: PUBLIC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: PARTIAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: PROTECTED
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: INTERNAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: PRIVATE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: ABSTRACT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: SEALED
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: STATIC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: READONLY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: VOLATILE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: VIRTUAL
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: OVERRIDE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: EXTERN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: FIXED
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: DOUBLE_COLON
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: CLASS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: CLOSE_BRACE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: CASE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 52, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 53, token: OPEN_BRACE
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: SEMICOLON
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: ASSIGN
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: COMMA
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 53, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 54, token: OPEN_BRACE
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: SEMICOLON
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: ASSIGN
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: COMMA
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 54, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 77, token: OPEN_BRACKET
  reduce by rule: primary-expression -> primary-no-array-creation-expression
  shift token (then go to state 246)
Conflict at state: 79, token: STAR
  reduce by rule: type -> non-array-type
  shift token (then go to state 210)
Conflict at state: 80, token: STAR
  reduce by rule: type -> array-type
  shift token (then go to state 210)
Conflict at state: 82, token: AUTO
  reduce by rule: modifier -> NEW
  shift token (then go to state 135)
Conflict at state: 82, token: VOID
  reduce by rule: modifier -> NEW
  shift token (then go to state 134)
Conflict at state: 82, token: STRING
  reduce by rule: modifier -> NEW
  shift token (then go to state 133)
Conflict at state: 82, token: OBJECT
  reduce by rule: modifier -> NEW
  shift token (then go to state 132)
Conflict at state: 82, token: BOOL
  reduce by rule: modifier -> NEW
  shift token (then go to state 131)
Conflict at state: 82, token: DECIMAL
  reduce by rule: modifier -> NEW
  shift token (then go to state 130)
Conflict at state: 82, token: DOUBLE
  reduce by rule: modifier -> NEW
  shift token (then go to state 129)
Conflict at state: 82, token: FLOAT
  reduce by rule: modifier -> NEW
  shift token (then go to state 128)
Conflict at state: 82, token: CHAR
  reduce by rule: modifier -> NEW
  shift token (then go to state 127)
Conflict at state: 82, token: ULONG
  reduce by rule: modifier -> NEW
  shift token (then go to state 126)
Conflict at state: 82, token: LONG
  reduce by rule: modifier -> NEW
  shift token (then go to state 125)
Conflict at state: 82, token: UINT
  reduce by rule: modifier -> NEW
  shift token (then go to state 124)
Conflict at state: 82, token: INT
  reduce by rule: modifier -> NEW
  shift token (then go to state 123)
Conflict at state: 82, token: USHORT
  reduce by rule: modifier -> NEW
  shift token (then go to state 122)
Conflict at state: 82, token: SHORT
  reduce by rule: modifier -> NEW
  shift token (then go to state 121)
Conflict at state: 82, token: BYTE
  reduce by rule: modifier -> NEW
  shift token (then go to state 120)
Conflict at state: 82, token: SBYTE
  reduce by rule: modifier -> NEW
  shift token (then go to state 119)
Conflict at state: 82, token: IDENTIFIER
  reduce by rule: modifier -> NEW
  shift token (then go to state 254)
Conflict at state: 82, token: WHERE
  reduce by rule: modifier -> NEW
  shift token (then go to state 42)
Conflict at state: 82, token: THIS
  reduce by rule: modifier -> NEW
  shift token (then go to state 213)
Conflict at state: 82, token: TYPE
  reduce by rule: modifier -> NEW
  shift token (then go to state 39)
Conflict at state: 82, token: FIELD
  reduce by rule: modifier -> NEW
  shift token (then go to state 38)
Conflict at state: 82, token: MODULE
  reduce by rule: modifier -> NEW
  shift token (then go to state 37)
Conflict at state: 82, token: PROPERTY
  reduce by rule: modifier -> NEW
  shift token (then go to state 36)
Conflict at state: 82, token: ASSEMBLY
  reduce by rule: modifier -> NEW
  shift token (then go to state 35)
Conflict at state: 82, token: PARAM
  reduce by rule: modifier -> NEW
  shift token (then go to state 34)
Conflict at state: 82, token: METHOD
  reduce by rule: modifier -> NEW
  shift token (then go to state 33)
Conflict at state: 82, token: DEFAULT
  reduce by rule: modifier -> NEW
  shift token (then go to state 32)
Conflict at state: 82, token: PARAMS
  reduce by rule: modifier -> NEW
  shift token (then go to state 31)
Conflict at state: 82, token: SET
  reduce by rule: modifier -> NEW
  shift token (then go to state 30)
Conflict at state: 82, token: REMOVE
  reduce by rule: modifier -> NEW
  shift token (then go to state 29)
Conflict at state: 82, token: ADD
  reduce by rule: modifier -> NEW
  shift token (then go to state 28)
Conflict at state: 82, token: TILDE
  reduce by rule: modifier -> NEW
  shift token (then go to state 211)
Conflict at state: 82, token: ASYNC
  reduce by rule: modifier -> NEW
  shift token (then go to state 187)
Conflict at state: 84, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 84, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 84, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 84, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 84, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 84, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 84, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 84, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 84, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 84, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 84, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 84, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 84, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 84, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 84, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 84, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 84, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 84, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 84, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 84, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 84, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 84, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 84, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 84, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 84, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 84, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 84, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 84, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 84, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 84, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 84, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 84, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 84, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 84, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 84, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 84, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 84, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 84, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 84, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 84, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 84, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 84, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 84, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 84, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 84, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 84, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 84, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 84, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 84, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 84, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 84, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 84, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 84, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 84, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 84, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 84, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 84, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 84, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 84, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 85, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 85, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 85, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 85, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 85, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 85, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 85, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 85, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 85, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 85, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 85, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 85, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 85, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 85, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 85, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 85, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 85, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 85, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 85, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 85, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 85, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 85, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 85, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 85, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 85, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 85, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 85, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 85, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 85, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 85, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 85, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 85, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 85, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 85, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 85, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 85, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 85, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 85, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 85, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 85, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 85, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 85, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 85, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 85, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 85, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 85, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 85, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 85, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 85, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 85, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 85, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 85, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 85, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 85, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 85, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 85, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 85, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 85, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 85, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 89, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 89, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 89, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 89, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 89, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 89, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 89, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 89, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 89, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 89, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 89, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 89, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 89, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 89, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 89, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 89, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 89, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 89, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 89, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 89, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 89, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 89, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 89, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 89, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 89, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 89, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 89, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 96, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 96, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 96, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 96, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 96, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 287)
Conflict at state: 96, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 96, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 96, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 96, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 97, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 97, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 97, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 97, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 97, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 302)
Conflict at state: 97, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 97, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 97, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 97, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 136, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 137, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 137, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 137, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 137, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 137, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 137, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 137, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 137, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 137, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 137, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 137, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 137, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 137, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 137, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 137, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 137, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 137, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 137, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 137, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 137, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 137, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 137, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 137, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 137, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 137, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 137, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 137, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 137, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 137, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 137, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 137, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 137, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 137, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 137, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 137, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 137, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 137, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 137, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 137, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 137, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 137, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 137, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 137, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 137, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 137, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 137, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 137, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 137, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 137, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 137, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 137, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 137, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 137, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 137, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 137, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 137, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 137, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 137, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 137, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 138, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 138, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 138, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 138, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 138, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 138, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 138, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 138, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 138, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 138, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 138, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 138, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 138, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 138, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 138, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 138, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 138, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 138, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 138, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 138, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 138, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 138, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 138, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 138, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 138, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 138, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 138, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 138, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 138, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 138, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 138, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 138, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 138, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 138, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 138, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 138, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 138, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 138, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 138, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 138, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 138, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 138, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 138, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 138, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 138, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 138, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 138, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 138, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 138, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 138, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 138, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 138, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 138, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 138, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 138, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 138, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 138, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 138, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 138, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 139, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 139, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 139, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 139, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 139, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 139, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 139, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 139, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 139, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 139, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 139, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 139, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 139, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 139, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 139, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 139, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 139, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 139, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 139, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 139, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 139, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 139, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 139, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 139, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 139, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 139, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 139, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 139, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 139, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 139, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 139, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 139, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 139, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 139, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 139, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 139, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 139, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 139, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 139, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 139, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 139, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 139, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 139, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 139, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 139, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 139, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 139, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 139, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 139, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 139, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 139, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 139, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 139, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 139, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 139, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 139, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 139, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 139, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 139, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 140, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 140, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 140, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 140, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 140, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 140, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 140, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 140, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 140, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 140, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 140, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 140, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 140, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 140, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 140, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 140, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 140, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 140, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 140, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 140, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 140, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 140, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 140, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 140, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 140, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 140, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 140, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 140, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 140, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 140, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 140, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 140, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 140, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 140, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 140, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 140, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 140, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 140, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 140, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 140, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 140, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 140, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 140, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 140, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 140, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 140, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 140, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 140, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 140, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 140, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 140, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 140, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 140, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 140, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 140, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 140, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 140, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 140, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 140, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 141, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 141, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 141, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 141, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 141, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 141, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 141, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 141, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 141, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 141, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 141, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 141, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 141, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 141, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 141, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 141, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 141, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 141, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 141, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 141, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 141, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 141, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 141, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 141, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 141, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 141, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 141, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 141, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 141, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 141, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 141, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 141, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 141, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 141, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 141, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 141, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 141, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 141, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 141, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 141, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 141, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 141, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 141, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 141, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 141, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 141, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 141, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 141, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 141, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 141, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 141, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 141, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 141, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 141, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 141, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 141, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 141, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 141, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 141, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 142, token: TILDE
  reduce by rule: STARS -> STAR
  shift token (then go to state 26)
Conflict at state: 142, token: IDENTIFIER
  reduce by rule: STARS -> STAR
  shift token (then go to state 76)
Conflict at state: 142, token: ADD
  reduce by rule: STARS -> STAR
  shift token (then go to state 28)
Conflict at state: 142, token: REMOVE
  reduce by rule: STARS -> STAR
  shift token (then go to state 29)
Conflict at state: 142, token: SET
  reduce by rule: STARS -> STAR
  shift token (then go to state 30)
Conflict at state: 142, token: PARAMS
  reduce by rule: STARS -> STAR
  shift token (then go to state 31)
Conflict at state: 142, token: DEFAULT
  reduce by rule: STARS -> STAR
  shift token (then go to state 32)
Conflict at state: 142, token: METHOD
  reduce by rule: STARS -> STAR
  shift token (then go to state 33)
Conflict at state: 142, token: PARAM
  reduce by rule: STARS -> STAR
  shift token (then go to state 34)
Conflict at state: 142, token: ASSEMBLY
  reduce by rule: STARS -> STAR
  shift token (then go to state 35)
Conflict at state: 142, token: PROPERTY
  reduce by rule: STARS -> STAR
  shift token (then go to state 36)
Conflict at state: 142, token: MODULE
  reduce by rule: STARS -> STAR
  shift token (then go to state 37)
Conflict at state: 142, token: FIELD
  reduce by rule: STARS -> STAR
  shift token (then go to state 38)
Conflict at state: 142, token: TYPE
  reduce by rule: STARS -> STAR
  shift token (then go to state 39)
Conflict at state: 142, token: THIS
  reduce by rule: STARS -> STAR
  shift token (then go to state 40)
Conflict at state: 142, token: ASYNC
  reduce by rule: STARS -> STAR
  shift token (then go to state 187)
Conflict at state: 142, token: WHERE
  reduce by rule: STARS -> STAR
  shift token (then go to state 42)
Conflict at state: 142, token: STAR
  reduce by rule: STARS -> STAR
  shift token (then go to state 190)
Conflict at state: 142, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 142, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 142, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 142, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 164, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 164, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 164, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 164, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 164, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 164, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 164, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 164, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 164, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 164, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 164, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 164, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 164, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 164, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 164, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 164, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 164, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 164, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 164, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 164, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 164, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 164, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 164, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 164, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 164, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 164, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 164, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 164, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 164, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 164, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 164, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 164, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 164, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 164, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 164, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 164, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 164, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 164, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 164, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 164, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 164, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 164, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 164, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 164, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 164, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 164, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 164, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 164, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 164, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 164, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 164, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 164, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 164, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 164, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 164, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 164, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 164, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 164, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 164, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 168, token: DOUBLE_COLON
  reduce by rule: type-name -> namespace-or-type-name
  shift token (then go to state 331)
Conflict at state: 168, token: DOT
  reduce by rule: type-name -> namespace-or-type-name
  shift token (then go to state 332)
Conflict at state: 177, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 177, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 177, token: CLASS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 177, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 177, token: INTERR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 177, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 177, token: FIXED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 177, token: EXTERN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 177, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 177, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 177, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 177, token: READONLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 177, token: STATIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 177, token: SEALED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 177, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 177, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 177, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 177, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 177, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 177, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 177, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 177, token: USING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 177, token: LOCK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 177, token: TRY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 177, token: THROW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 177, token: RETURN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 177, token: GOTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 177, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 177, token: BREAK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 177, token: YIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 92)
Conflict at state: 177, token: FOREACH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 91)
Conflict at state: 177, token: FOR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 90)
Conflict at state: 177, token: DO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 177, token: WHILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 177, token: SWITCH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 177, token: IF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 177, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 177, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 177, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 177, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 177, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 177, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 177, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 177, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 177, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 177, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 177, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 177, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 177, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 177, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 177, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 177, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 177, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 177, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 177, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 177, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 177, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 177, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 177, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 177, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 177, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 177, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 177, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 177, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 177, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 177, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 177, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 177, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 177, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 177, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 177, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 177, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 177, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 177, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 177, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 177, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 177, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 177, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 177, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 177, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 177, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 177, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 177, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 177, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 177, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 177, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 177, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 177, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 177, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 177, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 353)
Conflict at state: 177, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 177, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 177, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 177, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 177, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 177, token: CASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 352)
Conflict at state: 177, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 177, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 177, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: CLOSE_BRACE
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: CLASS
  reduce by rule: local-variable -> 
  shift token (then go to state 75)
Conflict at state: 177, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 177, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 169)
Conflict at state: 177, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 177, token: FIXED
  reduce by rule: local-variable -> 
  shift token (then go to state 73)
Conflict at state: 177, token: EXTERN
  reduce by rule: local-variable -> 
  shift token (then go to state 155)
Conflict at state: 177, token: OVERRIDE
  reduce by rule: local-variable -> 
  shift token (then go to state 154)
Conflict at state: 177, token: VIRTUAL
  reduce by rule: local-variable -> 
  shift token (then go to state 153)
Conflict at state: 177, token: VOLATILE
  reduce by rule: local-variable -> 
  shift token (then go to state 152)
Conflict at state: 177, token: READONLY
  reduce by rule: local-variable -> 
  shift token (then go to state 151)
Conflict at state: 177, token: STATIC
  reduce by rule: local-variable -> 
  shift token (then go to state 150)
Conflict at state: 177, token: SEALED
  reduce by rule: local-variable -> 
  shift token (then go to state 149)
Conflict at state: 177, token: ABSTRACT
  reduce by rule: local-variable -> 
  shift token (then go to state 148)
Conflict at state: 177, token: PRIVATE
  reduce by rule: local-variable -> 
  shift token (then go to state 147)
Conflict at state: 177, token: INTERNAL
  reduce by rule: local-variable -> 
  shift token (then go to state 146)
Conflict at state: 177, token: PROTECTED
  reduce by rule: local-variable -> 
  shift token (then go to state 145)
Conflict at state: 177, token: PARTIAL
  reduce by rule: local-variable -> 
  shift token (then go to state 144)
Conflict at state: 177, token: PUBLIC
  reduce by rule: local-variable -> 
  shift token (then go to state 143)
Conflict at state: 177, token: UNSAFE
  reduce by rule: local-variable -> 
  shift token (then go to state 71)
Conflict at state: 177, token: USING
  reduce by rule: local-variable -> 
  shift token (then go to state 70)
Conflict at state: 177, token: LOCK
  reduce by rule: local-variable -> 
  shift token (then go to state 69)
Conflict at state: 177, token: TRY
  reduce by rule: local-variable -> 
  shift token (then go to state 66)
Conflict at state: 177, token: THROW
  reduce by rule: local-variable -> 
  shift token (then go to state 97)
Conflict at state: 177, token: RETURN
  reduce by rule: local-variable -> 
  shift token (then go to state 96)
Conflict at state: 177, token: GOTO
  reduce by rule: local-variable -> 
  shift token (then go to state 95)
Conflict at state: 177, token: CONTINUE
  reduce by rule: local-variable -> 
  shift token (then go to state 94)
Conflict at state: 177, token: BREAK
  reduce by rule: local-variable -> 
  shift token (then go to state 93)
Conflict at state: 177, token: YIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 92)
Conflict at state: 177, token: FOREACH
  reduce by rule: local-variable -> 
  shift token (then go to state 91)
Conflict at state: 177, token: FOR
  reduce by rule: local-variable -> 
  shift token (then go to state 90)
Conflict at state: 177, token: DO
  reduce by rule: local-variable -> 
  shift token (then go to state 89)
Conflict at state: 177, token: WHILE
  reduce by rule: local-variable -> 
  shift token (then go to state 88)
Conflict at state: 177, token: SWITCH
  reduce by rule: local-variable -> 
  shift token (then go to state 87)
Conflict at state: 177, token: IF
  reduce by rule: local-variable -> 
  shift token (then go to state 86)
Conflict at state: 177, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 142)
Conflict at state: 177, token: BANG
  reduce by rule: local-variable -> 
  shift token (then go to state 141)
Conflict at state: 177, token: MINUS
  reduce by rule: local-variable -> 
  shift token (then go to state 140)
Conflict at state: 177, token: OP_COALESCING
  reduce by rule: local-variable -> 
  shift token (then go to state 139)
Conflict at state: 177, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 177, token: PLUS
  reduce by rule: local-variable -> 
  shift token (then go to state 137)
Conflict at state: 177, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 177, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 177, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: CONST
  reduce by rule: local-variable -> 
  shift token (then go to state 45)
Conflict at state: 177, token: UNCHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 68)
Conflict at state: 177, token: CHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 67)
Conflict at state: 177, token: SIZEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 167)
Conflict at state: 177, token: TYPEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 166)
Conflict at state: 177, token: NEW
  reduce by rule: local-variable -> 
  shift token (then go to state 82)
Conflict at state: 177, token: BASE
  reduce by rule: local-variable -> 
  shift token (then go to state 165)
Conflict at state: 177, token: AUTO
  reduce by rule: local-variable -> 
  shift token (then go to state 135)
Conflict at state: 177, token: VOID
  reduce by rule: local-variable -> 
  shift token (then go to state 134)
Conflict at state: 177, token: STRING
  reduce by rule: local-variable -> 
  shift token (then go to state 133)
Conflict at state: 177, token: OBJECT
  reduce by rule: local-variable -> 
  shift token (then go to state 132)
Conflict at state: 177, token: BOOL
  reduce by rule: local-variable -> 
  shift token (then go to state 131)
Conflict at state: 177, token: DECIMAL
  reduce by rule: local-variable -> 
  shift token (then go to state 130)
Conflict at state: 177, token: DOUBLE
  reduce by rule: local-variable -> 
  shift token (then go to state 129)
Conflict at state: 177, token: FLOAT
  reduce by rule: local-variable -> 
  shift token (then go to state 128)
Conflict at state: 177, token: CHAR
  reduce by rule: local-variable -> 
  shift token (then go to state 127)
Conflict at state: 177, token: ULONG
  reduce by rule: local-variable -> 
  shift token (then go to state 126)
Conflict at state: 177, token: LONG
  reduce by rule: local-variable -> 
  shift token (then go to state 125)
Conflict at state: 177, token: UINT
  reduce by rule: local-variable -> 
  shift token (then go to state 124)
Conflict at state: 177, token: INT
  reduce by rule: local-variable -> 
  shift token (then go to state 123)
Conflict at state: 177, token: USHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 122)
Conflict at state: 177, token: SHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 121)
Conflict at state: 177, token: BYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 120)
Conflict at state: 177, token: SBYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 119)
Conflict at state: 177, token: STACKALLOC
  reduce by rule: local-variable -> 
  shift token (then go to state 117)
Conflict at state: 177, token: DELEGATE
  reduce by rule: local-variable -> 
  shift token (then go to state 115)
Conflict at state: 177, token: AWAIT
  reduce by rule: local-variable -> 
  shift token (then go to state 136)
Conflict at state: 177, token: NULL
  reduce by rule: local-variable -> 
  shift token (then go to state 163)
Conflict at state: 177, token: CHARACTER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 162)
Conflict at state: 177, token: STRING_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 161)
Conflict at state: 177, token: INTEGER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 160)
Conflict at state: 177, token: REAL_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 159)
Conflict at state: 177, token: FALSE
  reduce by rule: local-variable -> 
  shift token (then go to state 173)
Conflict at state: 177, token: TRUE
  reduce by rule: local-variable -> 
  shift token (then go to state 172)
Conflict at state: 177, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 76)
Conflict at state: 177, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 42)
Conflict at state: 177, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 41)
Conflict at state: 177, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 40)
Conflict at state: 177, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 39)
Conflict at state: 177, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 38)
Conflict at state: 177, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 37)
Conflict at state: 177, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 36)
Conflict at state: 177, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 35)
Conflict at state: 177, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 34)
Conflict at state: 177, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 33)
Conflict at state: 177, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 353)
Conflict at state: 177, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 31)
Conflict at state: 177, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 30)
Conflict at state: 177, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 29)
Conflict at state: 177, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 28)
Conflict at state: 177, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 26)
Conflict at state: 177, token: COMMA
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: EOF
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 177, token: CASE
  reduce by rule: local-variable -> 
  shift token (then go to state 352)
Conflict at state: 178, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 178, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 178, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 178, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 178, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 178, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 178, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 178, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 178, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 178, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 178, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 178, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 178, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 178, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 178, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 178, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 178, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 178, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 178, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 178, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 178, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 178, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 178, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 178, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 178, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 178, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 178, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 178, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 178, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 178, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 178, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 178, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 178, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 178, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 178, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 178, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 178, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 178, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 178, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 178, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 178, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 178, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 178, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 178, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 178, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 178, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 178, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 178, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 178, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 178, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 178, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 178, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 178, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 178, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 178, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 178, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 178, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 178, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 178, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 178, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 185, token: OP_DBLPTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
  shift token (then go to state 178)
Conflict at state: 185, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OPEN_BRACE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: ADD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: UNCHECKED
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CHECKED
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SIZEOF
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: TYPEOF
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: NEW
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: BASE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: THIS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: AUTO
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: VOID
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: STRING
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OBJECT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: BOOL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DECIMAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DOUBLE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: FLOAT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CHAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: ULONG
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: LONG
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: UINT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: INT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: USHORT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SHORT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: BYTE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SBYTE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: STACKALLOC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DELEGATE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: AWAIT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: NULL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CHARACTER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: STRING_LITERAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: INTEGER_LITERAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: REAL_LITERAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: FALSE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: TRUE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: TILDE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: BANG
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_AND
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: BITWISE_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CARET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: AMP
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_NE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_EQ
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: AS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: IS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_GE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_LE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: GT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: LT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: RIGHT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_LEFT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PERCENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DIV
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CLOSE_BRACE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: EOF
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CONST
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: IF
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SWITCH
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: WHILE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DO
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: FOR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: FOREACH
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: YIELD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: BREAK
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CONTINUE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: GOTO
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: RETURN
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: THROW
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: TRY
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: LOCK
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: USING
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: UNSAFE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PUBLIC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PARTIAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PROTECTED
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: INTERNAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PRIVATE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: ABSTRACT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SEALED
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: STATIC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: READONLY
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: VOLATILE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: VIRTUAL
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OVERRIDE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: EXTERN
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: FIXED
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DOUBLE_COLON
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CLASS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: COLON
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CLOSE_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CASE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OPEN_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CLOSE_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: UNCHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SIZEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: TYPEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: NEW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: BASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: AUTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: VOID
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: STRING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OBJECT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: BOOL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DECIMAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DOUBLE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: FLOAT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CHAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: ULONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: LONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: UINT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: INT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: USHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: BYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SBYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: STACKALLOC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DELEGATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: AWAIT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: NULL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CHARACTER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: STRING_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: INTEGER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: REAL_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: FALSE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: TRUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: TILDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: BANG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_AND
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: BITWISE_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CARET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_NE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_EQ
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: AS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: IS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_GE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_LE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: GT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: LT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: RIGHT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OP_LEFT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PERCENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DIV
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CLOSE_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: EOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CONST
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: IF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SWITCH
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: WHILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: FOR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: FOREACH
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: YIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: BREAK
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CONTINUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: GOTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: RETURN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: THROW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: TRY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: LOCK
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: USING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: UNSAFE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PUBLIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PARTIAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PROTECTED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: INTERNAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: PRIVATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: ABSTRACT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: SEALED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: STATIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: READONLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: VOLATILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: VIRTUAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: OVERRIDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: EXTERN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: FIXED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CLASS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CLOSE_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 185, token: CASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 190, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 190, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 190, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 190, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 190, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 190, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 190, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 190, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 190, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 190, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 190, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 190, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 190, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 190, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 190, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 190, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 190, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 190, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 190, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 190, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 190, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 190, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 190, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 190, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 190, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 190, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 190, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 190, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 190, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 190, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 190, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 190, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 190, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 190, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 190, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 190, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 190, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 190, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 190, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 190, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 190, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 190, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 190, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 190, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 190, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 190, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 190, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 190, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 190, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 190, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 190, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 190, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 190, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 190, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 190, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 190, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 190, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 190, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 190, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 191, token: OP_DEC
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 203)
Conflict at state: 191, token: OP_INC
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 202)
Conflict at state: 191, token: OP_PTR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 206)
Conflict at state: 191, token: DOT
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 205)
Conflict at state: 191, token: OPEN_PARENS
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 204)
Conflict at state: 192, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 228)
Conflict at state: 192, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 227)
Conflict at state: 200, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 201, token: COMMA
  reduce by rule: local-variable-declaration -> primary-expression local-variable-declarators
  shift token (then go to state 359)
Conflict at state: 204, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 204, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 204, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 204, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 204, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 362)
Conflict at state: 204, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 204, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 204, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 204, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 208, token: ASSIGN
  reduce by rule: local-variable-declarator -> local-variable
  shift token (then go to state 369)
Conflict at state: 214, token: COMMA
  reduce by rule: local-variable-declaration -> type local-variable-declarators
  shift token (then go to state 359)
Conflict at state: 216, token: OPEN_BRACKET
  reduce by rule: array-type -> type rank-specifiers
  shift token (then go to state 221)
Conflict at state: 219, token: ASSIGN
  reduce by rule: member-name-with-double-colon -> local-variable
  shift token (then go to state 369)
Conflict at state: 219, token: DOUBLE_COLON
  reduce by rule: member-name-with-double-colon -> local-variable
  shift token (then go to state 319)
Conflict at state: 219, token: OPEN_PARENS
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: COMMA
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: SEMICOLON
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OPEN_BRACE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: EOF
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: TILDE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: IDENTIFIER
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: ADD
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: REMOVE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: SET
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: PARAMS
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: DEFAULT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: METHOD
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: PARAM
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: ASSEMBLY
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: PROPERTY
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: MODULE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: FIELD
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: TYPE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: THIS
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: ASYNC
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: WHERE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: ASSIGN
  reduce by rule: local-variable-declarator -> local-variable
  shift token (then go to state 369)
Conflict at state: 219, token: INTERR
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: STAR
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: TRUE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: FALSE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: REAL_LITERAL
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: INTEGER_LITERAL
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: STRING_LITERAL
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: CHARACTER_LITERAL
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: NULL
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: DOT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: AWAIT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: DELEGATE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: STACKALLOC
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: SBYTE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: BYTE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: SHORT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: USHORT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: INT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: UINT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: LONG
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: ULONG
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: CHAR
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: FLOAT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: DOUBLE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: DECIMAL
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: BOOL
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OBJECT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: STRING
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: VOID
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: AUTO
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_PTR
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OPEN_BRACKET
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: BASE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_INC
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_DEC
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: NEW
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: TYPEOF
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: SIZEOF
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: CHECKED
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: UNCHECKED
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: CONST
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: PLUS
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OP_COALESCING
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: MINUS
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: BANG
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: IF
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: SWITCH
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: WHILE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: DO
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: FOR
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: FOREACH
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: YIELD
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: BREAK
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: CONTINUE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: GOTO
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: RETURN
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: THROW
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: TRY
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: LOCK
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: USING
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: UNSAFE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: PUBLIC
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: PARTIAL
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: PROTECTED
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: INTERNAL
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: PRIVATE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: ABSTRACT
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: SEALED
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: STATIC
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: READONLY
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: VOLATILE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: VIRTUAL
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: OVERRIDE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: EXTERN
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: FIXED
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: DOUBLE_COLON
  reduce by rule: local-variable-declarator -> local-variable
  shift token (then go to state 319)
Conflict at state: 219, token: CLASS
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: CASE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 219, token: CLOSE_BRACE
  reduce by rule: local-variable-declarator -> local-variable
  reduce by rule: member-name-with-double-colon -> local-variable
Conflict at state: 225, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 225, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 225, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 381)
Conflict at state: 225, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 225, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 225, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 225, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 225, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 225, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 225, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 225, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 225, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 225, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 225, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 225, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 225, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 225, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 225, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 225, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 225, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 225, token: INTERR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 225, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 225, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 225, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 225, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 225, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 225, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 225, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 225, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 225, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 225, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 225, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 225, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 225, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 225, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 225, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 225, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 225, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 225, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 225, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 225, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 225, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 225, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 225, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 225, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 225, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 225, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 225, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 225, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 225, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 225, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 225, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 225, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 225, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 225, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 225, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 225, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 225, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 225, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 225, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 225, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 225, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 225, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 225, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 225, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 225, token: IF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 225, token: SWITCH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 225, token: WHILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 225, token: DO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 225, token: FOR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 90)
Conflict at state: 225, token: FOREACH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 91)
Conflict at state: 225, token: YIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 92)
Conflict at state: 225, token: BREAK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 225, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 225, token: GOTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 225, token: RETURN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 225, token: THROW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 225, token: TRY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 225, token: LOCK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 225, token: USING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 225, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 225, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 225, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 225, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 225, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 225, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 225, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 225, token: SEALED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 225, token: STATIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 225, token: READONLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 225, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 225, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 225, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 225, token: EXTERN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 225, token: FIXED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 225, token: CLASS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 225, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 225, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 225, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: CLOSE_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 381)
Conflict at state: 225, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 26)
Conflict at state: 225, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 76)
Conflict at state: 225, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 28)
Conflict at state: 225, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 29)
Conflict at state: 225, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 30)
Conflict at state: 225, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 31)
Conflict at state: 225, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 32)
Conflict at state: 225, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 33)
Conflict at state: 225, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 34)
Conflict at state: 225, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 35)
Conflict at state: 225, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 36)
Conflict at state: 225, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 37)
Conflict at state: 225, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 38)
Conflict at state: 225, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 39)
Conflict at state: 225, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 40)
Conflict at state: 225, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 41)
Conflict at state: 225, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 42)
Conflict at state: 225, token: COMMA
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 169)
Conflict at state: 225, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 142)
Conflict at state: 225, token: TRUE
  reduce by rule: local-variable -> 
  shift token (then go to state 172)
Conflict at state: 225, token: FALSE
  reduce by rule: local-variable -> 
  shift token (then go to state 173)
Conflict at state: 225, token: REAL_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 159)
Conflict at state: 225, token: INTEGER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 160)
Conflict at state: 225, token: STRING_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 161)
Conflict at state: 225, token: CHARACTER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 162)
Conflict at state: 225, token: NULL
  reduce by rule: local-variable -> 
  shift token (then go to state 163)
Conflict at state: 225, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 225, token: AWAIT
  reduce by rule: local-variable -> 
  shift token (then go to state 136)
Conflict at state: 225, token: DELEGATE
  reduce by rule: local-variable -> 
  shift token (then go to state 115)
Conflict at state: 225, token: STACKALLOC
  reduce by rule: local-variable -> 
  shift token (then go to state 117)
Conflict at state: 225, token: SBYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 119)
Conflict at state: 225, token: BYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 120)
Conflict at state: 225, token: SHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 121)
Conflict at state: 225, token: USHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 122)
Conflict at state: 225, token: INT
  reduce by rule: local-variable -> 
  shift token (then go to state 123)
Conflict at state: 225, token: UINT
  reduce by rule: local-variable -> 
  shift token (then go to state 124)
Conflict at state: 225, token: LONG
  reduce by rule: local-variable -> 
  shift token (then go to state 125)
Conflict at state: 225, token: ULONG
  reduce by rule: local-variable -> 
  shift token (then go to state 126)
Conflict at state: 225, token: CHAR
  reduce by rule: local-variable -> 
  shift token (then go to state 127)
Conflict at state: 225, token: FLOAT
  reduce by rule: local-variable -> 
  shift token (then go to state 128)
Conflict at state: 225, token: DOUBLE
  reduce by rule: local-variable -> 
  shift token (then go to state 129)
Conflict at state: 225, token: DECIMAL
  reduce by rule: local-variable -> 
  shift token (then go to state 130)
Conflict at state: 225, token: BOOL
  reduce by rule: local-variable -> 
  shift token (then go to state 131)
Conflict at state: 225, token: OBJECT
  reduce by rule: local-variable -> 
  shift token (then go to state 132)
Conflict at state: 225, token: STRING
  reduce by rule: local-variable -> 
  shift token (then go to state 133)
Conflict at state: 225, token: VOID
  reduce by rule: local-variable -> 
  shift token (then go to state 134)
Conflict at state: 225, token: AUTO
  reduce by rule: local-variable -> 
  shift token (then go to state 135)
Conflict at state: 225, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 225, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 225, token: BASE
  reduce by rule: local-variable -> 
  shift token (then go to state 165)
Conflict at state: 225, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 225, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 225, token: NEW
  reduce by rule: local-variable -> 
  shift token (then go to state 82)
Conflict at state: 225, token: TYPEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 166)
Conflict at state: 225, token: SIZEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 167)
Conflict at state: 225, token: CHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 67)
Conflict at state: 225, token: UNCHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 68)
Conflict at state: 225, token: CONST
  reduce by rule: local-variable -> 
  shift token (then go to state 45)
Conflict at state: 225, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: PLUS
  reduce by rule: local-variable -> 
  shift token (then go to state 137)
Conflict at state: 225, token: OP_COALESCING
  reduce by rule: local-variable -> 
  shift token (then go to state 139)
Conflict at state: 225, token: MINUS
  reduce by rule: local-variable -> 
  shift token (then go to state 140)
Conflict at state: 225, token: BANG
  reduce by rule: local-variable -> 
  shift token (then go to state 141)
Conflict at state: 225, token: IF
  reduce by rule: local-variable -> 
  shift token (then go to state 86)
Conflict at state: 225, token: SWITCH
  reduce by rule: local-variable -> 
  shift token (then go to state 87)
Conflict at state: 225, token: WHILE
  reduce by rule: local-variable -> 
  shift token (then go to state 88)
Conflict at state: 225, token: DO
  reduce by rule: local-variable -> 
  shift token (then go to state 89)
Conflict at state: 225, token: FOR
  reduce by rule: local-variable -> 
  shift token (then go to state 90)
Conflict at state: 225, token: FOREACH
  reduce by rule: local-variable -> 
  shift token (then go to state 91)
Conflict at state: 225, token: YIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 92)
Conflict at state: 225, token: BREAK
  reduce by rule: local-variable -> 
  shift token (then go to state 93)
Conflict at state: 225, token: CONTINUE
  reduce by rule: local-variable -> 
  shift token (then go to state 94)
Conflict at state: 225, token: GOTO
  reduce by rule: local-variable -> 
  shift token (then go to state 95)
Conflict at state: 225, token: RETURN
  reduce by rule: local-variable -> 
  shift token (then go to state 96)
Conflict at state: 225, token: THROW
  reduce by rule: local-variable -> 
  shift token (then go to state 97)
Conflict at state: 225, token: TRY
  reduce by rule: local-variable -> 
  shift token (then go to state 66)
Conflict at state: 225, token: LOCK
  reduce by rule: local-variable -> 
  shift token (then go to state 69)
Conflict at state: 225, token: USING
  reduce by rule: local-variable -> 
  shift token (then go to state 70)
Conflict at state: 225, token: UNSAFE
  reduce by rule: local-variable -> 
  shift token (then go to state 71)
Conflict at state: 225, token: PUBLIC
  reduce by rule: local-variable -> 
  shift token (then go to state 143)
Conflict at state: 225, token: PARTIAL
  reduce by rule: local-variable -> 
  shift token (then go to state 144)
Conflict at state: 225, token: PROTECTED
  reduce by rule: local-variable -> 
  shift token (then go to state 145)
Conflict at state: 225, token: INTERNAL
  reduce by rule: local-variable -> 
  shift token (then go to state 146)
Conflict at state: 225, token: PRIVATE
  reduce by rule: local-variable -> 
  shift token (then go to state 147)
Conflict at state: 225, token: ABSTRACT
  reduce by rule: local-variable -> 
  shift token (then go to state 148)
Conflict at state: 225, token: SEALED
  reduce by rule: local-variable -> 
  shift token (then go to state 149)
Conflict at state: 225, token: STATIC
  reduce by rule: local-variable -> 
  shift token (then go to state 150)
Conflict at state: 225, token: READONLY
  reduce by rule: local-variable -> 
  shift token (then go to state 151)
Conflict at state: 225, token: VOLATILE
  reduce by rule: local-variable -> 
  shift token (then go to state 152)
Conflict at state: 225, token: VIRTUAL
  reduce by rule: local-variable -> 
  shift token (then go to state 153)
Conflict at state: 225, token: OVERRIDE
  reduce by rule: local-variable -> 
  shift token (then go to state 154)
Conflict at state: 225, token: EXTERN
  reduce by rule: local-variable -> 
  shift token (then go to state 155)
Conflict at state: 225, token: FIXED
  reduce by rule: local-variable -> 
  shift token (then go to state 73)
Conflict at state: 225, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 225, token: CLASS
  reduce by rule: local-variable -> 
  shift token (then go to state 75)
Conflict at state: 227, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 231, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 231, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 231, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 231, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 231, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 231, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 231, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 231, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 233, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 233, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 233, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 233, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 233, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 233, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 233, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 233, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 234, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 234, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 234, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 234, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 234, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 234, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 234, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 234, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 235, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 235, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 235, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 235, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 235, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 235, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 235, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 235, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 235, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 235, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 235, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 235, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 235, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 235, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 235, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 235, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 235, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 235, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 235, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 235, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 235, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 235, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 235, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 235, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 235, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 246, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 246, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 246, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 246, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 246, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 411)
Conflict at state: 246, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 246, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 377)
Conflict at state: 246, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 246, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 246, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 247, token: STAR
  reduce by rule: type -> non-array-type STARS
  shift token (then go to state 335)
Conflict at state: 248, token: STAR
  reduce by rule: type -> array-type STARS
  shift token (then go to state 335)
Conflict at state: 250, token: OPEN_BRACKET
  reduce by rule: type-with-identifier -> non-array-type
  shift token (then go to state 418)
Conflict at state: 250, token: OPEN_PARENS
  reduce by rule: type -> non-array-type
  reduce by rule: type-with-identifier -> non-array-type
Conflict at state: 250, token: OPEN_BRACE
  reduce by rule: type -> non-array-type
  reduce by rule: type-with-identifier -> non-array-type
Conflict at state: 250, token: OPEN_BRACKET
  reduce by rule: type -> non-array-type
  shift token (then go to state 418)
Conflict at state: 251, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW rank-specifiers
  shift token (then go to state 255)
Conflict at state: 251, token: OPEN_BRACKET
  reduce by rule: object-creation-expression -> NEW rank-specifiers
  shift token (then go to state 221)
Conflict at state: 255, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 255, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 255, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 255, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 255, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 255, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 255, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 255, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 256, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 256, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 256, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 256, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 256, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 256, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 256, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 256, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 256, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 256, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 256, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 256, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 256, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 256, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 256, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 256, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 256, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 256, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 256, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 256, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 256, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 256, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 256, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 256, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 256, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 256, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 256, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 256, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 256, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 256, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 256, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 256, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 256, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 256, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 256, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 256, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 256, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 256, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 256, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 256, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 256, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 256, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 256, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 256, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 256, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 256, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 256, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 256, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 256, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 256, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 256, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 256, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 256, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 256, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 256, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 256, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 256, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 256, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 256, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 256, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 269, token: OPEN_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: CLOSE_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: CLOSE_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: CLOSE_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: CLASS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: FIXED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: EXTERN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OVERRIDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: VIRTUAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: VOLATILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: READONLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: STATIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: SEALED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: ABSTRACT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: PRIVATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: INTERNAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: PROTECTED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: PARTIAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: PUBLIC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: UNSAFE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: USING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: LOCK
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: TRY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: THROW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: RETURN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: GOTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: CONTINUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: BREAK
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: YIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: FOREACH
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: FOR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: DO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: WHILE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: SWITCH
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: IF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: BANG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: CONST
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: UNCHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: CHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: SIZEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: TYPEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: NEW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: BASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: AUTO
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: VOID
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: STRING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OBJECT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: BOOL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: DECIMAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: DOUBLE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: FLOAT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: CHAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: ULONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: LONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: UINT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: INT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: USHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: SHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: BYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: SBYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: STACKALLOC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: DELEGATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: AWAIT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: NULL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: CHARACTER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: STRING_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: INTEGER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: REAL_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: FALSE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: TRUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: TILDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: EOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: DIV
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: PERCENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_LEFT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: RIGHT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: LT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: GT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_LE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_GE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: IS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: AS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_EQ
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_NE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: CARET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: BITWISE_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_AND
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: OP_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 269, token: CASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 271, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 271, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 271, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 271, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 271, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 271, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 271, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 271, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 272, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 272, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 272, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 272, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 272, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 272, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 272, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 272, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 273, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 273, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 273, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 273, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 273, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 273, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 273, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 273, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 276, token: ASSIGN
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OPEN_PARENS
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_DEC
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_INC
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OPEN_BRACKET
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_PTR
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: DOT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: DOUBLE_COLON
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: STAR
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: WHERE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: ASYNC
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: THIS
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: TYPE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: FIELD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: MODULE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: PROPERTY
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: ASSEMBLY
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: PARAM
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: METHOD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: DEFAULT
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: PARAMS
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: SET
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: REMOVE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: ADD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: IDENTIFIER
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: TILDE
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: INTERR
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: TILDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 276, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 277, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 434)
Conflict at state: 277, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 277, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 277, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 277, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 277, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 277, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 277, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 277, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 277, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 277, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 277, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 277, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 277, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 277, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 277, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 277, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 277, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 277, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 277, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 277, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 277, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 277, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 280, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 280, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 280, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 280, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 280, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 443)
Conflict at state: 280, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 280, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 280, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 280, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 284, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 284, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 284, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 284, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 284, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 284, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 284, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 284, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 291, token: INTERR
  reduce by rule: conditional-expression -> conditional-or-expression
  shift token (then go to state 450)
Conflict at state: 291, token: OP_OR
  reduce by rule: conditional-expression -> conditional-or-expression
  shift token (then go to state 451)
Conflict at state: 292, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 267)
Conflict at state: 292, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 266)
Conflict at state: 292, token: OP_XOR_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 265)
Conflict at state: 292, token: OP_OR_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 264)
Conflict at state: 292, token: OP_AND_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 263)
Conflict at state: 292, token: OP_MOD_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 262)
Conflict at state: 292, token: OP_DIV_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 261)
Conflict at state: 292, token: OP_MULT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 260)
Conflict at state: 292, token: OP_SUB_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 259)
Conflict at state: 292, token: OP_ADD_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 258)
Conflict at state: 292, token: ASSIGN
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 257)
Conflict at state: 293, token: OP_AND
  reduce by rule: conditional-or-expression -> conditional-and-expression
  shift token (then go to state 452)
Conflict at state: 294, token: BITWISE_OR
  reduce by rule: conditional-and-expression -> inclusive-or-expression
  shift token (then go to state 453)
Conflict at state: 295, token: CARET
  reduce by rule: inclusive-or-expression -> exclusive-or-expression
  shift token (then go to state 454)
Conflict at state: 296, token: AMP
  reduce by rule: exclusive-or-expression -> and-expression
  shift token (then go to state 455)
Conflict at state: 297, token: OP_EQ
  reduce by rule: and-expression -> equality-expression
  shift token (then go to state 456)
Conflict at state: 297, token: OP_NE
  reduce by rule: and-expression -> equality-expression
  shift token (then go to state 457)
Conflict at state: 298, token: OP_COALESCING
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 462)
Conflict at state: 298, token: AS
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 464)
Conflict at state: 298, token: IS
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 463)
Conflict at state: 298, token: OP_GE
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 461)
Conflict at state: 298, token: OP_LE
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 460)
Conflict at state: 298, token: GT
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 459)
Conflict at state: 298, token: LT
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 458)
Conflict at state: 299, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> shift-expression
  shift token (then go to state 465)
Conflict at state: 299, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> shift-expression
  shift token (then go to state 466)
Conflict at state: 300, token: OP_COALESCING
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 469)
Conflict at state: 300, token: OP_PTR
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 468)
Conflict at state: 300, token: MINUS
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 470)
Conflict at state: 300, token: PLUS
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 467)
Conflict at state: 301, token: STAR
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 471)
Conflict at state: 301, token: DIV
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 472)
Conflict at state: 301, token: PERCENT
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 473)
Conflict at state: 309, token: OPEN_BRACKET
  reduce by rule: type -> non-array-type
  shift token (then go to state 492)
Conflict at state: 324, token: DOT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 324, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 506)
Conflict at state: 324, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 324, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 324, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 324, token: INTERR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 505)
Conflict at state: 324, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  reduce by rule: type-with-interr -> type
Conflict at state: 324, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 324, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 324, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 324, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 324, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 325, token: CLOSE_PARENS
  reduce by rule: expression-list -> expression
  shift token (then go to state 507)
Conflict at state: 325, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 325, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 325, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 325, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 325, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 507)
Conflict at state: 325, token: COMMA
  reduce by rule: invocation-expressions -> 
  reduce by rule: expression-list -> expression
Conflict at state: 325, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 325, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 325, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 325, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 328, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 328, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 328, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 328, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 328, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 328, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 328, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 328, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 341, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 341, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 341, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 341, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 341, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 341, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 343, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 343, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 343, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 343, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 343, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 343, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 344, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 344, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 344, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 344, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 344, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 344, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 345, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 345, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 345, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 345, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 345, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 345, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 347, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 347, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 347, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 347, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 347, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 347, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 349, token: DEFAULT
  reduce by rule: labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels
  shift token (then go to state 523)
Conflict at state: 349, token: CASE
  reduce by rule: labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels
  shift token (then go to state 352)
Conflict at state: 352, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 352, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 352, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 352, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 352, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 352, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 352, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 352, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 353, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> DEFAULT
  shift token (then go to state 525)
Conflict at state: 356, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 356, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 356, token: DOT
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 356, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 356, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 356, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 357, token: DOT
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
Conflict at state: 357, token: OP_PTR
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
Conflict at state: 357, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
Conflict at state: 357, token: OP_INC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
Conflict at state: 357, token: OP_DEC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
Conflict at state: 357, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON invocation-expression
Conflict at state: 359, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 169)
Conflict at state: 359, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 210)
Conflict at state: 359, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 76)
Conflict at state: 359, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 42)
Conflict at state: 359, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 187)
Conflict at state: 359, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 213)
Conflict at state: 359, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 39)
Conflict at state: 359, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 38)
Conflict at state: 359, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 37)
Conflict at state: 359, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 36)
Conflict at state: 359, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 35)
Conflict at state: 359, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 34)
Conflict at state: 359, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 33)
Conflict at state: 359, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 32)
Conflict at state: 359, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 31)
Conflict at state: 359, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 30)
Conflict at state: 359, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 29)
Conflict at state: 359, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 28)
Conflict at state: 359, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 211)
Conflict at state: 365, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 365, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 365, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 365, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 365, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 365, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 365, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 365, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 366, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 366, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 366, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 366, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 366, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 366, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 366, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 366, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 369, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 369, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 369, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 369, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 369, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 369, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 369, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 369, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 369, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 369, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 494)
Conflict at state: 369, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 369, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 369, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 369, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 369, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 369, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 369, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 369, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 369, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 369, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 369, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 369, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 369, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 369, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 369, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 369, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 369, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 369, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 369, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 369, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 369, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 369, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 369, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 369, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 369, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 369, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 369, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 369, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 369, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 369, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 369, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 369, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 369, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 369, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 369, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 369, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 369, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 369, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 369, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 369, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 369, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 369, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 369, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 369, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 369, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 369, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 369, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 369, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 369, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 369, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 378, token: COMMA
  reduce by rule: local-constant-declaration -> CONST type constant-declarators
  shift token (then go to state 541)
Conflict at state: 379, token: CLASS
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OPEN_BRACKET
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: INTERR
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: DOUBLE_COLON
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OPEN_PARENS
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: FIXED
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: EXTERN
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OVERRIDE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: VIRTUAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: VOLATILE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: READONLY
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: STATIC
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: SEALED
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: ABSTRACT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: PRIVATE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: INTERNAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: PROTECTED
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: PARTIAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: PUBLIC
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: UNSAFE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: USING
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: LOCK
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: TRY
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: THROW
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: RETURN
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: GOTO
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: CONTINUE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: BREAK
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: YIELD
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: FOREACH
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: FOR
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: DO
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: WHILE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: SWITCH
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: IF
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: SEMICOLON
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: STAR
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: BANG
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: MINUS
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_COALESCING
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_PTR
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: PLUS
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_DEC
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_INC
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_XOR_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_OR_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_AND_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_MOD_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_DIV_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_MULT_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_SUB_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OP_ADD_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: ASSIGN
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OPEN_BRACE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: CONST
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: UNCHECKED
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: CHECKED
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: SIZEOF
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: TYPEOF
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: NEW
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: BASE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: AUTO
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: VOID
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: STRING
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: OBJECT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: BOOL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: DECIMAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: DOUBLE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: FLOAT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: CHAR
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: ULONG
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: LONG
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: UINT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: INT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: USHORT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: SHORT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: BYTE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: SBYTE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: STACKALLOC
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: DELEGATE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: DOT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: AWAIT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: NULL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: CHARACTER_LITERAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: STRING_LITERAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: INTEGER_LITERAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: REAL_LITERAL
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: FALSE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: TRUE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: IDENTIFIER
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: WHERE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: ASYNC
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: THIS
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: TYPE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: FIELD
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: MODULE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: PROPERTY
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: ASSEMBLY
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: PARAM
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: METHOD
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: DEFAULT
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: PARAMS
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: SET
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: REMOVE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: ADD
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: TILDE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: COMMA
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: EOF
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: CLOSE_BRACE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 379, token: CASE
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 383, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 383, token: DOT
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 383, token: OP_PTR
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 383, token: OP_INC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 383, token: OP_DEC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 383, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 384, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: DOUBLE_COLON
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 384, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 404, token: SEMICOLON
  reduce by rule: class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-body
  shift token (then go to state 556)
Conflict at state: 413, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 413, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 413, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 413, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 413, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 612)
Conflict at state: 413, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 413, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 413, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 413, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 416, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 416, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 416, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 416, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 416, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 377)
Conflict at state: 416, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 376)
Conflict at state: 416, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 416, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 416, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 416, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 418, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 418, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 418, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 418, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 418, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 377)
Conflict at state: 418, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 376)
Conflict at state: 418, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 418, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 418, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 418, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 420, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 420, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 420, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 420, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 420, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 618)
Conflict at state: 420, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 420, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 420, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 420, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 422, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 422, token: OPEN_BRACE
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 422, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 422, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 422, token: DOT
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 422, token: STAR
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 430, token: CLOSE_PARENS
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 430, token: SEMICOLON
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 434, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 434, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 434, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 434, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 434, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 625)
Conflict at state: 434, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 434, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 434, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 434, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 450, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 450, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 450, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 450, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 450, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 450, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 450, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 450, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 450, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 450, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 450, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 450, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 450, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 450, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 450, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 450, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 450, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 450, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 450, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 450, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 450, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 450, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 450, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 450, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 450, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 450, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 450, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 450, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 450, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 450, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 450, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 450, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 450, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 450, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 450, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 450, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 450, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 450, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 450, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 450, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 450, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 450, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 450, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 450, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 450, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 450, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 450, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 450, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 450, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 450, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 450, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 450, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 450, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 450, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 450, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 450, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 450, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 450, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 450, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 451, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 451, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 451, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 451, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 451, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 451, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 451, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 451, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 451, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 451, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 451, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 451, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 451, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 451, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 451, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 451, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 451, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 451, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 451, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 451, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 451, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 451, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 451, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 451, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 451, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 451, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 451, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 451, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 451, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 451, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 451, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 451, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 451, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 451, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 451, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 451, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 451, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 451, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 451, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 451, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 451, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 451, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 451, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 451, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 451, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 451, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 451, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 451, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 451, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 451, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 451, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 451, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 451, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 451, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 451, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 451, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 451, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 451, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 451, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 452, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 452, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 452, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 452, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 452, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 452, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 452, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 452, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 452, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 452, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 452, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 452, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 452, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 452, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 452, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 452, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 452, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 452, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 452, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 452, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 452, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 452, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 452, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 452, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 452, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 452, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 452, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 452, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 452, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 452, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 452, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 452, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 452, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 452, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 452, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 452, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 452, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 452, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 452, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 452, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 452, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 452, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 452, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 452, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 452, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 452, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 452, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 452, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 452, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 452, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 452, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 452, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 452, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 452, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 452, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 452, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 452, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 452, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 452, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 453, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 453, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 453, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 453, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 453, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 453, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 453, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 453, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 453, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 453, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 453, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 453, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 453, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 453, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 453, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 453, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 453, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 453, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 453, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 453, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 453, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 453, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 453, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 453, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 453, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 453, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 453, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 453, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 453, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 453, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 453, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 453, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 453, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 453, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 453, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 453, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 453, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 453, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 453, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 453, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 453, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 453, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 453, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 453, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 453, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 453, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 453, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 453, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 453, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 453, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 453, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 453, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 453, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 453, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 453, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 453, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 453, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 453, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 453, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 454, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 454, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 454, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 454, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 454, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 454, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 454, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 454, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 454, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 454, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 454, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 454, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 454, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 454, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 454, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 454, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 454, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 454, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 454, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 454, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 454, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 454, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 454, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 454, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 454, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 454, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 454, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 454, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 454, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 454, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 454, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 454, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 454, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 454, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 454, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 454, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 454, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 454, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 454, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 454, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 454, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 454, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 454, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 454, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 454, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 454, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 454, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 454, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 454, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 454, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 454, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 454, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 454, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 454, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 454, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 454, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 454, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 454, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 454, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 455, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 455, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 455, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 455, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 455, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 455, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 455, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 455, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 455, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 455, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 455, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 455, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 455, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 455, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 455, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 455, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 455, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 455, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 455, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 455, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 455, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 455, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 455, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 455, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 455, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 455, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 455, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 455, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 455, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 455, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 455, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 455, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 455, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 455, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 455, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 455, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 455, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 455, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 455, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 455, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 455, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 455, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 455, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 455, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 455, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 455, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 455, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 455, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 455, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 455, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 455, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 455, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 455, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 455, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 455, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 455, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 455, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 455, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 455, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 456, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 456, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 456, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 456, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 456, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 456, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 456, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 456, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 456, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 456, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 456, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 456, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 456, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 456, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 456, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 456, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 456, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 456, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 456, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 456, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 456, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 456, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 456, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 456, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 456, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 456, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 456, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 456, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 456, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 456, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 456, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 456, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 456, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 456, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 456, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 456, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 456, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 456, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 456, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 456, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 456, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 456, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 456, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 456, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 456, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 456, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 456, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 456, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 456, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 456, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 456, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 456, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 456, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 456, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 456, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 456, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 456, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 456, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 456, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 457, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 457, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 457, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 457, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 457, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 457, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 457, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 457, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 457, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 457, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 457, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 457, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 457, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 457, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 457, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 457, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 457, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 457, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 457, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 457, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 457, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 457, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 457, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 457, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 457, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 457, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 457, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 457, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 457, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 457, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 457, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 457, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 457, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 457, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 457, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 457, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 457, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 457, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 457, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 457, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 457, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 457, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 457, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 457, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 457, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 457, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 457, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 457, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 457, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 457, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 457, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 457, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 457, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 457, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 457, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 457, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 457, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 457, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 457, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 458, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 458, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 458, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 458, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 458, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 458, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 458, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 458, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 458, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 458, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 458, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 458, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 458, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 458, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 458, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 458, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 458, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 458, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 458, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 458, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 458, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 458, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 458, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 458, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 458, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 458, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 458, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 458, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 458, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 458, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 458, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 458, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 458, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 458, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 458, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 458, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 458, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 458, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 458, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 458, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 458, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 458, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 458, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 458, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 458, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 458, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 458, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 458, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 458, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 458, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 458, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 458, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 458, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 458, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 458, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 458, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 458, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 458, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 458, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 459, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 459, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 459, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 459, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 459, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 459, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 459, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 459, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 459, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 459, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 459, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 459, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 459, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 459, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 459, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 459, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 459, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 459, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 459, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 459, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 459, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 459, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 459, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 459, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 459, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 459, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 459, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 459, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 459, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 459, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 459, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 459, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 459, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 459, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 459, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 459, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 459, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 459, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 459, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 459, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 459, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 459, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 459, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 459, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 459, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 459, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 459, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 459, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 459, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 459, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 459, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 459, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 459, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 459, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 459, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 459, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 459, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 459, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 459, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 460, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 460, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 460, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 460, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 460, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 460, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 460, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 460, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 460, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 460, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 460, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 460, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 460, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 460, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 460, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 460, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 460, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 460, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 460, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 460, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 460, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 460, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 460, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 460, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 460, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 460, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 460, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 460, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 460, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 460, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 460, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 460, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 460, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 460, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 460, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 460, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 460, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 460, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 460, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 460, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 460, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 460, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 460, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 460, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 460, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 460, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 460, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 460, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 460, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 460, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 460, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 460, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 460, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 460, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 460, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 460, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 460, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 460, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 460, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 461, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 461, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 461, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 461, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 461, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 461, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 461, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 461, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 461, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 461, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 461, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 461, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 461, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 461, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 461, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 461, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 461, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 461, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 461, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 461, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 461, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 461, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 461, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 461, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 461, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 461, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 461, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 461, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 461, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 461, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 461, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 461, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 461, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 461, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 461, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 461, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 461, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 461, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 461, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 461, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 461, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 461, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 461, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 461, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 461, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 461, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 461, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 461, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 461, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 461, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 461, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 461, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 461, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 461, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 461, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 461, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 461, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 461, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 461, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 462, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 462, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 462, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 462, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 462, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 462, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 462, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 462, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 462, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 462, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 462, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 462, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 462, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 462, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 462, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 462, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 462, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 462, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 462, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 462, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 462, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 462, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 462, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 462, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 462, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 462, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 462, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 462, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 462, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 462, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 462, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 462, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 462, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 462, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 462, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 462, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 462, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 462, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 462, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 462, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 462, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 462, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 462, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 462, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 462, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 462, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 462, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 462, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 462, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 462, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 462, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 462, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 462, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 462, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 462, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 462, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 462, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 462, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 462, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 465, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 465, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 465, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 465, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 465, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 465, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 465, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 465, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 465, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 465, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 465, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 465, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 465, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 465, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 465, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 465, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 465, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 465, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 465, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 465, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 465, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 465, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 465, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 465, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 465, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 465, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 465, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 465, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 465, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 465, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 465, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 465, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 465, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 465, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 465, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 465, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 465, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 465, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 465, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 465, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 465, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 465, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 465, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 465, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 465, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 465, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 465, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 465, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 465, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 465, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 465, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 465, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 465, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 465, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 465, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 465, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 465, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 465, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 465, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 466, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 466, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 466, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 466, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 466, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 466, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 466, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 466, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 466, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 466, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 466, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 466, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 466, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 466, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 466, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 466, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 466, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 466, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 466, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 466, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 466, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 466, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 466, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 466, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 466, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 466, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 466, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 466, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 466, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 466, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 466, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 466, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 466, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 466, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 466, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 466, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 466, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 466, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 466, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 466, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 466, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 466, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 466, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 466, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 466, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 466, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 466, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 466, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 466, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 466, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 466, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 466, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 466, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 466, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 466, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 466, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 466, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 466, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 466, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 467, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 467, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 467, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 467, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 467, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 467, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 467, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 467, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 467, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 467, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 467, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 467, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 467, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 467, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 467, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 467, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 467, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 467, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 467, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 467, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 467, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 467, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 467, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 467, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 467, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 467, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 467, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 467, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 467, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 467, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 467, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 467, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 467, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 467, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 467, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 467, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 467, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 467, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 467, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 467, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 467, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 467, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 467, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 467, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 467, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 467, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 467, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 467, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 467, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 467, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 467, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 467, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 467, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 467, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 467, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 467, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 467, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 467, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 467, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 468, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 468, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 468, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 468, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 468, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 468, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 468, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 468, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 468, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 468, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 468, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 468, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 468, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 468, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 468, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 468, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 468, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 468, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 468, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 468, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 468, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 468, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 468, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 468, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 468, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 468, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 468, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 468, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 468, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 468, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 468, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 468, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 468, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 468, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 468, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 468, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 468, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 468, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 468, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 468, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 468, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 468, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 468, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 468, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 468, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 468, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 468, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 468, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 468, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 468, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 468, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 468, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 468, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 468, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 468, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 468, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 468, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 468, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 468, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 469, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 469, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 469, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 469, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 469, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 469, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 469, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 469, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 469, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 469, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 469, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 469, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 469, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 469, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 469, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 469, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 469, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 469, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 469, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 469, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 469, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 469, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 469, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 469, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 469, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 469, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 469, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 469, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 469, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 469, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 469, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 469, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 469, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 469, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 469, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 469, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 469, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 469, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 469, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 469, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 469, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 469, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 469, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 469, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 469, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 469, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 469, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 469, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 469, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 469, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 469, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 469, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 469, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 469, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 469, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 469, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 469, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 469, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 469, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 470, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 470, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 470, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 470, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 470, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 470, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 470, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 470, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 470, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 470, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 470, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 470, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 470, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 470, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 470, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 470, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 470, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 470, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 470, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 470, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 470, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 470, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 470, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 470, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 470, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 470, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 470, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 470, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 470, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 470, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 470, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 470, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 470, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 470, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 470, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 470, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 470, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 470, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 470, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 470, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 470, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 470, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 470, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 470, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 470, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 470, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 470, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 470, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 470, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 470, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 470, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 470, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 470, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 470, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 470, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 470, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 470, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 470, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 470, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 471, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 471, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 471, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 471, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 471, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 471, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 471, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 471, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 471, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 471, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 471, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 471, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 471, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 471, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 471, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 471, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 471, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 471, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 471, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 471, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 471, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 471, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 471, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 471, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 471, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 471, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 471, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 471, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 471, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 471, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 471, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 471, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 471, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 471, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 471, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 471, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 471, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 471, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 471, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 471, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 471, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 471, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 471, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 471, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 471, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 471, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 471, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 471, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 471, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 471, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 471, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 471, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 471, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 471, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 471, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 471, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 471, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 471, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 471, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 472, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 472, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 472, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 472, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 472, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 472, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 472, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 472, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 472, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 472, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 472, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 472, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 472, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 472, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 472, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 472, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 472, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 472, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 472, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 472, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 472, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 472, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 472, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 472, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 472, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 472, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 472, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 472, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 472, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 472, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 472, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 472, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 472, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 472, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 472, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 472, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 472, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 472, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 472, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 472, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 472, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 472, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 472, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 472, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 472, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 472, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 472, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 472, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 472, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 472, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 472, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 472, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 472, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 472, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 472, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 472, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 472, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 472, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 472, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 473, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 473, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 473, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 473, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 473, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 473, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 473, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 473, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 473, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 473, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 473, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 473, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 473, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 473, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 473, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 473, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 473, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 473, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 473, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 473, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 473, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 473, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 473, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 473, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 473, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 473, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 473, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 473, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 473, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 473, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 473, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 473, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 473, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 473, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 473, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 473, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 473, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 473, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 473, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 473, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 473, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 473, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 473, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 473, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 473, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 473, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 473, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 473, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 473, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 473, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 473, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 473, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 473, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 473, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 473, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 473, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 473, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 473, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 473, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 480, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 42)
Conflict at state: 480, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 187)
Conflict at state: 480, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 213)
Conflict at state: 480, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 39)
Conflict at state: 480, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 38)
Conflict at state: 480, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 37)
Conflict at state: 480, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 36)
Conflict at state: 480, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 35)
Conflict at state: 480, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 34)
Conflict at state: 480, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 33)
Conflict at state: 480, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 32)
Conflict at state: 480, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 31)
Conflict at state: 480, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 30)
Conflict at state: 480, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 29)
Conflict at state: 480, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 28)
Conflict at state: 480, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 76)
Conflict at state: 480, token: TILDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 211)
Conflict at state: 483, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 42)
Conflict at state: 483, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 187)
Conflict at state: 483, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 213)
Conflict at state: 483, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 39)
Conflict at state: 483, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 38)
Conflict at state: 483, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 37)
Conflict at state: 483, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 36)
Conflict at state: 483, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 35)
Conflict at state: 483, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 34)
Conflict at state: 483, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 33)
Conflict at state: 483, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 32)
Conflict at state: 483, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 31)
Conflict at state: 483, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 30)
Conflict at state: 483, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 29)
Conflict at state: 483, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 28)
Conflict at state: 483, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 76)
Conflict at state: 483, token: TILDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 211)
Conflict at state: 492, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 492, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 492, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 492, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 492, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 672)
Conflict at state: 492, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 492, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 492, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 492, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 494, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 494, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 494, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 494, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 494, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 674)
Conflict at state: 494, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 494, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 494, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 494, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 495, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 495, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 495, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 495, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 495, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 681)
Conflict at state: 495, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 495, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 495, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 495, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 499, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 499, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 499, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 499, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 499, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 499, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 499, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 499, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 499, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 499, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 499, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 499, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 499, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 499, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 499, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 499, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 499, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 499, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 499, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 499, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 499, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 499, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 499, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 499, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 499, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 499, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 499, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 499, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 499, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 499, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 499, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 499, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 499, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 499, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 499, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 499, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 499, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 499, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 499, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 499, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 499, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 499, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 499, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 499, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 499, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 499, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 499, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 499, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 499, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 499, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 499, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 499, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 499, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 499, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 499, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 499, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 499, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 499, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 499, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 503, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 503, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 503, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 503, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 503, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 503, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 503, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 503, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 504, token: CLOSE_PARENS
  reduce by rule: type-expression-list -> type expression
  shift token (then go to state 690)
Conflict at state: 506, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 506, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 506, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 506, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 506, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 506, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 506, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 506, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 507, token: OPEN_PARENS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 164)
Conflict at state: 507, token: STAR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 190)
Conflict at state: 507, token: BANG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 141)
Conflict at state: 507, token: MINUS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 140)
Conflict at state: 507, token: OP_COALESCING
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 139)
Conflict at state: 507, token: OP_PTR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 138)
Conflict at state: 507, token: PLUS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 137)
Conflict at state: 507, token: OP_DEC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 85)
Conflict at state: 507, token: OP_INC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 84)
Conflict at state: 507, token: UNCHECKED
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 199)
Conflict at state: 507, token: CHECKED
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 198)
Conflict at state: 507, token: SIZEOF
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 167)
Conflict at state: 507, token: TYPEOF
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 166)
Conflict at state: 507, token: NEW
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 197)
Conflict at state: 507, token: BASE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 165)
Conflict at state: 507, token: AUTO
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 135)
Conflict at state: 507, token: VOID
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 134)
Conflict at state: 507, token: STRING
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 133)
Conflict at state: 507, token: OBJECT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 132)
Conflict at state: 507, token: BOOL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 131)
Conflict at state: 507, token: DECIMAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 130)
Conflict at state: 507, token: DOUBLE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 129)
Conflict at state: 507, token: FLOAT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 128)
Conflict at state: 507, token: CHAR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 127)
Conflict at state: 507, token: ULONG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 126)
Conflict at state: 507, token: LONG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 125)
Conflict at state: 507, token: UINT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 124)
Conflict at state: 507, token: INT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 123)
Conflict at state: 507, token: USHORT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 122)
Conflict at state: 507, token: SHORT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 121)
Conflict at state: 507, token: BYTE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 120)
Conflict at state: 507, token: SBYTE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 119)
Conflict at state: 507, token: STACKALLOC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 117)
Conflict at state: 507, token: DELEGATE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 115)
Conflict at state: 507, token: AWAIT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 136)
Conflict at state: 507, token: NULL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 163)
Conflict at state: 507, token: CHARACTER_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 162)
Conflict at state: 507, token: STRING_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 161)
Conflict at state: 507, token: INTEGER_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 160)
Conflict at state: 507, token: REAL_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 159)
Conflict at state: 507, token: FALSE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 173)
Conflict at state: 507, token: TRUE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 172)
Conflict at state: 507, token: IDENTIFIER
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 76)
Conflict at state: 507, token: WHERE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 42)
Conflict at state: 507, token: ASYNC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 187)
Conflict at state: 507, token: THIS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 40)
Conflict at state: 507, token: TYPE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 39)
Conflict at state: 507, token: FIELD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 38)
Conflict at state: 507, token: MODULE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 37)
Conflict at state: 507, token: PROPERTY
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 36)
Conflict at state: 507, token: ASSEMBLY
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 35)
Conflict at state: 507, token: PARAM
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 34)
Conflict at state: 507, token: METHOD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 33)
Conflict at state: 507, token: DEFAULT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 32)
Conflict at state: 507, token: PARAMS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 31)
Conflict at state: 507, token: SET
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 30)
Conflict at state: 507, token: REMOVE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 29)
Conflict at state: 507, token: ADD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 28)
Conflict at state: 507, token: TILDE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 26)
Conflict at state: 507, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_XOR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_OR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_AND_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_MOD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_DIV_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_MULT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_SUB_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_ADD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: ASSIGN
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: DOT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 507, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 507, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 507, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 507, token: PERCENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: DIV
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 507, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 507, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 507, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 507, token: RIGHT_SHIFT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_LEFT_SHIFT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_GE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_LE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: GT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: LT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_NE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_EQ
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: AMP
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: CARET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: BITWISE_OR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_AND
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OP_OR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: INTERR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 507, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 507, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 507, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 507, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 507, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 507, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 507, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 507, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 507, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 507, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 507, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 507, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 507, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 507, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 507, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 507, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 507, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 507, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 507, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 507, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 507, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 507, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 507, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 507, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 507, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 507, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 507, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 507, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 507, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 507, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 507, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 507, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 507, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 507, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 507, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 507, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 507, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 507, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 507, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 507, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 507, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 507, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 507, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 507, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 507, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 507, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 507, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 507, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 507, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 507, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 507, token: AS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: IS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: COMMA
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: COLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: CONST
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: IF
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: SWITCH
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: WHILE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: DO
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: FOR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: FOREACH
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: YIELD
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: BREAK
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: GOTO
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: RETURN
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: THROW
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: TRY
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: LOCK
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: USING
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: SEALED
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: STATIC
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: READONLY
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: EXTERN
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: FIXED
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: CLASS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: DOUBLE_COLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: EOF
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 507, token: CASE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 509, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 509, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 509, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 509, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 509, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 509, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 509, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 509, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 509, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 509, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 509, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 509, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 509, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 509, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 509, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 509, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 509, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 509, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 509, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 509, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 509, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 509, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 509, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 509, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 509, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 509, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 509, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 509, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 509, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 509, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 509, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 509, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 509, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 509, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 509, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 509, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 509, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 509, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 509, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 509, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 509, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 509, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 509, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 509, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 509, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 509, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 509, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 509, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 509, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 509, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 509, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 509, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 509, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 509, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 509, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 509, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 509, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 509, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 509, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 521, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 521, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 521, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 521, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 521, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 702)
Conflict at state: 521, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 521, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 521, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 521, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 529, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 529, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 529, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 529, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 529, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 529, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 529, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 529, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 530, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 530, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 530, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 530, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 530, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 530, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 530, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 530, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 542, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 542, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 542, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 542, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 542, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 542, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 542, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 542, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 542, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 542, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 542, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 542, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 542, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 542, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 542, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 542, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 542, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 542, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 542, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 542, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 542, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 542, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 542, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 542, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 542, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 542, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 542, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 542, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 542, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 542, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 542, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 542, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 542, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 542, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 542, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 542, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 542, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 542, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 542, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 542, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 542, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 542, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 542, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 542, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 542, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 542, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 542, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 542, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 542, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 542, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 542, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 542, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 542, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 542, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 542, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 542, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 542, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 542, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 542, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 551, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 551, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 551, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 551, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 551, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 551, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 551, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 551, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 551, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 551, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 551, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 551, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 551, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 551, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 551, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 551, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 551, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 551, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 551, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 551, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 551, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 551, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 551, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 551, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 551, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 551, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 551, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 552, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 552, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 552, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 552, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 552, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 552, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 552, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 552, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 552, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 552, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 552, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 552, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 552, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 552, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 552, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 557, token: SEMICOLON
  reduce by rule: class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base class-body
  shift token (then go to state 723)
Conflict at state: 559, token: SEMICOLON
  reduce by rule: class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-body
  shift token (then go to state 724)
Conflict at state: 576, token: COLON
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: EXPLICIT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: IMPLICIT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: EVENT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: AUTO
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: VOID
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: STRING
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: OBJECT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: BOOL
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: DECIMAL
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: DOUBLE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: FLOAT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: CHAR
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: ULONG
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: LONG
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: UINT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: INT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: USHORT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: SHORT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: BYTE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: SBYTE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: IDENTIFIER
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: WHERE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: ASYNC
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: THIS
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: TYPE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: FIELD
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: MODULE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: PROPERTY
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: ASSEMBLY
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: PARAM
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: METHOD
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: DEFAULT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: PARAMS
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: SET
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: REMOVE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: ADD
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: TILDE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: CONST
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: DELEGATE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: ENUM
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: INTERFACE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: STRUCT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: NEW
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: EXTERN
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: OVERRIDE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: VIRTUAL
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: VOLATILE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: READONLY
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: STATIC
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: SEALED
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: ABSTRACT
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: PRIVATE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: INTERNAL
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: PROTECTED
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: PARTIAL
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: PUBLIC
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 576, token: UNSAFE
  reduce by rule: modifier -> PRIVATE
  reduce by rule: access-specifier -> PRIVATE
Conflict at state: 577, token: COLON
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: EXPLICIT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: IMPLICIT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: EVENT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: AUTO
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: VOID
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: STRING
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: OBJECT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: BOOL
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: DECIMAL
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: DOUBLE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: FLOAT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: CHAR
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: ULONG
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: LONG
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: UINT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: INT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: USHORT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: SHORT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: BYTE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: SBYTE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: IDENTIFIER
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: WHERE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: ASYNC
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: THIS
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: TYPE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: FIELD
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: MODULE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: PROPERTY
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: ASSEMBLY
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: PARAM
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: METHOD
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: DEFAULT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: PARAMS
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: SET
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: REMOVE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: ADD
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: TILDE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: CONST
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: DELEGATE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: ENUM
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: INTERFACE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: STRUCT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: NEW
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: EXTERN
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: OVERRIDE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: VIRTUAL
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: VOLATILE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: READONLY
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: STATIC
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: SEALED
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: ABSTRACT
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: PRIVATE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: INTERNAL
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: PROTECTED
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: PARTIAL
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: PUBLIC
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 577, token: UNSAFE
  reduce by rule: modifier -> PROTECTED
  reduce by rule: access-specifier -> PROTECTED
Conflict at state: 578, token: COLON
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: EXPLICIT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: IMPLICIT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: EVENT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: AUTO
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: VOID
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: STRING
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: OBJECT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: BOOL
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: DECIMAL
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: DOUBLE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: FLOAT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: CHAR
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: ULONG
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: LONG
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: UINT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: INT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: USHORT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: SHORT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: BYTE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: SBYTE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: IDENTIFIER
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: WHERE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: ASYNC
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: THIS
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: TYPE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: FIELD
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: MODULE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: PROPERTY
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: ASSEMBLY
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: PARAM
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: METHOD
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: DEFAULT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: PARAMS
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: SET
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: REMOVE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: ADD
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: TILDE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: CONST
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: DELEGATE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: ENUM
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: INTERFACE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: STRUCT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: NEW
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: EXTERN
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: OVERRIDE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: VIRTUAL
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: VOLATILE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: READONLY
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: STATIC
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: SEALED
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: ABSTRACT
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: PRIVATE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: INTERNAL
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: PROTECTED
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: PARTIAL
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: PUBLIC
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 578, token: UNSAFE
  reduce by rule: modifier -> PUBLIC
  reduce by rule: access-specifier -> PUBLIC
Conflict at state: 588, token: TILDE
  reduce by rule: modifier -> EXTERN
  shift token (then go to state 773)
Conflict at state: 594, token: TILDE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 211)
Conflict at state: 594, token: ADD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 28)
Conflict at state: 594, token: REMOVE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 29)
Conflict at state: 594, token: SET
  reduce by rule: type-with-interr -> type
  shift token (then go to state 30)
Conflict at state: 594, token: PARAMS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 31)
Conflict at state: 594, token: DEFAULT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 32)
Conflict at state: 594, token: METHOD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 33)
Conflict at state: 594, token: PARAM
  reduce by rule: type-with-interr -> type
  shift token (then go to state 34)
Conflict at state: 594, token: ASSEMBLY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 35)
Conflict at state: 594, token: PROPERTY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 36)
Conflict at state: 594, token: MODULE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 37)
Conflict at state: 594, token: FIELD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 38)
Conflict at state: 594, token: TYPE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 39)
Conflict at state: 594, token: THIS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 213)
Conflict at state: 594, token: ASYNC
  reduce by rule: type-with-interr -> type
  shift token (then go to state 187)
Conflict at state: 594, token: WHERE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 42)
Conflict at state: 594, token: IDENTIFIER
  reduce by rule: type-with-interr -> type
  shift token (then go to state 76)
Conflict at state: 595, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 775)
Conflict at state: 600, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: TILDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 600, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 612, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 612, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 612, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 612, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 612, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 612, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 612, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 612, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 612, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 612, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 612, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 612, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 612, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 612, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 612, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 612, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 612, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 612, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 612, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 211)
Conflict at state: 612, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 612, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 612, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 612, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 612, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 612, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 612, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 612, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 612, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 612, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 612, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 612, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 612, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 612, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 612, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 612, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 612, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 612, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 612, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 612, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 612, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 612, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 612, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 612, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 612, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 612, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 612, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 612, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 612, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 612, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 612, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 612, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 612, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 618, token: OPEN_BRACE
  reduce by rule: delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 255)
Conflict at state: 620, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 620, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 620, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 620, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 620, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 620, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 620, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 620, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 621, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 621, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 621, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 621, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 621, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 621, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 621, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 621, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 621, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 621, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 621, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 621, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 621, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 621, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 621, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 621, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 621, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 621, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 621, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 621, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 621, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 621, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 621, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 621, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 621, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 621, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 621, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 623, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 623, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 623, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 623, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 623, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 623, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 623, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 623, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 623, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 623, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 623, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 623, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 623, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 623, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 623, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 624, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 624, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 624, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 624, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 624, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 624, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 624, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 624, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 625, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 798)
Conflict at state: 625, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 625, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 625, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 625, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 628, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 628, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 628, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 628, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 628, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 802)
Conflict at state: 628, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 628, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 628, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 628, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 629, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 629, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 629, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 629, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 634, token: COLON
  reduce by rule: conditional-expression -> conditional-or-expression INTERR expression
  shift token (then go to state 806)
Conflict at state: 635, token: OP_AND
  reduce by rule: conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression
  shift token (then go to state 452)
Conflict at state: 637, token: BITWISE_OR
  reduce by rule: conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression
  shift token (then go to state 453)
Conflict at state: 638, token: CARET
  reduce by rule: inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression
  shift token (then go to state 454)
Conflict at state: 639, token: AMP
  reduce by rule: exclusive-or-expression -> exclusive-or-expression CARET and-expression
  shift token (then go to state 455)
Conflict at state: 640, token: OP_EQ
  reduce by rule: and-expression -> and-expression AMP equality-expression
  shift token (then go to state 456)
Conflict at state: 640, token: OP_NE
  reduce by rule: and-expression -> and-expression AMP equality-expression
  shift token (then go to state 457)
Conflict at state: 641, token: OP_COALESCING
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 462)
Conflict at state: 641, token: AS
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 464)
Conflict at state: 641, token: IS
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 463)
Conflict at state: 641, token: OP_GE
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 461)
Conflict at state: 641, token: OP_LE
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 460)
Conflict at state: 641, token: GT
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 459)
Conflict at state: 641, token: LT
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 458)
Conflict at state: 642, token: OP_COALESCING
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 462)
Conflict at state: 642, token: AS
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 464)
Conflict at state: 642, token: IS
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 463)
Conflict at state: 642, token: OP_GE
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 461)
Conflict at state: 642, token: OP_LE
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 460)
Conflict at state: 642, token: GT
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 459)
Conflict at state: 642, token: LT
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 458)
Conflict at state: 643, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression LT shift-expression
  shift token (then go to state 465)
Conflict at state: 643, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression LT shift-expression
  shift token (then go to state 466)
Conflict at state: 644, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression GT shift-expression
  shift token (then go to state 465)
Conflict at state: 644, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression GT shift-expression
  shift token (then go to state 466)
Conflict at state: 645, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_LE shift-expression
  shift token (then go to state 465)
Conflict at state: 645, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_LE shift-expression
  shift token (then go to state 466)
Conflict at state: 646, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_GE shift-expression
  shift token (then go to state 465)
Conflict at state: 646, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_GE shift-expression
  shift token (then go to state 466)
Conflict at state: 647, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_COALESCING shift-expression
  shift token (then go to state 465)
Conflict at state: 647, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_COALESCING shift-expression
  shift token (then go to state 466)
Conflict at state: 648, token: OPEN_BRACKET
  reduce by rule: relational-expression -> relational-expression IS type
  shift token (then go to state 221)
Conflict at state: 649, token: OPEN_BRACKET
  reduce by rule: relational-expression -> relational-expression AS type
  shift token (then go to state 221)
Conflict at state: 650, token: OP_COALESCING
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 469)
Conflict at state: 650, token: OP_PTR
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 468)
Conflict at state: 650, token: MINUS
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 470)
Conflict at state: 650, token: PLUS
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 467)
Conflict at state: 651, token: OP_COALESCING
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 469)
Conflict at state: 651, token: OP_PTR
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 468)
Conflict at state: 651, token: MINUS
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 470)
Conflict at state: 651, token: PLUS
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 467)
Conflict at state: 652, token: STAR
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 471)
Conflict at state: 652, token: DIV
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 472)
Conflict at state: 652, token: PERCENT
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 473)
Conflict at state: 653, token: STAR
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 471)
Conflict at state: 653, token: DIV
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 472)
Conflict at state: 653, token: PERCENT
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 473)
Conflict at state: 654, token: STAR
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 471)
Conflict at state: 654, token: DIV
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 472)
Conflict at state: 654, token: PERCENT
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 473)
Conflict at state: 655, token: STAR
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 471)
Conflict at state: 655, token: DIV
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 472)
Conflict at state: 655, token: PERCENT
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 473)
Conflict at state: 662, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 42)
Conflict at state: 662, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 187)
Conflict at state: 662, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 213)
Conflict at state: 662, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 39)
Conflict at state: 662, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 38)
Conflict at state: 662, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 37)
Conflict at state: 662, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 36)
Conflict at state: 662, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 35)
Conflict at state: 662, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 34)
Conflict at state: 662, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 33)
Conflict at state: 662, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 32)
Conflict at state: 662, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 31)
Conflict at state: 662, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 30)
Conflict at state: 662, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 29)
Conflict at state: 662, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 28)
Conflict at state: 662, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 76)
Conflict at state: 662, token: TILDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 211)
Conflict at state: 677, token: COMMA
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 677, token: CLOSE_BRACE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 677, token: OPEN_BRACKET
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 677, token: OPEN_BRACE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 677, token: SEMICOLON
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 678, token: COMMA
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 678, token: CLOSE_BRACE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 678, token: OPEN_BRACKET
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 678, token: OPEN_BRACE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 678, token: SEMICOLON
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 681, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 681, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 681, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 681, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 681, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 681, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 683, token: OPEN_PARENS
  reduce by rule: local-variable -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TILDE IDENTIFIER_WITH_KEYWORD
Conflict at state: 684, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 684, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 684, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 684, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 684, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 684, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 684, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 684, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 684, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 684, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 684, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 684, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 684, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 684, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 684, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 684, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 684, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 684, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 684, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 684, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 684, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 684, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 684, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 684, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 684, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 684, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 684, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 684, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 684, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 684, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 684, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 684, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 684, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 684, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 684, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 684, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 684, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 684, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 684, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 684, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 684, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 684, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 684, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 684, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 684, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 684, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 684, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 684, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 684, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 684, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 684, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 684, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 684, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 684, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 684, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 684, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 684, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 684, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 684, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 684, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 685, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 685, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 685, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 685, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 685, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 685, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 685, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 685, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 686, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 686, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 686, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 686, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 686, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 686, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 686, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 686, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 686, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 686, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 686, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 686, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 686, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 686, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 686, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 686, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 686, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 686, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 686, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 686, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 686, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 686, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 686, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 686, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 686, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 686, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 686, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 686, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 686, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 686, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 686, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 686, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 686, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 686, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 686, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 686, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 686, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 686, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 686, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 686, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 686, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 686, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 686, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 686, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 686, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 686, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 686, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 686, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 686, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 686, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 686, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 686, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 686, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 686, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 686, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 686, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 686, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 686, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 686, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 686, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 687, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 687, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 687, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 687, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 687, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 687, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 687, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 687, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 687, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 688, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 688, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 688, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 688, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 688, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 688, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 688, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 688, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 688, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 688, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 688, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 688, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 688, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 688, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 688, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 688, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 688, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 688, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 688, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 688, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 688, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 688, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 688, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 688, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 688, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 688, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 688, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 688, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 688, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 688, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 688, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 688, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 688, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 688, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 688, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 688, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 688, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 688, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 688, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 688, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 688, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 688, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 688, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 688, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 688, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 688, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 688, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 688, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 688, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 688, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 688, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 688, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 688, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 688, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 688, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 688, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 688, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 688, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 688, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 688, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 691, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: DIV
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: PERCENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_LEFT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: RIGHT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_EQ
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_NE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: CARET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_AND
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: BITWISE_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: AMP
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: AS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: IS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_GE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_LE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: GT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: LT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: CLOSE_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: DIV
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: PERCENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_LEFT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: RIGHT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_EQ
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_NE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: CARET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_AND
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: BITWISE_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: AS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: IS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_GE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: OP_LE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: GT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: LT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 691, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 692, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 692, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 692, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 692, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 692, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 692, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 692, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 692, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 692, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 692, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 692, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 692, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 692, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 692, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 692, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 692, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 692, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 692, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 692, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 692, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 692, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 692, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 692, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 692, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 692, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 692, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 692, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 692, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 692, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 692, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 692, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 692, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 692, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 692, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 692, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 692, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 692, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 692, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 692, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 692, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 692, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 692, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 692, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 692, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 692, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 692, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 692, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 692, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 692, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 692, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 692, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 692, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 692, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 692, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 692, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 692, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 692, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 692, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 692, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 708, token: ASSIGN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 842)
Conflict at state: 708, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 200)
Conflict at state: 714, token: CLASS
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OPEN_BRACKET
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: INTERR
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: DOUBLE_COLON
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OPEN_PARENS
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: FIXED
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: EXTERN
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OVERRIDE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: VIRTUAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: VOLATILE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: READONLY
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: STATIC
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: SEALED
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: ABSTRACT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: PRIVATE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: INTERNAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: PROTECTED
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: PARTIAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: PUBLIC
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: UNSAFE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: USING
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: LOCK
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: TRY
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: THROW
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: RETURN
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: GOTO
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: CONTINUE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: BREAK
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: YIELD
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: FOREACH
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: FOR
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: DO
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: WHILE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: SWITCH
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: IF
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: SEMICOLON
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: STAR
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: BANG
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: MINUS
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_COALESCING
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_PTR
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: PLUS
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_DEC
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_INC
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_XOR_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_OR_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_AND_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_MOD_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_DIV_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_MULT_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_SUB_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OP_ADD_ASSIGNMENT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: ASSIGN
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OPEN_BRACE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: CONST
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: UNCHECKED
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: CHECKED
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: SIZEOF
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: TYPEOF
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: NEW
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: BASE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: AUTO
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: VOID
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: STRING
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: OBJECT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: BOOL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: DECIMAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: DOUBLE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: FLOAT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: CHAR
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: ULONG
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: LONG
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: UINT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: INT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: USHORT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: SHORT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: BYTE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: SBYTE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: STACKALLOC
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: DELEGATE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: DOT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: AWAIT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: NULL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: CHARACTER_LITERAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: STRING_LITERAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: INTEGER_LITERAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: REAL_LITERAL
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: FALSE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: TRUE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: IDENTIFIER
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: WHERE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: ASYNC
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: THIS
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: TYPE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: FIELD
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: MODULE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: PROPERTY
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: ASSEMBLY
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: PARAM
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: METHOD
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: DEFAULT
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: PARAMS
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: SET
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: REMOVE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: ADD
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: TILDE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: COMMA
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: EOF
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: CLOSE_BRACE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 714, token: CASE
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 715, token: CLOSE_BRACE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: SEMICOLON
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OPEN_BRACE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: EOF
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: TILDE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: IDENTIFIER
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: ADD
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: REMOVE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: SET
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: PARAMS
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: DEFAULT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: METHOD
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: PARAM
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: ASSEMBLY
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: PROPERTY
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: MODULE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: FIELD
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: TYPE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: THIS
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: ASYNC
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: WHERE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: COMMA
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: ASSIGN
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: INTERR
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: STAR
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: TRUE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: FALSE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: REAL_LITERAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: INTEGER_LITERAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: STRING_LITERAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: CHARACTER_LITERAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: NULL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OPEN_PARENS
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: DOT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: AWAIT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: DELEGATE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: STACKALLOC
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: SBYTE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: BYTE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: SHORT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: USHORT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: INT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: UINT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: LONG
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: ULONG
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: CHAR
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: FLOAT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: DOUBLE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: DECIMAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: BOOL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OBJECT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: STRING
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: VOID
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: AUTO
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_PTR
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OPEN_BRACKET
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: BASE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_INC
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_DEC
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: NEW
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: TYPEOF
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: SIZEOF
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: CHECKED
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: UNCHECKED
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: CONST
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_ADD_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_SUB_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_MULT_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_DIV_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_MOD_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_AND_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_OR_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_XOR_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: PLUS
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OP_COALESCING
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: MINUS
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: BANG
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: IF
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: SWITCH
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: WHILE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: DO
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: FOR
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: FOREACH
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: YIELD
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: BREAK
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: CONTINUE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: GOTO
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: RETURN
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: THROW
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: TRY
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: LOCK
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: USING
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: UNSAFE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: PUBLIC
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: PARTIAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: PROTECTED
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: INTERNAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: PRIVATE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: ABSTRACT
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: SEALED
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: STATIC
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: READONLY
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: VOLATILE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: VIRTUAL
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: OVERRIDE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: EXTERN
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: FIXED
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: DOUBLE_COLON
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: CLASS
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 715, token: CASE
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 722, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 722, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 722, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 722, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 722, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 722, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 722, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 722, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 722, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 722, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 722, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 722, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 722, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 722, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 722, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 722, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 722, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 722, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 722, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 722, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 722, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 722, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 722, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 722, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 722, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 722, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 722, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 725, token: SEMICOLON
  reduce by rule: class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE IDENTIFIER_WITH_TEMPLATE class-base class-body
  shift token (then go to state 848)
Conflict at state: 737, token: TILDE
  reduce by rule: modifier -> EXTERN
  shift token (then go to state 869)
Conflict at state: 738, token: TILDE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 211)
Conflict at state: 738, token: ADD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 28)
Conflict at state: 738, token: REMOVE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 29)
Conflict at state: 738, token: SET
  reduce by rule: type-with-interr -> type
  shift token (then go to state 30)
Conflict at state: 738, token: PARAMS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 31)
Conflict at state: 738, token: DEFAULT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 32)
Conflict at state: 738, token: METHOD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 33)
Conflict at state: 738, token: PARAM
  reduce by rule: type-with-interr -> type
  shift token (then go to state 34)
Conflict at state: 738, token: ASSEMBLY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 35)
Conflict at state: 738, token: PROPERTY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 36)
Conflict at state: 738, token: MODULE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 37)
Conflict at state: 738, token: FIELD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 38)
Conflict at state: 738, token: TYPE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 39)
Conflict at state: 738, token: THIS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 213)
Conflict at state: 738, token: ASYNC
  reduce by rule: type-with-interr -> type
  shift token (then go to state 187)
Conflict at state: 738, token: WHERE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 42)
Conflict at state: 738, token: IDENTIFIER
  reduce by rule: type-with-interr -> type
  shift token (then go to state 76)
Conflict at state: 749, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 881)
Conflict at state: 750, token: TILDE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 211)
Conflict at state: 750, token: ADD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 28)
Conflict at state: 750, token: REMOVE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 29)
Conflict at state: 750, token: SET
  reduce by rule: type-with-interr -> type
  shift token (then go to state 30)
Conflict at state: 750, token: PARAMS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 31)
Conflict at state: 750, token: DEFAULT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 32)
Conflict at state: 750, token: METHOD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 33)
Conflict at state: 750, token: PARAM
  reduce by rule: type-with-interr -> type
  shift token (then go to state 34)
Conflict at state: 750, token: ASSEMBLY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 35)
Conflict at state: 750, token: PROPERTY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 36)
Conflict at state: 750, token: MODULE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 37)
Conflict at state: 750, token: FIELD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 38)
Conflict at state: 750, token: TYPE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 39)
Conflict at state: 750, token: THIS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 213)
Conflict at state: 750, token: ASYNC
  reduce by rule: type-with-interr -> type
  shift token (then go to state 187)
Conflict at state: 750, token: WHERE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 42)
Conflict at state: 750, token: IDENTIFIER
  reduce by rule: type-with-interr -> type
  shift token (then go to state 76)
Conflict at state: 763, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 892)
Conflict at state: 772, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 905)
Conflict at state: 774, token: TILDE
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 211)
Conflict at state: 774, token: ADD
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 28)
Conflict at state: 774, token: REMOVE
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 29)
Conflict at state: 774, token: SET
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 30)
Conflict at state: 774, token: PARAMS
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 31)
Conflict at state: 774, token: DEFAULT
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 32)
Conflict at state: 774, token: METHOD
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 33)
Conflict at state: 774, token: PARAM
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 34)
Conflict at state: 774, token: ASSEMBLY
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 35)
Conflict at state: 774, token: PROPERTY
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 36)
Conflict at state: 774, token: MODULE
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 37)
Conflict at state: 774, token: FIELD
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 38)
Conflict at state: 774, token: TYPE
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 39)
Conflict at state: 774, token: THIS
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 213)
Conflict at state: 774, token: ASYNC
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 187)
Conflict at state: 774, token: WHERE
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 42)
Conflict at state: 774, token: IDENTIFIER
  reduce by rule: type-with-interr -> type INTERR
  shift token (then go to state 76)
Conflict at state: 785, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 785, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 785, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 785, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 785, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 785, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 785, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 785, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 785, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 785, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 785, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 785, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 785, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 785, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 785, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 785, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 785, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 785, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 211)
Conflict at state: 785, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 785, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 785, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 785, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 785, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 785, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 785, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 785, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 785, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 785, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 785, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 785, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 785, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 785, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 785, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 785, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 785, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 785, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 785, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 785, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 785, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 785, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 785, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 785, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 785, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 785, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 785, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 785, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 785, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 785, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 785, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 785, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 785, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 786, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 228)
Conflict at state: 786, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 925)
Conflict at state: 786, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 786, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 228)
Conflict at state: 786, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 925)
Conflict at state: 786, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 786, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 786, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 788, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
  shift token (then go to state 255)
Conflict at state: 789, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
  shift token (then go to state 255)
Conflict at state: 790, token: OPEN_BRACE
  reduce by rule: delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS
  shift token (then go to state 255)
Conflict at state: 793, token: ELSE
  reduce by rule: if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
  shift token (then go to state 929)
Conflict at state: 798, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 798, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 798, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 798, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 798, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 798, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 798, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 798, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 798, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 798, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 798, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 798, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 798, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 798, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 798, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 798, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 798, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 798, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 798, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 798, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 798, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 798, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 798, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 798, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 798, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 798, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 798, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 801, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 937)
Conflict at state: 801, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 801, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 801, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 801, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 802, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 939)
Conflict at state: 802, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 802, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 802, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 802, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 805, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 805, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 805, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 805, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 805, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 805, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 805, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 805, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 806, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 806, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 806, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 806, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 806, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 806, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 806, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 806, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 806, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 806, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 806, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 806, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 806, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 806, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 806, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 806, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 806, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 806, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 806, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 806, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 806, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 806, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 806, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 806, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 187)
Conflict at state: 806, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 806, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 806, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 806, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 806, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 806, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 806, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 806, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 806, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 806, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 806, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 806, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 806, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 806, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 806, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 806, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 806, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 806, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 806, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 806, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 806, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 806, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 806, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 806, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 806, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 806, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 806, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 806, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 806, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 806, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 197)
Conflict at state: 806, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 806, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 806, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 198)
Conflict at state: 806, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 199)
Conflict at state: 806, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 813, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 813, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 813, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 813, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 813, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 813, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 813, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 813, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 821, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 821, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 821, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 821, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 821, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 951)
Conflict at state: 821, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 821, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 821, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 821, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 822, token: OPEN_BRACE
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
  shift token (then go to state 494)
Conflict at state: 822, token: OPEN_BRACKET
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
  shift token (then go to state 221)
Conflict at state: 824, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 824, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 824, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 824, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 824, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 954)
Conflict at state: 824, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 824, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 824, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 824, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 825, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 825, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 825, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 825, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 825, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 825, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 826, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 826, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 826, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 826, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 826, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 826, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 835, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 835, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 835, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 835, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 835, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 835, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 835, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 835, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 836, token: OPEN_BRACE
  reduce by rule: cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
  shift token (then go to state 46)
Conflict at state: 839, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 839, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 839, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 839, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 839, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 839, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 839, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 839, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 842, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 842, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 842, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 842, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 842, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 842, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 842, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 842, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 845, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 845, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 845, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 845, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 845, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 845, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 845, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 845, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 845, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 845, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 845, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 845, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 845, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 845, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 845, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 845, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 845, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 845, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 845, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 845, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 845, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 845, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 845, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 845, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 845, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 845, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 845, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 858, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 974)
Conflict at state: 859, token: TILDE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 211)
Conflict at state: 859, token: ADD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 28)
Conflict at state: 859, token: REMOVE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 29)
Conflict at state: 859, token: SET
  reduce by rule: type-with-interr -> type
  shift token (then go to state 30)
Conflict at state: 859, token: PARAMS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 31)
Conflict at state: 859, token: DEFAULT
  reduce by rule: type-with-interr -> type
  shift token (then go to state 32)
Conflict at state: 859, token: METHOD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 33)
Conflict at state: 859, token: PARAM
  reduce by rule: type-with-interr -> type
  shift token (then go to state 34)
Conflict at state: 859, token: ASSEMBLY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 35)
Conflict at state: 859, token: PROPERTY
  reduce by rule: type-with-interr -> type
  shift token (then go to state 36)
Conflict at state: 859, token: MODULE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 37)
Conflict at state: 859, token: FIELD
  reduce by rule: type-with-interr -> type
  shift token (then go to state 38)
Conflict at state: 859, token: TYPE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 39)
Conflict at state: 859, token: THIS
  reduce by rule: type-with-interr -> type
  shift token (then go to state 213)
Conflict at state: 859, token: ASYNC
  reduce by rule: type-with-interr -> type
  shift token (then go to state 187)
Conflict at state: 859, token: WHERE
  reduce by rule: type-with-interr -> type
  shift token (then go to state 42)
Conflict at state: 859, token: IDENTIFIER
  reduce by rule: type-with-interr -> type
  shift token (then go to state 76)
Conflict at state: 868, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 984)
Conflict at state: 894, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 894, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 894, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 894, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 894, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 494)
Conflict at state: 894, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 894, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 894, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 894, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 923, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 228)
Conflict at state: 923, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 925)
Conflict at state: 923, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 923, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 228)
Conflict at state: 923, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 925)
Conflict at state: 923, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 923, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 923, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 924, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
  shift token (then go to state 255)
Conflict at state: 925, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 929, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 929, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 929, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 929, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 929, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 929, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 929, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 929, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 929, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 929, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 929, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 929, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 929, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 929, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 929, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 929, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 929, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 929, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 929, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 929, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 929, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 929, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 929, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 929, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 929, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 929, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 929, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 933, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 933, token: CASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 352)
Conflict at state: 933, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 353)
Conflict at state: 933, token: INTERR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 933, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 933, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 933, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 933, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 933, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 933, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 933, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 933, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 933, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 933, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 933, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 933, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 933, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 933, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 933, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 933, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 933, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 933, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 933, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 933, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 933, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 933, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 933, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 933, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 933, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 933, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 933, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 933, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 933, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 933, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 933, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 933, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 933, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 933, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 933, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 933, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 933, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 933, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 933, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 933, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 933, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 933, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 933, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 933, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 933, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 933, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 933, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 933, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 933, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 933, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 933, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 933, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 933, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 933, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 933, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 933, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 933, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 933, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 933, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 933, token: IF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 933, token: SWITCH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 933, token: WHILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 933, token: DO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 933, token: FOR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 90)
Conflict at state: 933, token: FOREACH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 91)
Conflict at state: 933, token: YIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 92)
Conflict at state: 933, token: BREAK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 933, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 933, token: GOTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 933, token: RETURN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 933, token: THROW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 933, token: TRY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 933, token: LOCK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 933, token: USING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 933, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 933, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 933, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 933, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 933, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 933, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 933, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 933, token: SEALED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 933, token: STATIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 933, token: READONLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 933, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 933, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 933, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 933, token: EXTERN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 933, token: FIXED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 933, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 933, token: CLASS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 933, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 933, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 933, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: CLOSE_BRACE
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: CASE
  reduce by rule: local-variable -> 
  shift token (then go to state 352)
Conflict at state: 933, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 353)
Conflict at state: 933, token: COMMA
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 169)
Conflict at state: 933, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 142)
Conflict at state: 933, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 26)
Conflict at state: 933, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 28)
Conflict at state: 933, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 29)
Conflict at state: 933, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 30)
Conflict at state: 933, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 31)
Conflict at state: 933, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 33)
Conflict at state: 933, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 34)
Conflict at state: 933, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 35)
Conflict at state: 933, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 36)
Conflict at state: 933, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 37)
Conflict at state: 933, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 38)
Conflict at state: 933, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 39)
Conflict at state: 933, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 40)
Conflict at state: 933, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 41)
Conflict at state: 933, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 42)
Conflict at state: 933, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 76)
Conflict at state: 933, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 933, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 933, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 933, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 933, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: TRUE
  reduce by rule: local-variable -> 
  shift token (then go to state 172)
Conflict at state: 933, token: FALSE
  reduce by rule: local-variable -> 
  shift token (then go to state 173)
Conflict at state: 933, token: REAL_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 159)
Conflict at state: 933, token: INTEGER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 160)
Conflict at state: 933, token: STRING_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 161)
Conflict at state: 933, token: CHARACTER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 162)
Conflict at state: 933, token: NULL
  reduce by rule: local-variable -> 
  shift token (then go to state 163)
Conflict at state: 933, token: AWAIT
  reduce by rule: local-variable -> 
  shift token (then go to state 136)
Conflict at state: 933, token: DELEGATE
  reduce by rule: local-variable -> 
  shift token (then go to state 115)
Conflict at state: 933, token: STACKALLOC
  reduce by rule: local-variable -> 
  shift token (then go to state 117)
Conflict at state: 933, token: SBYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 119)
Conflict at state: 933, token: BYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 120)
Conflict at state: 933, token: SHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 121)
Conflict at state: 933, token: USHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 122)
Conflict at state: 933, token: INT
  reduce by rule: local-variable -> 
  shift token (then go to state 123)
Conflict at state: 933, token: UINT
  reduce by rule: local-variable -> 
  shift token (then go to state 124)
Conflict at state: 933, token: LONG
  reduce by rule: local-variable -> 
  shift token (then go to state 125)
Conflict at state: 933, token: ULONG
  reduce by rule: local-variable -> 
  shift token (then go to state 126)
Conflict at state: 933, token: CHAR
  reduce by rule: local-variable -> 
  shift token (then go to state 127)
Conflict at state: 933, token: FLOAT
  reduce by rule: local-variable -> 
  shift token (then go to state 128)
Conflict at state: 933, token: DOUBLE
  reduce by rule: local-variable -> 
  shift token (then go to state 129)
Conflict at state: 933, token: DECIMAL
  reduce by rule: local-variable -> 
  shift token (then go to state 130)
Conflict at state: 933, token: BOOL
  reduce by rule: local-variable -> 
  shift token (then go to state 131)
Conflict at state: 933, token: OBJECT
  reduce by rule: local-variable -> 
  shift token (then go to state 132)
Conflict at state: 933, token: STRING
  reduce by rule: local-variable -> 
  shift token (then go to state 133)
Conflict at state: 933, token: VOID
  reduce by rule: local-variable -> 
  shift token (then go to state 134)
Conflict at state: 933, token: AUTO
  reduce by rule: local-variable -> 
  shift token (then go to state 135)
Conflict at state: 933, token: BASE
  reduce by rule: local-variable -> 
  shift token (then go to state 165)
Conflict at state: 933, token: NEW
  reduce by rule: local-variable -> 
  shift token (then go to state 82)
Conflict at state: 933, token: TYPEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 166)
Conflict at state: 933, token: SIZEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 167)
Conflict at state: 933, token: CHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 67)
Conflict at state: 933, token: UNCHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 68)
Conflict at state: 933, token: CONST
  reduce by rule: local-variable -> 
  shift token (then go to state 45)
Conflict at state: 933, token: PLUS
  reduce by rule: local-variable -> 
  shift token (then go to state 137)
Conflict at state: 933, token: OP_COALESCING
  reduce by rule: local-variable -> 
  shift token (then go to state 139)
Conflict at state: 933, token: MINUS
  reduce by rule: local-variable -> 
  shift token (then go to state 140)
Conflict at state: 933, token: BANG
  reduce by rule: local-variable -> 
  shift token (then go to state 141)
Conflict at state: 933, token: IF
  reduce by rule: local-variable -> 
  shift token (then go to state 86)
Conflict at state: 933, token: SWITCH
  reduce by rule: local-variable -> 
  shift token (then go to state 87)
Conflict at state: 933, token: WHILE
  reduce by rule: local-variable -> 
  shift token (then go to state 88)
Conflict at state: 933, token: DO
  reduce by rule: local-variable -> 
  shift token (then go to state 89)
Conflict at state: 933, token: FOR
  reduce by rule: local-variable -> 
  shift token (then go to state 90)
Conflict at state: 933, token: FOREACH
  reduce by rule: local-variable -> 
  shift token (then go to state 91)
Conflict at state: 933, token: YIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 92)
Conflict at state: 933, token: BREAK
  reduce by rule: local-variable -> 
  shift token (then go to state 93)
Conflict at state: 933, token: CONTINUE
  reduce by rule: local-variable -> 
  shift token (then go to state 94)
Conflict at state: 933, token: GOTO
  reduce by rule: local-variable -> 
  shift token (then go to state 95)
Conflict at state: 933, token: RETURN
  reduce by rule: local-variable -> 
  shift token (then go to state 96)
Conflict at state: 933, token: THROW
  reduce by rule: local-variable -> 
  shift token (then go to state 97)
Conflict at state: 933, token: TRY
  reduce by rule: local-variable -> 
  shift token (then go to state 66)
Conflict at state: 933, token: LOCK
  reduce by rule: local-variable -> 
  shift token (then go to state 69)
Conflict at state: 933, token: USING
  reduce by rule: local-variable -> 
  shift token (then go to state 70)
Conflict at state: 933, token: UNSAFE
  reduce by rule: local-variable -> 
  shift token (then go to state 71)
Conflict at state: 933, token: PUBLIC
  reduce by rule: local-variable -> 
  shift token (then go to state 143)
Conflict at state: 933, token: PARTIAL
  reduce by rule: local-variable -> 
  shift token (then go to state 144)
Conflict at state: 933, token: PROTECTED
  reduce by rule: local-variable -> 
  shift token (then go to state 145)
Conflict at state: 933, token: INTERNAL
  reduce by rule: local-variable -> 
  shift token (then go to state 146)
Conflict at state: 933, token: PRIVATE
  reduce by rule: local-variable -> 
  shift token (then go to state 147)
Conflict at state: 933, token: ABSTRACT
  reduce by rule: local-variable -> 
  shift token (then go to state 148)
Conflict at state: 933, token: SEALED
  reduce by rule: local-variable -> 
  shift token (then go to state 149)
Conflict at state: 933, token: STATIC
  reduce by rule: local-variable -> 
  shift token (then go to state 150)
Conflict at state: 933, token: READONLY
  reduce by rule: local-variable -> 
  shift token (then go to state 151)
Conflict at state: 933, token: VOLATILE
  reduce by rule: local-variable -> 
  shift token (then go to state 152)
Conflict at state: 933, token: VIRTUAL
  reduce by rule: local-variable -> 
  shift token (then go to state 153)
Conflict at state: 933, token: OVERRIDE
  reduce by rule: local-variable -> 
  shift token (then go to state 154)
Conflict at state: 933, token: EXTERN
  reduce by rule: local-variable -> 
  shift token (then go to state 155)
Conflict at state: 933, token: FIXED
  reduce by rule: local-variable -> 
  shift token (then go to state 73)
Conflict at state: 933, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 933, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 933, token: CLASS
  reduce by rule: local-variable -> 
  shift token (then go to state 75)
Conflict at state: 936, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 936, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 936, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 936, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 936, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 936, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 936, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 936, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 936, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 936, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 936, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 936, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 936, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 936, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 936, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 936, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 936, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 936, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 936, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 936, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 936, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 936, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 936, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 936, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 936, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 936, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 936, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 937, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 937, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 937, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 937, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 937, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 937, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 937, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 937, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 937, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 937, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 937, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 937, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 937, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 937, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 937, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 939, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 939, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 939, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 939, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 939, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 939, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 939, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 939, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 939, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 939, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 939, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 939, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 939, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 939, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 939, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 941, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1090)
Conflict at state: 941, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 941, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 941, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 941, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 952, token: OPEN_BRACE
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
  shift token (then go to state 494)
Conflict at state: 952, token: OPEN_BRACKET
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
  shift token (then go to state 221)
Conflict at state: 1001, token: OPEN_PARENS
  reduce by rule: overloadable-binary-operator -> MINUS
  reduce by rule: overloadable-unary-operator -> MINUS
Conflict at state: 1004, token: OPEN_PARENS
  reduce by rule: overloadable-binary-operator -> PLUS
  reduce by rule: overloadable-unary-operator -> PLUS
Conflict at state: 1024, token: OPEN_BRACE
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 46)
Conflict at state: 1024, token: SEMICOLON
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 771)
Conflict at state: 1077, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
  shift token (then go to state 255)
Conflict at state: 1079, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: DOUBLE_COLON
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1079, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1083, token: DEFAULT
  reduce by rule: switch-section -> switch-labels statement-list
  shift token (then go to state 32)
Conflict at state: 1083, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 1083, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 1083, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: switch-section -> switch-labels statement-list
Conflict at state: 1083, token: CASE
  reduce by rule: invocation-expressions -> 
  reduce by rule: switch-section -> switch-labels statement-list
Conflict at state: 1083, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 32)
Conflict at state: 1083, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 26)
Conflict at state: 1083, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1083, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 28)
Conflict at state: 1083, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 29)
Conflict at state: 1083, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 30)
Conflict at state: 1083, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 31)
Conflict at state: 1083, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 33)
Conflict at state: 1083, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 34)
Conflict at state: 1083, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 35)
Conflict at state: 1083, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 36)
Conflict at state: 1083, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 37)
Conflict at state: 1083, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 38)
Conflict at state: 1083, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 39)
Conflict at state: 1083, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 40)
Conflict at state: 1083, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 41)
Conflict at state: 1083, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 42)
Conflict at state: 1083, token: INTERR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 169)
Conflict at state: 1083, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 142)
Conflict at state: 1083, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 172)
Conflict at state: 1083, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 173)
Conflict at state: 1083, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 159)
Conflict at state: 1083, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 160)
Conflict at state: 1083, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 161)
Conflict at state: 1083, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 162)
Conflict at state: 1083, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 163)
Conflict at state: 1083, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 1083, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 136)
Conflict at state: 1083, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 115)
Conflict at state: 1083, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 117)
Conflict at state: 1083, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 1083, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 1083, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 1083, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 1083, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 1083, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 1083, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 1083, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 1083, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 1083, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 1083, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 1083, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 1083, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 1083, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 1083, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 1083, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 134)
Conflict at state: 1083, token: AUTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 135)
Conflict at state: 1083, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 1083, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 1083, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 165)
Conflict at state: 1083, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1083, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1083, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 82)
Conflict at state: 1083, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 166)
Conflict at state: 1083, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 167)
Conflict at state: 1083, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 1083, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 1083, token: CONST
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 45)
Conflict at state: 1083, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 1083, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 1083, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 1083, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 141)
Conflict at state: 1083, token: IF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 86)
Conflict at state: 1083, token: SWITCH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 87)
Conflict at state: 1083, token: WHILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 88)
Conflict at state: 1083, token: DO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 89)
Conflict at state: 1083, token: FOR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 90)
Conflict at state: 1083, token: FOREACH
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 91)
Conflict at state: 1083, token: YIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 92)
Conflict at state: 1083, token: BREAK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 93)
Conflict at state: 1083, token: CONTINUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 94)
Conflict at state: 1083, token: GOTO
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 95)
Conflict at state: 1083, token: RETURN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 96)
Conflict at state: 1083, token: THROW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 97)
Conflict at state: 1083, token: TRY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 1083, token: LOCK
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 1083, token: USING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1083, token: UNSAFE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 1083, token: PUBLIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 143)
Conflict at state: 1083, token: PARTIAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 144)
Conflict at state: 1083, token: PROTECTED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 145)
Conflict at state: 1083, token: INTERNAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 146)
Conflict at state: 1083, token: PRIVATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 147)
Conflict at state: 1083, token: ABSTRACT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 148)
Conflict at state: 1083, token: SEALED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 149)
Conflict at state: 1083, token: STATIC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 150)
Conflict at state: 1083, token: READONLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 151)
Conflict at state: 1083, token: VOLATILE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 152)
Conflict at state: 1083, token: VIRTUAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 153)
Conflict at state: 1083, token: OVERRIDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 154)
Conflict at state: 1083, token: EXTERN
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 155)
Conflict at state: 1083, token: FIXED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1083, token: CLASS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 1083, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 1083, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 1083, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: CLOSE_BRACE
  reduce by rule: local-variable -> 
  reduce by rule: switch-section -> switch-labels statement-list
Conflict at state: 1083, token: CASE
  reduce by rule: local-variable -> 
  reduce by rule: switch-section -> switch-labels statement-list
Conflict at state: 1083, token: DEFAULT
  reduce by rule: local-variable -> 
  shift token (then go to state 32)
Conflict at state: 1083, token: TILDE
  reduce by rule: local-variable -> 
  shift token (then go to state 26)
Conflict at state: 1083, token: IDENTIFIER
  reduce by rule: local-variable -> 
  shift token (then go to state 76)
Conflict at state: 1083, token: ADD
  reduce by rule: local-variable -> 
  shift token (then go to state 28)
Conflict at state: 1083, token: REMOVE
  reduce by rule: local-variable -> 
  shift token (then go to state 29)
Conflict at state: 1083, token: SET
  reduce by rule: local-variable -> 
  shift token (then go to state 30)
Conflict at state: 1083, token: PARAMS
  reduce by rule: local-variable -> 
  shift token (then go to state 31)
Conflict at state: 1083, token: METHOD
  reduce by rule: local-variable -> 
  shift token (then go to state 33)
Conflict at state: 1083, token: PARAM
  reduce by rule: local-variable -> 
  shift token (then go to state 34)
Conflict at state: 1083, token: ASSEMBLY
  reduce by rule: local-variable -> 
  shift token (then go to state 35)
Conflict at state: 1083, token: PROPERTY
  reduce by rule: local-variable -> 
  shift token (then go to state 36)
Conflict at state: 1083, token: MODULE
  reduce by rule: local-variable -> 
  shift token (then go to state 37)
Conflict at state: 1083, token: FIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 38)
Conflict at state: 1083, token: TYPE
  reduce by rule: local-variable -> 
  shift token (then go to state 39)
Conflict at state: 1083, token: THIS
  reduce by rule: local-variable -> 
  shift token (then go to state 40)
Conflict at state: 1083, token: ASYNC
  reduce by rule: local-variable -> 
  shift token (then go to state 41)
Conflict at state: 1083, token: WHERE
  reduce by rule: local-variable -> 
  shift token (then go to state 42)
Conflict at state: 1083, token: COMMA
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: INTERR
  reduce by rule: local-variable -> 
  shift token (then go to state 169)
Conflict at state: 1083, token: STAR
  reduce by rule: local-variable -> 
  shift token (then go to state 142)
Conflict at state: 1083, token: TRUE
  reduce by rule: local-variable -> 
  shift token (then go to state 172)
Conflict at state: 1083, token: FALSE
  reduce by rule: local-variable -> 
  shift token (then go to state 173)
Conflict at state: 1083, token: REAL_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 159)
Conflict at state: 1083, token: INTEGER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 160)
Conflict at state: 1083, token: STRING_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 161)
Conflict at state: 1083, token: CHARACTER_LITERAL
  reduce by rule: local-variable -> 
  shift token (then go to state 162)
Conflict at state: 1083, token: NULL
  reduce by rule: local-variable -> 
  shift token (then go to state 163)
Conflict at state: 1083, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 1083, token: AWAIT
  reduce by rule: local-variable -> 
  shift token (then go to state 136)
Conflict at state: 1083, token: DELEGATE
  reduce by rule: local-variable -> 
  shift token (then go to state 115)
Conflict at state: 1083, token: STACKALLOC
  reduce by rule: local-variable -> 
  shift token (then go to state 117)
Conflict at state: 1083, token: SBYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 119)
Conflict at state: 1083, token: BYTE
  reduce by rule: local-variable -> 
  shift token (then go to state 120)
Conflict at state: 1083, token: SHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 121)
Conflict at state: 1083, token: USHORT
  reduce by rule: local-variable -> 
  shift token (then go to state 122)
Conflict at state: 1083, token: INT
  reduce by rule: local-variable -> 
  shift token (then go to state 123)
Conflict at state: 1083, token: UINT
  reduce by rule: local-variable -> 
  shift token (then go to state 124)
Conflict at state: 1083, token: LONG
  reduce by rule: local-variable -> 
  shift token (then go to state 125)
Conflict at state: 1083, token: ULONG
  reduce by rule: local-variable -> 
  shift token (then go to state 126)
Conflict at state: 1083, token: CHAR
  reduce by rule: local-variable -> 
  shift token (then go to state 127)
Conflict at state: 1083, token: FLOAT
  reduce by rule: local-variable -> 
  shift token (then go to state 128)
Conflict at state: 1083, token: DOUBLE
  reduce by rule: local-variable -> 
  shift token (then go to state 129)
Conflict at state: 1083, token: DECIMAL
  reduce by rule: local-variable -> 
  shift token (then go to state 130)
Conflict at state: 1083, token: BOOL
  reduce by rule: local-variable -> 
  shift token (then go to state 131)
Conflict at state: 1083, token: OBJECT
  reduce by rule: local-variable -> 
  shift token (then go to state 132)
Conflict at state: 1083, token: STRING
  reduce by rule: local-variable -> 
  shift token (then go to state 133)
Conflict at state: 1083, token: VOID
  reduce by rule: local-variable -> 
  shift token (then go to state 134)
Conflict at state: 1083, token: AUTO
  reduce by rule: local-variable -> 
  shift token (then go to state 135)
Conflict at state: 1083, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 1083, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 1083, token: BASE
  reduce by rule: local-variable -> 
  shift token (then go to state 165)
Conflict at state: 1083, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 1083, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 1083, token: NEW
  reduce by rule: local-variable -> 
  shift token (then go to state 82)
Conflict at state: 1083, token: TYPEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 166)
Conflict at state: 1083, token: SIZEOF
  reduce by rule: local-variable -> 
  shift token (then go to state 167)
Conflict at state: 1083, token: CHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 67)
Conflict at state: 1083, token: UNCHECKED
  reduce by rule: local-variable -> 
  shift token (then go to state 68)
Conflict at state: 1083, token: CONST
  reduce by rule: local-variable -> 
  shift token (then go to state 45)
Conflict at state: 1083, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: PLUS
  reduce by rule: local-variable -> 
  shift token (then go to state 137)
Conflict at state: 1083, token: OP_COALESCING
  reduce by rule: local-variable -> 
  shift token (then go to state 139)
Conflict at state: 1083, token: MINUS
  reduce by rule: local-variable -> 
  shift token (then go to state 140)
Conflict at state: 1083, token: BANG
  reduce by rule: local-variable -> 
  shift token (then go to state 141)
Conflict at state: 1083, token: IF
  reduce by rule: local-variable -> 
  shift token (then go to state 86)
Conflict at state: 1083, token: SWITCH
  reduce by rule: local-variable -> 
  shift token (then go to state 87)
Conflict at state: 1083, token: WHILE
  reduce by rule: local-variable -> 
  shift token (then go to state 88)
Conflict at state: 1083, token: DO
  reduce by rule: local-variable -> 
  shift token (then go to state 89)
Conflict at state: 1083, token: FOR
  reduce by rule: local-variable -> 
  shift token (then go to state 90)
Conflict at state: 1083, token: FOREACH
  reduce by rule: local-variable -> 
  shift token (then go to state 91)
Conflict at state: 1083, token: YIELD
  reduce by rule: local-variable -> 
  shift token (then go to state 92)
Conflict at state: 1083, token: BREAK
  reduce by rule: local-variable -> 
  shift token (then go to state 93)
Conflict at state: 1083, token: CONTINUE
  reduce by rule: local-variable -> 
  shift token (then go to state 94)
Conflict at state: 1083, token: GOTO
  reduce by rule: local-variable -> 
  shift token (then go to state 95)
Conflict at state: 1083, token: RETURN
  reduce by rule: local-variable -> 
  shift token (then go to state 96)
Conflict at state: 1083, token: THROW
  reduce by rule: local-variable -> 
  shift token (then go to state 97)
Conflict at state: 1083, token: TRY
  reduce by rule: local-variable -> 
  shift token (then go to state 66)
Conflict at state: 1083, token: LOCK
  reduce by rule: local-variable -> 
  shift token (then go to state 69)
Conflict at state: 1083, token: USING
  reduce by rule: local-variable -> 
  shift token (then go to state 70)
Conflict at state: 1083, token: UNSAFE
  reduce by rule: local-variable -> 
  shift token (then go to state 71)
Conflict at state: 1083, token: PUBLIC
  reduce by rule: local-variable -> 
  shift token (then go to state 143)
Conflict at state: 1083, token: PARTIAL
  reduce by rule: local-variable -> 
  shift token (then go to state 144)
Conflict at state: 1083, token: PROTECTED
  reduce by rule: local-variable -> 
  shift token (then go to state 145)
Conflict at state: 1083, token: INTERNAL
  reduce by rule: local-variable -> 
  shift token (then go to state 146)
Conflict at state: 1083, token: PRIVATE
  reduce by rule: local-variable -> 
  shift token (then go to state 147)
Conflict at state: 1083, token: ABSTRACT
  reduce by rule: local-variable -> 
  shift token (then go to state 148)
Conflict at state: 1083, token: SEALED
  reduce by rule: local-variable -> 
  shift token (then go to state 149)
Conflict at state: 1083, token: STATIC
  reduce by rule: local-variable -> 
  shift token (then go to state 150)
Conflict at state: 1083, token: READONLY
  reduce by rule: local-variable -> 
  shift token (then go to state 151)
Conflict at state: 1083, token: VOLATILE
  reduce by rule: local-variable -> 
  shift token (then go to state 152)
Conflict at state: 1083, token: VIRTUAL
  reduce by rule: local-variable -> 
  shift token (then go to state 153)
Conflict at state: 1083, token: OVERRIDE
  reduce by rule: local-variable -> 
  shift token (then go to state 154)
Conflict at state: 1083, token: EXTERN
  reduce by rule: local-variable -> 
  shift token (then go to state 155)
Conflict at state: 1083, token: FIXED
  reduce by rule: local-variable -> 
  shift token (then go to state 73)
Conflict at state: 1083, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1083, token: CLASS
  reduce by rule: local-variable -> 
  shift token (then go to state 75)
Conflict at state: 1087, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 1087, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 1087, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1087, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1087, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 1087, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 1087, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 1087, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 1087, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 1087, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1087, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 1087, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 1087, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 1087, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1087, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1087, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1087, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1087, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1087, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1087, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1087, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1087, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1087, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1087, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1087, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 1087, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 1087, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 1089, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 1089, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1089, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1089, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 1089, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 1089, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 1089, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 1089, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 1089, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 1089, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 1089, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 1089, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1089, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 1089, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 1089, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 1090, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 1090, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1090, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1090, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 1090, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 1090, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 1090, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 1090, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 1090, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 1090, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 1090, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 1090, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1090, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 1090, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 1090, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 1092, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 1092, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1092, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1092, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 1092, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 1092, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 1092, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 1092, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 1092, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 1092, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 1092, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 1092, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1092, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 1092, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 1092, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1094, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 1094, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1094, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1094, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 1094, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1208)
Conflict at state: 1094, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 1094, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 1094, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 1094, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 1107, token: OPEN_BRACE
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 46)
Conflict at state: 1107, token: SEMICOLON
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 771)
Conflict at state: 1198, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 1198, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1198, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1198, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 1198, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 1198, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 1198, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 1198, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 1206, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 47)
Conflict at state: 1206, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 46)
Conflict at state: 1206, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1206, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1206, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 1206, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 1206, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 174)
Conflict at state: 1206, token: SEMICOLON
  reduce by rule: local-variable -> 
  shift token (then go to state 47)
Conflict at state: 1206, token: OPEN_BRACE
  reduce by rule: local-variable -> 
  shift token (then go to state 46)
Conflict at state: 1206, token: DOT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1206, token: OP_INC
  reduce by rule: local-variable -> 
  shift token (then go to state 84)
Conflict at state: 1206, token: OP_DEC
  reduce by rule: local-variable -> 
  shift token (then go to state 85)
Conflict at state: 1206, token: OPEN_PARENS
  reduce by rule: local-variable -> 
  shift token (then go to state 164)
Conflict at state: 1206, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1206, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1206, token: OP_XOR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1206, token: OP_OR_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1206, token: OP_AND_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1206, token: OP_MOD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1206, token: OP_DIV_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1206, token: OP_MULT_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1206, token: OP_SUB_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1206, token: OP_ADD_ASSIGNMENT
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1206, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1206, token: OP_PTR
  reduce by rule: local-variable -> 
  shift token (then go to state 138)
Conflict at state: 1206, token: OPEN_BRACKET
  reduce by rule: local-variable -> 
  shift token (then go to state 174)
Conflict at state: 1206, token: DOUBLE_COLON
  reduce by rule: local-variable -> 
  reduce by rule: invocation-expressions -> 
Conflict at state: 1257, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 1257, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1257, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1257, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 1257, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1307)
Conflict at state: 1257, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 1257, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 1257, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 1257, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 1258, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 1258, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1258, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1258, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 1258, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1309)
Conflict at state: 1258, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 1258, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 1258, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 1258, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 1276, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 138)
Conflict at state: 1276, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 84)
Conflict at state: 1276, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 85)
Conflict at state: 1276, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 164)
Conflict at state: 1276, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 190)
Conflict at state: 1276, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 139)
Conflict at state: 1276, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 140)
Conflict at state: 1276, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 137)
Conflict at state: 1301, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 1337)
Conflict at state: 1303, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 1339)

8097 Conflict(s) found in grammar.
Done.
